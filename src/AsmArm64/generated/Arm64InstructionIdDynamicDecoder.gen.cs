// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

namespace AsmArm64;

static partial class Arm64InstructionIdDynamicDecoder
{
    public static Arm64InstructionId ResolveBetterAlias(Arm64InstructionId id, Arm64RawInstruction rawValue)
        => id switch
        {
            Arm64InstructionId.BFM_32m_bitfield => Resolve_BFM_32m_bitfield(rawValue),
            Arm64InstructionId.BFM_64m_bitfield => Resolve_BFM_64m_bitfield(rawValue),
            Arm64InstructionId.CSINC_32_condsel => Resolve_CSINC_32_condsel(rawValue),
            Arm64InstructionId.CSINC_64_condsel => Resolve_CSINC_64_condsel(rawValue),
            Arm64InstructionId.CSINV_32_condsel => Resolve_CSINV_32_condsel(rawValue),
            Arm64InstructionId.CSINV_64_condsel => Resolve_CSINV_64_condsel(rawValue),
            Arm64InstructionId.CSNEG_32_condsel => Resolve_CSNEG_32_condsel(rawValue),
            Arm64InstructionId.CSNEG_64_condsel => Resolve_CSNEG_64_condsel(rawValue),
            Arm64InstructionId.EXTR_32_extract => Resolve_EXTR_32_extract(rawValue),
            Arm64InstructionId.EXTR_64_extract => Resolve_EXTR_64_extract(rawValue),
            Arm64InstructionId.MOVN_32_movewide => Resolve_MOVN_32_movewide(rawValue),
            Arm64InstructionId.MOVN_64_movewide => Resolve_MOVN_64_movewide(rawValue),
            Arm64InstructionId.MOVZ_32_movewide => Resolve_MOVZ_32_movewide(rawValue),
            Arm64InstructionId.MOVZ_64_movewide => Resolve_MOVZ_64_movewide(rawValue),
            Arm64InstructionId.SBFM_32m_bitfield => Resolve_SBFM_32m_bitfield(rawValue),
            Arm64InstructionId.SBFM_64m_bitfield => Resolve_SBFM_64m_bitfield(rawValue),
            Arm64InstructionId.SYS_cr_systeminstrs => Resolve_SYS_cr_systeminstrs(rawValue),
            Arm64InstructionId.UBFM_32m_bitfield => Resolve_UBFM_32m_bitfield(rawValue),
            Arm64InstructionId.UBFM_64m_bitfield => Resolve_UBFM_64m_bitfield(rawValue),
            Arm64InstructionId.ORR_asimdsame_only => Resolve_ORR_asimdsame_only(rawValue),
            _ => throw new InvalidOperationException($"Invalid instruction id {id} not supported by dynamic better alias resolution")
        };
    
    /// <summary>
    /// Condition: UInt(imms) &lt; UInt(immr) => BFI_bfm_32m_bitfield
    /// Condition: UInt(imms) >= UInt(immr) => BFXIL_bfm_32m_bitfield
    /// </summary>
    private static partial Arm64InstructionId Resolve_BFM_32m_bitfield(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: UInt(imms) &lt; UInt(immr) => BFI_bfm_64m_bitfield
    /// Condition: UInt(imms) >= UInt(immr) => BFXIL_bfm_64m_bitfield
    /// </summary>
    private static partial Arm64InstructionId Resolve_BFM_64m_bitfield(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: Rn == Rm => CINC_csinc_32_condsel
    /// </summary>
    private static partial Arm64InstructionId Resolve_CSINC_32_condsel(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: Rn == Rm => CINC_csinc_64_condsel
    /// </summary>
    private static partial Arm64InstructionId Resolve_CSINC_64_condsel(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: Rn == Rm => CINV_csinv_32_condsel
    /// </summary>
    private static partial Arm64InstructionId Resolve_CSINV_32_condsel(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: Rn == Rm => CINV_csinv_64_condsel
    /// </summary>
    private static partial Arm64InstructionId Resolve_CSINV_64_condsel(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: Rn == Rm => CNEG_csneg_32_condsel
    /// </summary>
    private static partial Arm64InstructionId Resolve_CSNEG_32_condsel(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: Rn == Rm => CNEG_csneg_64_condsel
    /// </summary>
    private static partial Arm64InstructionId Resolve_CSNEG_64_condsel(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: Rn == Rm => ROR_extr_32_extract
    /// </summary>
    private static partial Arm64InstructionId Resolve_EXTR_32_extract(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: Rn == Rm => ROR_extr_64_extract
    /// </summary>
    private static partial Arm64InstructionId Resolve_EXTR_64_extract(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: !(IsZero(imm16) &amp;&amp; hw != '00') &amp;&amp; !IsOnes(imm16) => MOV_movn_32_movewide
    /// </summary>
    private static partial Arm64InstructionId Resolve_MOVN_32_movewide(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: !(IsZero(imm16) &amp;&amp; hw != '00') => MOV_movn_64_movewide
    /// </summary>
    private static partial Arm64InstructionId Resolve_MOVN_64_movewide(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: !(IsZero(imm16) &amp;&amp; hw != '00') => MOV_movz_32_movewide
    /// </summary>
    private static partial Arm64InstructionId Resolve_MOVZ_32_movewide(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: !(IsZero(imm16) &amp;&amp; hw != '00') => MOV_movz_64_movewide
    /// </summary>
    private static partial Arm64InstructionId Resolve_MOVZ_64_movewide(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: UInt(imms) &lt; UInt(immr) => SBFIZ_sbfm_32m_bitfield
    /// Condition: BFXPreferred(sf, opc&lt;1>, imms, immr) => SBFX_sbfm_32m_bitfield
    /// </summary>
    private static partial Arm64InstructionId Resolve_SBFM_32m_bitfield(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: UInt(imms) &lt; UInt(immr) => SBFIZ_sbfm_64m_bitfield
    /// Condition: BFXPreferred(sf, opc&lt;1>, imms, immr) => SBFX_sbfm_64m_bitfield
    /// </summary>
    private static partial Arm64InstructionId Resolve_SBFM_64m_bitfield(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: SysOp(op1, '0111', CRm, op2) == Sys_DC => DC_sys_cr_systeminstrs
    /// Condition: SysOp(op1, '0111', CRm, op2) == Sys_IC => IC_sys_cr_systeminstrs
    /// </summary>
    private static Arm64InstructionId Resolve_SYS_cr_systeminstrs(Arm64RawInstruction rawValue)
    {
        var sysValue = (rawValue >> 5) & 0b_111_1111_1111_111;
        return sysValue switch
        {
            0b00001111000000 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b00001111000001 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b00001111000010 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b00001111000011 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b00001111001000 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b00001111001001 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b00001111001010 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b10001111000000 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b10001111000001 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b10001111001010 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b10001111000100 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b10001111000101 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b10001111000110 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b10001111000111 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b11001111000000 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b11001111000001 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b11001111001010 => Arm64InstructionId.AT_sys_cr_systeminstrs,
            0b00101110010100 => Arm64InstructionId.BRB_sys_cr_systeminstrs,
            0b00101110010101 => Arm64InstructionId.BRB_sys_cr_systeminstrs,
            0b00001110110001 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001110110010 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001110110011 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001110110100 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001110110101 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001110110110 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001111010010 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001111010100 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001111010110 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001111110010 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001111110100 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001111110110 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101110100001 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101110100011 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101110100100 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101111010001 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101111010011 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101111010101 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101111011001 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101111100001 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101111100011 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101111100101 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101111101001 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101111101011 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101111101101 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101111110001 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101111110011 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b01101111110101 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b10001111110000 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b10001111110111 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b11001111110001 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b11001111110101 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001111111001 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001111111101 => Arm64InstructionId.DC_sys_cr_systeminstrs,
            0b00001110001000 => Arm64InstructionId.IC_sys_cr_systeminstrs,
            0b00001110101000 => Arm64InstructionId.IC_sys_cr_systeminstrs,
            0b01101110101001 => Arm64InstructionId.IC_sys_cr_systeminstrs,
            0b00010000001000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000001001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000001010 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000001011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000001101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000001111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000010001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000010011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000010101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000010111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000011000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000011001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000011010 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000011011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000011101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000011111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000101001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000101011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000101101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000101111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000110001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000110011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000110101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000110111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000111000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000111001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000111010 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000111011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000111101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010000111111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010001000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010001001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010001010 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010001011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010001101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010001111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010010001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010010011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010010101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010010111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010011000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010011001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010011010 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010011011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010011101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010011111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010101001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010101011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010101101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010101111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010110001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010110011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010110101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010110111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010111000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010111001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010111010 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010111011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010111101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b00010010111111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000000001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000000010 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000000101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000000110 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000001000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000001001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000001100 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000001101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000001110 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000010001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000010101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000011000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000011001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000011100 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000011101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000011110 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000100000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000100001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000100010 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000100011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000100100 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000100101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000100110 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000100111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000101001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000101101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000110001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000110101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000111000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000111001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000111100 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000111101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010000111110 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010000001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010000010 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010000101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010000110 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010001000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010001001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010001100 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010001101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010001110 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010010001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010010101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010011000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010011001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010011100 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010011101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010011110 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010100000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010100001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010100010 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010100011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010100100 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010100101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010100110 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010100111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010101001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010101101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010110001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010110101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010111000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010111001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010111100 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010111101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b10010010111110 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000001000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000001001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000001100 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000001101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000010001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000010101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000011000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000011001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000011101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000100011 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000100111 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000101001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000101101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000110001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000110101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000111000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000111001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000111100 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010000111101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010001000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010001001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010001101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010010001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010010101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010011000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010011001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010011101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010101001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010101101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010110001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010110101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010111000 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010111001 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            0b11010010111101 => Arm64InstructionId.TLBI_sys_cr_systeminstrs,
            _ => Arm64InstructionId.SYS_cr_systeminstrs,
        };
    }
    /// <summary>
    /// Condition: UInt(imms) + 1 == UInt(immr) => LSL_ubfm_32m_bitfield
    /// Condition: UInt(imms) &lt; UInt(immr) => UBFIZ_ubfm_32m_bitfield
    /// Condition: BFXPreferred(sf, opc&lt;1>, imms, immr) => UBFX_ubfm_32m_bitfield
    /// </summary>
    private static partial Arm64InstructionId Resolve_UBFM_32m_bitfield(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: UInt(imms) + 1 == UInt(immr) => LSL_ubfm_64m_bitfield
    /// Condition: UInt(imms) &lt; UInt(immr) => UBFIZ_ubfm_64m_bitfield
    /// Condition: BFXPreferred(sf, opc&lt;1>, imms, immr) => UBFX_ubfm_64m_bitfield
    /// </summary>
    private static partial Arm64InstructionId Resolve_UBFM_64m_bitfield(Arm64RawInstruction rawValue);
    /// <summary>
    /// Condition: Rm == Rn => MOV_orr_asimdsame_only
    /// </summary>
    private static partial Arm64InstructionId Resolve_ORR_asimdsame_only(Arm64RawInstruction rawValue);
}
