// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
namespace AsmArm64;

partial class Arm64Factory
{
    /// <summary>
    /// Accelerator Data
    /// </summary>
    public static Arm64SystemRegister ACCDATA_EL1 => new(Arm64SystemRegisterKnownId.ACCDATA_EL1, 0xC685, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ACTLR_EL1 => new(Arm64SystemRegisterKnownId.ACTLR_EL1, 0xC081, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ACTLR_EL12 => new(Arm64SystemRegisterKnownId.ACTLR_EL12, 0xE881, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister ACTLR_EL2 => new(Arm64SystemRegisterKnownId.ACTLR_EL2, 0xE081, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Control Register (EL3)
    /// </summary>
    public static Arm64SystemRegister ACTLR_EL3 => new(Arm64SystemRegisterKnownId.ACTLR_EL3, 0xF081, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ACTLRALIAS_EL1 => new(Arm64SystemRegisterKnownId.ACTLRALIAS_EL1, 0xC0A5, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Control Masking Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ACTLRMASK_EL1 => new(Arm64SystemRegisterKnownId.ACTLRMASK_EL1, 0xC0A1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Control Masking Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ACTLRMASK_EL12 => new(Arm64SystemRegisterKnownId.ACTLRMASK_EL12, 0xE8A1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Control Masking Register (EL2)
    /// </summary>
    public static Arm64SystemRegister ACTLRMASK_EL2 => new(Arm64SystemRegisterKnownId.ACTLRMASK_EL2, 0xE0A1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Fault Status Register 0 (EL1)
    /// </summary>
    public static Arm64SystemRegister AFSR0_EL1 => new(Arm64SystemRegisterKnownId.AFSR0_EL1, 0xC288, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Fault Status Register 0 (EL1)
    /// </summary>
    public static Arm64SystemRegister AFSR0_EL12 => new(Arm64SystemRegisterKnownId.AFSR0_EL12, 0xEA88, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Fault Status Register 0 (EL2)
    /// </summary>
    public static Arm64SystemRegister AFSR0_EL2 => new(Arm64SystemRegisterKnownId.AFSR0_EL2, 0xE288, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Fault Status Register 0 (EL3)
    /// </summary>
    public static Arm64SystemRegister AFSR0_EL3 => new(Arm64SystemRegisterKnownId.AFSR0_EL3, 0xF288, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Fault Status Register 1 (EL1)
    /// </summary>
    public static Arm64SystemRegister AFSR1_EL1 => new(Arm64SystemRegisterKnownId.AFSR1_EL1, 0xC289, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Fault Status Register 1 (EL1)
    /// </summary>
    public static Arm64SystemRegister AFSR1_EL12 => new(Arm64SystemRegisterKnownId.AFSR1_EL12, 0xEA89, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Fault Status Register 1 (EL2)
    /// </summary>
    public static Arm64SystemRegister AFSR1_EL2 => new(Arm64SystemRegisterKnownId.AFSR1_EL2, 0xE289, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Fault Status Register 1 (EL3)
    /// </summary>
    public static Arm64SystemRegister AFSR1_EL3 => new(Arm64SystemRegisterKnownId.AFSR1_EL3, 0xF289, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary ID Register
    /// </summary>
    public static Arm64SystemRegister AIDR_EL1 => new(Arm64SystemRegisterKnownId.AIDR_EL1, 0xC807, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// TLB Invalidate All, EL1
    /// </summary>
    public static Arm64SystemRegister ALLE1 => new(Arm64SystemRegisterKnownId.ALLE1, 0x643C, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister ALLE1IS => new(Arm64SystemRegisterKnownId.ALLE1IS, 0x641C, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister ALLE1ISNXS => new(Arm64SystemRegisterKnownId.ALLE1ISNXS, 0x649C, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL1
    /// </summary>
    public static Arm64SystemRegister ALLE1NXS => new(Arm64SystemRegisterKnownId.ALLE1NXS, 0x64BC, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister ALLE1OS => new(Arm64SystemRegisterKnownId.ALLE1OS, 0x640C, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister ALLE1OSNXS => new(Arm64SystemRegisterKnownId.ALLE1OSNXS, 0x648C, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL2
    /// </summary>
    public static Arm64SystemRegister ALLE2 => new(Arm64SystemRegisterKnownId.ALLE2, 0x6438, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL2, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister ALLE2IS => new(Arm64SystemRegisterKnownId.ALLE2IS, 0x6418, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL2, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister ALLE2ISNXS => new(Arm64SystemRegisterKnownId.ALLE2ISNXS, 0x6498, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL2
    /// </summary>
    public static Arm64SystemRegister ALLE2NXS => new(Arm64SystemRegisterKnownId.ALLE2NXS, 0x64B8, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL2, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister ALLE2OS => new(Arm64SystemRegisterKnownId.ALLE2OS, 0x6408, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL2, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister ALLE2OSNXS => new(Arm64SystemRegisterKnownId.ALLE2OSNXS, 0x6488, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL3
    /// </summary>
    public static Arm64SystemRegister ALLE3 => new(Arm64SystemRegisterKnownId.ALLE3, 0x7438, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL3, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister ALLE3IS => new(Arm64SystemRegisterKnownId.ALLE3IS, 0x7418, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL3, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister ALLE3ISNXS => new(Arm64SystemRegisterKnownId.ALLE3ISNXS, 0x7498, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL3
    /// </summary>
    public static Arm64SystemRegister ALLE3NXS => new(Arm64SystemRegisterKnownId.ALLE3NXS, 0x74B8, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL3, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister ALLE3OS => new(Arm64SystemRegisterKnownId.ALLE3OS, 0x7408, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate All, EL3, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister ALLE3OSNXS => new(Arm64SystemRegisterKnownId.ALLE3OSNXS, 0x7488, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// All Interrupt Mask Bit
    /// </summary>
    public static Arm64SystemRegister _ALLINT => new(Arm64SystemRegisterKnownId.ALLINT, 0xC218, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Memory Attribute Indirection Register (EL1)
    /// </summary>
    public static Arm64SystemRegister AMAIR_EL1 => new(Arm64SystemRegisterKnownId.AMAIR_EL1, 0xC518, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Memory Attribute Indirection Register (EL1)
    /// </summary>
    public static Arm64SystemRegister AMAIR_EL12 => new(Arm64SystemRegisterKnownId.AMAIR_EL12, 0xED18, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Memory Attribute Indirection Register (EL2)
    /// </summary>
    public static Arm64SystemRegister AMAIR_EL2 => new(Arm64SystemRegisterKnownId.AMAIR_EL2, 0xE518, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Auxiliary Memory Attribute Indirection Register (EL3)
    /// </summary>
    public static Arm64SystemRegister AMAIR_EL3 => new(Arm64SystemRegisterKnownId.AMAIR_EL3, 0xF518, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Auxiliary Memory Attribute Indirection Register (EL1)
    /// </summary>
    public static Arm64SystemRegister AMAIR2_EL1 => new(Arm64SystemRegisterKnownId.AMAIR2_EL1, 0xC519, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Auxiliary Memory Attribute Indirection Register (EL1)
    /// </summary>
    public static Arm64SystemRegister AMAIR2_EL12 => new(Arm64SystemRegisterKnownId.AMAIR2_EL12, 0xED19, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Auxiliary Memory Attribute Indirection Register (EL2)
    /// </summary>
    public static Arm64SystemRegister AMAIR2_EL2 => new(Arm64SystemRegisterKnownId.AMAIR2_EL2, 0xE519, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Auxiliary Memory Attribute Indirection Register (EL3)
    /// </summary>
    public static Arm64SystemRegister AMAIR2_EL3 => new(Arm64SystemRegisterKnownId.AMAIR2_EL3, 0xF519, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Configuration Register
    /// </summary>
    public static Arm64SystemRegister AMCFGR_EL0 => new(Arm64SystemRegisterKnownId.AMCFGR_EL0, 0xDE91, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Activity Monitors Counter Group 1 Identification Register
    /// </summary>
    public static Arm64SystemRegister AMCG1IDR_EL0 => new(Arm64SystemRegisterKnownId.AMCG1IDR_EL0, 0xDE96, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Activity Monitors Counter Group Configuration Register
    /// </summary>
    public static Arm64SystemRegister AMCGCR_EL0 => new(Arm64SystemRegisterKnownId.AMCGCR_EL0, 0xDE92, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Activity Monitors Count Enable Clear Register 0
    /// </summary>
    public static Arm64SystemRegister AMCNTENCLR0_EL0 => new(Arm64SystemRegisterKnownId.AMCNTENCLR0_EL0, 0xDE94, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Count Enable Clear Register 1
    /// </summary>
    public static Arm64SystemRegister AMCNTENCLR1_EL0 => new(Arm64SystemRegisterKnownId.AMCNTENCLR1_EL0, 0xDE98, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Count Enable Set Register 0
    /// </summary>
    public static Arm64SystemRegister AMCNTENSET0_EL0 => new(Arm64SystemRegisterKnownId.AMCNTENSET0_EL0, 0xDE95, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Count Enable Set Register 1
    /// </summary>
    public static Arm64SystemRegister AMCNTENSET1_EL0 => new(Arm64SystemRegisterKnownId.AMCNTENSET1_EL0, 0xDE99, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Control Register
    /// </summary>
    public static Arm64SystemRegister AMCR_EL0 => new(Arm64SystemRegisterKnownId.AMCR_EL0, 0xDE90, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR00_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR00_EL0, 0xDEA0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR01_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR01_EL0, 0xDEA1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR02_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR02_EL0, 0xDEA2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR03_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR03_EL0, 0xDEA3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR10_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR10_EL0, 0xDEE0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR11_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR11_EL0, 0xDEE1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR110_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR110_EL0, 0xDEEA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR111_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR111_EL0, 0xDEEB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR112_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR112_EL0, 0xDEEC, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR113_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR113_EL0, 0xDEED, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR114_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR114_EL0, 0xDEEE, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR115_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR115_EL0, 0xDEEF, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR12_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR12_EL0, 0xDEE2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR13_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR13_EL0, 0xDEE3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR14_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR14_EL0, 0xDEE4, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR15_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR15_EL0, 0xDEE5, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR16_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR16_EL0, 0xDEE6, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR17_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR17_EL0, 0xDEE7, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR18_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR18_EL0, 0xDEE8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTR19_EL0 => new(Arm64SystemRegisterKnownId.AMEVCNTR19_EL0, 0xDEE9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF00_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF00_EL2, 0xE6C0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF01_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF01_EL2, 0xE6C1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF010_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF010_EL2, 0xE6CA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF011_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF011_EL2, 0xE6CB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF012_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF012_EL2, 0xE6CC, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF013_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF013_EL2, 0xE6CD, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF014_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF014_EL2, 0xE6CE, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF015_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF015_EL2, 0xE6CF, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF02_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF02_EL2, 0xE6C2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF03_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF03_EL2, 0xE6C3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF04_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF04_EL2, 0xE6C4, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF05_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF05_EL2, 0xE6C5, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF06_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF06_EL2, 0xE6C6, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF07_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF07_EL2, 0xE6C7, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF08_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF08_EL2, 0xE6C8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF09_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF09_EL2, 0xE6C9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF10_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF10_EL2, 0xE6D0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF11_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF11_EL2, 0xE6D1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF110_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF110_EL2, 0xE6DA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF111_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF111_EL2, 0xE6DB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF112_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF112_EL2, 0xE6DC, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF113_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF113_EL2, 0xE6DD, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF114_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF114_EL2, 0xE6DE, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF115_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF115_EL2, 0xE6DF, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF12_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF12_EL2, 0xE6D2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF13_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF13_EL2, 0xE6D3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF14_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF14_EL2, 0xE6D4, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF15_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF15_EL2, 0xE6D5, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF16_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF16_EL2, 0xE6D6, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF17_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF17_EL2, 0xE6D7, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF18_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF18_EL2, 0xE6D8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Counter Virtual Offset Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVCNTVOFF19_EL2 => new(Arm64SystemRegisterKnownId.AMEVCNTVOFF19_EL2, 0xE6D9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER00_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER00_EL0, 0xDEB0, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Activity Monitors Event Type Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER01_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER01_EL0, 0xDEB1, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Activity Monitors Event Type Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER02_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER02_EL0, 0xDEB2, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Activity Monitors Event Type Registers 0
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER03_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER03_EL0, 0xDEB3, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER10_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER10_EL0, 0xDEF0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER11_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER11_EL0, 0xDEF1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER110_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER110_EL0, 0xDEFA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER111_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER111_EL0, 0xDEFB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER112_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER112_EL0, 0xDEFC, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER113_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER113_EL0, 0xDEFD, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER114_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER114_EL0, 0xDEFE, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER115_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER115_EL0, 0xDEFF, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER12_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER12_EL0, 0xDEF2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER13_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER13_EL0, 0xDEF3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER14_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER14_EL0, 0xDEF4, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER15_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER15_EL0, 0xDEF5, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER16_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER16_EL0, 0xDEF6, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER17_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER17_EL0, 0xDEF7, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER18_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER18_EL0, 0xDEF8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors Event Type Registers 1
    /// </summary>
    public static Arm64SystemRegister AMEVTYPER19_EL0 => new(Arm64SystemRegisterKnownId.AMEVTYPER19_EL0, 0xDEF9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Activity Monitors User Enable Register
    /// </summary>
    public static Arm64SystemRegister AMUSERENR_EL0 => new(Arm64SystemRegisterKnownId.AMUSERENR_EL0, 0xDE93, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Associate PA space
    /// </summary>
    public static Arm64SystemRegister APAS => new(Arm64SystemRegisterKnownId.APAS, 0x7380, Arm64SystemRegisterKind.APAS);
    /// <summary>
    /// Pointer Authentication Key A for Data (bits[127:64]) 
    /// </summary>
    public static Arm64SystemRegister APDAKeyHi_EL1 => new(Arm64SystemRegisterKnownId.APDAKeyHi_EL1, 0xC111, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Pointer Authentication Key A for Data (bits[63:0]) 
    /// </summary>
    public static Arm64SystemRegister APDAKeyLo_EL1 => new(Arm64SystemRegisterKnownId.APDAKeyLo_EL1, 0xC110, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Pointer Authentication Key B for Data (bits[127:64]) 
    /// </summary>
    public static Arm64SystemRegister APDBKeyHi_EL1 => new(Arm64SystemRegisterKnownId.APDBKeyHi_EL1, 0xC113, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Pointer Authentication Key B for Data (bits[63:0]) 
    /// </summary>
    public static Arm64SystemRegister APDBKeyLo_EL1 => new(Arm64SystemRegisterKnownId.APDBKeyLo_EL1, 0xC112, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Pointer Authentication Key A for Code (bits[127:64]) 
    /// </summary>
    public static Arm64SystemRegister APGAKeyHi_EL1 => new(Arm64SystemRegisterKnownId.APGAKeyHi_EL1, 0xC119, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Pointer Authentication Key A for Code (bits[63:0]) 
    /// </summary>
    public static Arm64SystemRegister APGAKeyLo_EL1 => new(Arm64SystemRegisterKnownId.APGAKeyLo_EL1, 0xC118, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Pointer Authentication Key A for Instruction (bits[127:64]) 
    /// </summary>
    public static Arm64SystemRegister APIAKeyHi_EL1 => new(Arm64SystemRegisterKnownId.APIAKeyHi_EL1, 0xC109, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Pointer Authentication Key A for Instruction (bits[63:0]) 
    /// </summary>
    public static Arm64SystemRegister APIAKeyLo_EL1 => new(Arm64SystemRegisterKnownId.APIAKeyLo_EL1, 0xC108, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Pointer Authentication Key B for Instruction (bits[127:64]) 
    /// </summary>
    public static Arm64SystemRegister APIBKeyHi_EL1 => new(Arm64SystemRegisterKnownId.APIBKeyHi_EL1, 0xC10B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Pointer Authentication Key B for Instruction (bits[63:0]) 
    /// </summary>
    public static Arm64SystemRegister APIBKeyLo_EL1 => new(Arm64SystemRegisterKnownId.APIBKeyLo_EL1, 0xC10A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// TLB Invalidate by ASID, EL1
    /// </summary>
    public static Arm64SystemRegister ASIDE1 => new(Arm64SystemRegisterKnownId.ASIDE1, 0x443A, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by ASID, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister ASIDE1IS => new(Arm64SystemRegisterKnownId.ASIDE1IS, 0x441A, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by ASID, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister ASIDE1ISNXS => new(Arm64SystemRegisterKnownId.ASIDE1ISNXS, 0x449A, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by ASID, EL1
    /// </summary>
    public static Arm64SystemRegister ASIDE1NXS => new(Arm64SystemRegisterKnownId.ASIDE1NXS, 0x44BA, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by ASID, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister ASIDE1OS => new(Arm64SystemRegisterKnownId.ASIDE1OS, 0x440A, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by ASID, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister ASIDE1OSNXS => new(Arm64SystemRegisterKnownId.ASIDE1OSNXS, 0x448A, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// Branch Record Buffer Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister BRBCR_EL1 => new(Arm64SystemRegisterKnownId.BRBCR_EL1, 0x8C80, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Branch Record Buffer Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister BRBCR_EL12 => new(Arm64SystemRegisterKnownId.BRBCR_EL12, 0xAC80, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Branch Record Buffer Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister BRBCR_EL2 => new(Arm64SystemRegisterKnownId.BRBCR_EL2, 0xA480, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Branch Record Buffer Function Control Register
    /// </summary>
    public static Arm64SystemRegister BRBFCR_EL1 => new(Arm64SystemRegisterKnownId.BRBFCR_EL1, 0x8C81, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Branch Record Buffer ID0 Register
    /// </summary>
    public static Arm64SystemRegister BRBIDR0_EL1 => new(Arm64SystemRegisterKnownId.BRBIDR0_EL1, 0x8C90, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 0
    /// </summary>
    public static Arm64SystemRegister BRBINF0_EL1 => new(Arm64SystemRegisterKnownId.BRBINF0_EL1, 0x8C00, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 1
    /// </summary>
    public static Arm64SystemRegister BRBINF1_EL1 => new(Arm64SystemRegisterKnownId.BRBINF1_EL1, 0x8C08, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 10
    /// </summary>
    public static Arm64SystemRegister BRBINF10_EL1 => new(Arm64SystemRegisterKnownId.BRBINF10_EL1, 0x8C50, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 11
    /// </summary>
    public static Arm64SystemRegister BRBINF11_EL1 => new(Arm64SystemRegisterKnownId.BRBINF11_EL1, 0x8C58, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 12
    /// </summary>
    public static Arm64SystemRegister BRBINF12_EL1 => new(Arm64SystemRegisterKnownId.BRBINF12_EL1, 0x8C60, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 13
    /// </summary>
    public static Arm64SystemRegister BRBINF13_EL1 => new(Arm64SystemRegisterKnownId.BRBINF13_EL1, 0x8C68, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 14
    /// </summary>
    public static Arm64SystemRegister BRBINF14_EL1 => new(Arm64SystemRegisterKnownId.BRBINF14_EL1, 0x8C70, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 15
    /// </summary>
    public static Arm64SystemRegister BRBINF15_EL1 => new(Arm64SystemRegisterKnownId.BRBINF15_EL1, 0x8C78, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 16
    /// </summary>
    public static Arm64SystemRegister BRBINF16_EL1 => new(Arm64SystemRegisterKnownId.BRBINF16_EL1, 0x8C04, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 17
    /// </summary>
    public static Arm64SystemRegister BRBINF17_EL1 => new(Arm64SystemRegisterKnownId.BRBINF17_EL1, 0x8C0C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 18
    /// </summary>
    public static Arm64SystemRegister BRBINF18_EL1 => new(Arm64SystemRegisterKnownId.BRBINF18_EL1, 0x8C14, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 19
    /// </summary>
    public static Arm64SystemRegister BRBINF19_EL1 => new(Arm64SystemRegisterKnownId.BRBINF19_EL1, 0x8C1C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 2
    /// </summary>
    public static Arm64SystemRegister BRBINF2_EL1 => new(Arm64SystemRegisterKnownId.BRBINF2_EL1, 0x8C10, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 20
    /// </summary>
    public static Arm64SystemRegister BRBINF20_EL1 => new(Arm64SystemRegisterKnownId.BRBINF20_EL1, 0x8C24, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 21
    /// </summary>
    public static Arm64SystemRegister BRBINF21_EL1 => new(Arm64SystemRegisterKnownId.BRBINF21_EL1, 0x8C2C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 22
    /// </summary>
    public static Arm64SystemRegister BRBINF22_EL1 => new(Arm64SystemRegisterKnownId.BRBINF22_EL1, 0x8C34, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 23
    /// </summary>
    public static Arm64SystemRegister BRBINF23_EL1 => new(Arm64SystemRegisterKnownId.BRBINF23_EL1, 0x8C3C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 24
    /// </summary>
    public static Arm64SystemRegister BRBINF24_EL1 => new(Arm64SystemRegisterKnownId.BRBINF24_EL1, 0x8C44, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 25
    /// </summary>
    public static Arm64SystemRegister BRBINF25_EL1 => new(Arm64SystemRegisterKnownId.BRBINF25_EL1, 0x8C4C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 26
    /// </summary>
    public static Arm64SystemRegister BRBINF26_EL1 => new(Arm64SystemRegisterKnownId.BRBINF26_EL1, 0x8C54, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 27
    /// </summary>
    public static Arm64SystemRegister BRBINF27_EL1 => new(Arm64SystemRegisterKnownId.BRBINF27_EL1, 0x8C5C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 28
    /// </summary>
    public static Arm64SystemRegister BRBINF28_EL1 => new(Arm64SystemRegisterKnownId.BRBINF28_EL1, 0x8C64, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 29
    /// </summary>
    public static Arm64SystemRegister BRBINF29_EL1 => new(Arm64SystemRegisterKnownId.BRBINF29_EL1, 0x8C6C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 3
    /// </summary>
    public static Arm64SystemRegister BRBINF3_EL1 => new(Arm64SystemRegisterKnownId.BRBINF3_EL1, 0x8C18, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 30
    /// </summary>
    public static Arm64SystemRegister BRBINF30_EL1 => new(Arm64SystemRegisterKnownId.BRBINF30_EL1, 0x8C74, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 31
    /// </summary>
    public static Arm64SystemRegister BRBINF31_EL1 => new(Arm64SystemRegisterKnownId.BRBINF31_EL1, 0x8C7C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 4
    /// </summary>
    public static Arm64SystemRegister BRBINF4_EL1 => new(Arm64SystemRegisterKnownId.BRBINF4_EL1, 0x8C20, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 5
    /// </summary>
    public static Arm64SystemRegister BRBINF5_EL1 => new(Arm64SystemRegisterKnownId.BRBINF5_EL1, 0x8C28, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 6
    /// </summary>
    public static Arm64SystemRegister BRBINF6_EL1 => new(Arm64SystemRegisterKnownId.BRBINF6_EL1, 0x8C30, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 7
    /// </summary>
    public static Arm64SystemRegister BRBINF7_EL1 => new(Arm64SystemRegisterKnownId.BRBINF7_EL1, 0x8C38, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 8
    /// </summary>
    public static Arm64SystemRegister BRBINF8_EL1 => new(Arm64SystemRegisterKnownId.BRBINF8_EL1, 0x8C40, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Register 9
    /// </summary>
    public static Arm64SystemRegister BRBINF9_EL1 => new(Arm64SystemRegisterKnownId.BRBINF9_EL1, 0x8C48, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Information Injection Register
    /// </summary>
    public static Arm64SystemRegister BRBINFINJ_EL1 => new(Arm64SystemRegisterKnownId.BRBINFINJ_EL1, 0x8C88, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Branch Record Buffer Source Address Register 0
    /// </summary>
    public static Arm64SystemRegister BRBSRC0_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC0_EL1, 0x8C01, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 1
    /// </summary>
    public static Arm64SystemRegister BRBSRC1_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC1_EL1, 0x8C09, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 10
    /// </summary>
    public static Arm64SystemRegister BRBSRC10_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC10_EL1, 0x8C51, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 11
    /// </summary>
    public static Arm64SystemRegister BRBSRC11_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC11_EL1, 0x8C59, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 12
    /// </summary>
    public static Arm64SystemRegister BRBSRC12_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC12_EL1, 0x8C61, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 13
    /// </summary>
    public static Arm64SystemRegister BRBSRC13_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC13_EL1, 0x8C69, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 14
    /// </summary>
    public static Arm64SystemRegister BRBSRC14_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC14_EL1, 0x8C71, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 15
    /// </summary>
    public static Arm64SystemRegister BRBSRC15_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC15_EL1, 0x8C79, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 16
    /// </summary>
    public static Arm64SystemRegister BRBSRC16_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC16_EL1, 0x8C05, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 17
    /// </summary>
    public static Arm64SystemRegister BRBSRC17_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC17_EL1, 0x8C0D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 18
    /// </summary>
    public static Arm64SystemRegister BRBSRC18_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC18_EL1, 0x8C15, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 19
    /// </summary>
    public static Arm64SystemRegister BRBSRC19_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC19_EL1, 0x8C1D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 2
    /// </summary>
    public static Arm64SystemRegister BRBSRC2_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC2_EL1, 0x8C11, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 20
    /// </summary>
    public static Arm64SystemRegister BRBSRC20_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC20_EL1, 0x8C25, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 21
    /// </summary>
    public static Arm64SystemRegister BRBSRC21_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC21_EL1, 0x8C2D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 22
    /// </summary>
    public static Arm64SystemRegister BRBSRC22_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC22_EL1, 0x8C35, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 23
    /// </summary>
    public static Arm64SystemRegister BRBSRC23_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC23_EL1, 0x8C3D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 24
    /// </summary>
    public static Arm64SystemRegister BRBSRC24_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC24_EL1, 0x8C45, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 25
    /// </summary>
    public static Arm64SystemRegister BRBSRC25_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC25_EL1, 0x8C4D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 26
    /// </summary>
    public static Arm64SystemRegister BRBSRC26_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC26_EL1, 0x8C55, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 27
    /// </summary>
    public static Arm64SystemRegister BRBSRC27_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC27_EL1, 0x8C5D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 28
    /// </summary>
    public static Arm64SystemRegister BRBSRC28_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC28_EL1, 0x8C65, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 29
    /// </summary>
    public static Arm64SystemRegister BRBSRC29_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC29_EL1, 0x8C6D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 3
    /// </summary>
    public static Arm64SystemRegister BRBSRC3_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC3_EL1, 0x8C19, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 30
    /// </summary>
    public static Arm64SystemRegister BRBSRC30_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC30_EL1, 0x8C75, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 31
    /// </summary>
    public static Arm64SystemRegister BRBSRC31_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC31_EL1, 0x8C7D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 4
    /// </summary>
    public static Arm64SystemRegister BRBSRC4_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC4_EL1, 0x8C21, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 5
    /// </summary>
    public static Arm64SystemRegister BRBSRC5_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC5_EL1, 0x8C29, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 6
    /// </summary>
    public static Arm64SystemRegister BRBSRC6_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC6_EL1, 0x8C31, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 7
    /// </summary>
    public static Arm64SystemRegister BRBSRC7_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC7_EL1, 0x8C39, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 8
    /// </summary>
    public static Arm64SystemRegister BRBSRC8_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC8_EL1, 0x8C41, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Register 9
    /// </summary>
    public static Arm64SystemRegister BRBSRC9_EL1 => new(Arm64SystemRegisterKnownId.BRBSRC9_EL1, 0x8C49, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Source Address Injection Register
    /// </summary>
    public static Arm64SystemRegister BRBSRCINJ_EL1 => new(Arm64SystemRegisterKnownId.BRBSRCINJ_EL1, 0x8C89, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Branch Record Buffer Target Address Register 0
    /// </summary>
    public static Arm64SystemRegister BRBTGT0_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT0_EL1, 0x8C02, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 1
    /// </summary>
    public static Arm64SystemRegister BRBTGT1_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT1_EL1, 0x8C0A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 10
    /// </summary>
    public static Arm64SystemRegister BRBTGT10_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT10_EL1, 0x8C52, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 11
    /// </summary>
    public static Arm64SystemRegister BRBTGT11_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT11_EL1, 0x8C5A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 12
    /// </summary>
    public static Arm64SystemRegister BRBTGT12_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT12_EL1, 0x8C62, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 13
    /// </summary>
    public static Arm64SystemRegister BRBTGT13_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT13_EL1, 0x8C6A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 14
    /// </summary>
    public static Arm64SystemRegister BRBTGT14_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT14_EL1, 0x8C72, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 15
    /// </summary>
    public static Arm64SystemRegister BRBTGT15_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT15_EL1, 0x8C7A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 16
    /// </summary>
    public static Arm64SystemRegister BRBTGT16_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT16_EL1, 0x8C06, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 17
    /// </summary>
    public static Arm64SystemRegister BRBTGT17_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT17_EL1, 0x8C0E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 18
    /// </summary>
    public static Arm64SystemRegister BRBTGT18_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT18_EL1, 0x8C16, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 19
    /// </summary>
    public static Arm64SystemRegister BRBTGT19_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT19_EL1, 0x8C1E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 2
    /// </summary>
    public static Arm64SystemRegister BRBTGT2_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT2_EL1, 0x8C12, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 20
    /// </summary>
    public static Arm64SystemRegister BRBTGT20_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT20_EL1, 0x8C26, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 21
    /// </summary>
    public static Arm64SystemRegister BRBTGT21_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT21_EL1, 0x8C2E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 22
    /// </summary>
    public static Arm64SystemRegister BRBTGT22_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT22_EL1, 0x8C36, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 23
    /// </summary>
    public static Arm64SystemRegister BRBTGT23_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT23_EL1, 0x8C3E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 24
    /// </summary>
    public static Arm64SystemRegister BRBTGT24_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT24_EL1, 0x8C46, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 25
    /// </summary>
    public static Arm64SystemRegister BRBTGT25_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT25_EL1, 0x8C4E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 26
    /// </summary>
    public static Arm64SystemRegister BRBTGT26_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT26_EL1, 0x8C56, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 27
    /// </summary>
    public static Arm64SystemRegister BRBTGT27_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT27_EL1, 0x8C5E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 28
    /// </summary>
    public static Arm64SystemRegister BRBTGT28_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT28_EL1, 0x8C66, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 29
    /// </summary>
    public static Arm64SystemRegister BRBTGT29_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT29_EL1, 0x8C6E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 3
    /// </summary>
    public static Arm64SystemRegister BRBTGT3_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT3_EL1, 0x8C1A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 30
    /// </summary>
    public static Arm64SystemRegister BRBTGT30_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT30_EL1, 0x8C76, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 31
    /// </summary>
    public static Arm64SystemRegister BRBTGT31_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT31_EL1, 0x8C7E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 4
    /// </summary>
    public static Arm64SystemRegister BRBTGT4_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT4_EL1, 0x8C22, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 5
    /// </summary>
    public static Arm64SystemRegister BRBTGT5_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT5_EL1, 0x8C2A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 6
    /// </summary>
    public static Arm64SystemRegister BRBTGT6_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT6_EL1, 0x8C32, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 7
    /// </summary>
    public static Arm64SystemRegister BRBTGT7_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT7_EL1, 0x8C3A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 8
    /// </summary>
    public static Arm64SystemRegister BRBTGT8_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT8_EL1, 0x8C42, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Register 9
    /// </summary>
    public static Arm64SystemRegister BRBTGT9_EL1 => new(Arm64SystemRegisterKnownId.BRBTGT9_EL1, 0x8C4A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Branch Record Buffer Target Address Injection Register
    /// </summary>
    public static Arm64SystemRegister BRBTGTINJ_EL1 => new(Arm64SystemRegisterKnownId.BRBTGTINJ_EL1, 0x8C8A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Branch Record Buffer Timestamp Register
    /// </summary>
    public static Arm64SystemRegister BRBTS_EL1 => new(Arm64SystemRegisterKnownId.BRBTS_EL1, 0x8C82, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Current Cache Size ID Register
    /// </summary>
    public static Arm64SystemRegister CCSIDR_EL1 => new(Arm64SystemRegisterKnownId.CCSIDR_EL1, 0xC800, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Current Cache Size ID Register 2
    /// </summary>
    public static Arm64SystemRegister CCSIDR2_EL1 => new(Arm64SystemRegisterKnownId.CCSIDR2_EL1, 0xC802, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Clean of Data and Allocation Tags by Set/Way
    /// </summary>
    public static Arm64SystemRegister CGDSW => new(Arm64SystemRegisterKnownId.CGDSW, 0x43D6, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean of Data and Allocation Tags by VA to PoC
    /// </summary>
    public static Arm64SystemRegister CGDVAC => new(Arm64SystemRegisterKnownId.CGDVAC, 0x5BD5, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean of Data and Allocation Tags by VA to PoDP
    /// </summary>
    public static Arm64SystemRegister CGDVADP => new(Arm64SystemRegisterKnownId.CGDVADP, 0x5BED, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean of Data and Allocation Tags by VA to Outer Cache level
    /// </summary>
    public static Arm64SystemRegister CGDVAOC => new(Arm64SystemRegisterKnownId.CGDVAOC, 0x5BDF, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean of Data and Allocation Tags by VA to PoP
    /// </summary>
    public static Arm64SystemRegister CGDVAP => new(Arm64SystemRegisterKnownId.CGDVAP, 0x5BE5, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean of Allocation Tags by Set/Way
    /// </summary>
    public static Arm64SystemRegister CGSW => new(Arm64SystemRegisterKnownId.CGSW, 0x43D4, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean of Allocation Tags by VA to PoC
    /// </summary>
    public static Arm64SystemRegister CGVAC => new(Arm64SystemRegisterKnownId.CGVAC, 0x5BD3, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean of Allocation Tags by VA to PoDP
    /// </summary>
    public static Arm64SystemRegister CGVADP => new(Arm64SystemRegisterKnownId.CGVADP, 0x5BEB, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean of Allocation Tags by VA to PoP
    /// </summary>
    public static Arm64SystemRegister CGVAP => new(Arm64SystemRegisterKnownId.CGVAP, 0x5BE3, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean and invalidate of data and allocation tags by PA to PoE
    /// </summary>
    public static Arm64SystemRegister CIGDPAE => new(Arm64SystemRegisterKnownId.CIGDPAE, 0x63F7, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean and Invalidate of Data and Allocation Tags by PA to PoPA
    /// </summary>
    public static Arm64SystemRegister CIGDPAPA => new(Arm64SystemRegisterKnownId.CIGDPAPA, 0x73F5, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean and Invalidate of Data and Allocation Tags by Set/Way
    /// </summary>
    public static Arm64SystemRegister CIGDSW => new(Arm64SystemRegisterKnownId.CIGDSW, 0x43F6, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean and Invalidate of Data and Allocation Tags by VA to PoC
    /// </summary>
    public static Arm64SystemRegister CIGDVAC => new(Arm64SystemRegisterKnownId.CIGDVAC, 0x5BF5, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean and Invalidate of Data and Allocation Tags by VA to Outer Cache level
    /// </summary>
    public static Arm64SystemRegister CIGDVAOC => new(Arm64SystemRegisterKnownId.CIGDVAOC, 0x5BFF, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean and Invalidate of Data and Allocation Tags by VA to PoPS
    /// </summary>
    public static Arm64SystemRegister CIGDVAPS => new(Arm64SystemRegisterKnownId.CIGDVAPS, 0x43FD, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean and Invalidate of Allocation Tags by Set/Way
    /// </summary>
    public static Arm64SystemRegister CIGSW => new(Arm64SystemRegisterKnownId.CIGSW, 0x43F4, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean and Invalidate of Allocation Tags by VA to PoC
    /// </summary>
    public static Arm64SystemRegister CIGVAC => new(Arm64SystemRegisterKnownId.CIGVAC, 0x5BF3, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Data or unified Cache line Clean and Invalidate by PA to PoE
    /// </summary>
    public static Arm64SystemRegister CIPAE => new(Arm64SystemRegisterKnownId.CIPAE, 0x63F0, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Data or unified Cache line Clean and Invalidate by PA to PoPA
    /// </summary>
    public static Arm64SystemRegister CIPAPA => new(Arm64SystemRegisterKnownId.CIPAPA, 0x73F1, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Data or unified Cache line Clean and Invalidate by Set/Way
    /// </summary>
    public static Arm64SystemRegister CISW => new(Arm64SystemRegisterKnownId.CISW, 0x43F2, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Data or unified Cache line Clean and Invalidate by VA to PoC
    /// </summary>
    public static Arm64SystemRegister CIVAC => new(Arm64SystemRegisterKnownId.CIVAC, 0x5BF1, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Data or unified Cache line Clean and Invalidate by VA to Outer Cache level
    /// </summary>
    public static Arm64SystemRegister CIVAOC => new(Arm64SystemRegisterKnownId.CIVAOC, 0x5BF8, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Clean and Invalidate of Data by VA to PoPS
    /// </summary>
    public static Arm64SystemRegister CIVAPS => new(Arm64SystemRegisterKnownId.CIVAPS, 0x43F9, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Cache Level ID Register
    /// </summary>
    public static Arm64SystemRegister CLIDR_EL1 => new(Arm64SystemRegisterKnownId.CLIDR_EL1, 0xC801, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Counter-timer Frequency Register
    /// </summary>
    public static Arm64SystemRegister CNTFRQ_EL0 => new(Arm64SystemRegisterKnownId.CNTFRQ_EL0, 0xDF00, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Hypervisor Control Register
    /// </summary>
    public static Arm64SystemRegister CNTHCTL_EL2 => new(Arm64SystemRegisterKnownId.CNTHCTL_EL2, 0xE708, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Hypervisor Physical Timer Control Register
    /// </summary>
    public static Arm64SystemRegister CNTHP_CTL_EL2 => new(Arm64SystemRegisterKnownId.CNTHP_CTL_EL2, 0xE711, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Physical Timer CompareValue Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTHP_CVAL_EL2 => new(Arm64SystemRegisterKnownId.CNTHP_CVAL_EL2, 0xE712, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Physical Timer TimerValue Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTHP_TVAL_EL2 => new(Arm64SystemRegisterKnownId.CNTHP_TVAL_EL2, 0xE710, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Secure Physical Timer Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTHPS_CTL_EL2 => new(Arm64SystemRegisterKnownId.CNTHPS_CTL_EL2, 0xE729, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Secure Physical Timer CompareValue Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTHPS_CVAL_EL2 => new(Arm64SystemRegisterKnownId.CNTHPS_CVAL_EL2, 0xE72A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Secure Physical Timer TimerValue Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTHPS_TVAL_EL2 => new(Arm64SystemRegisterKnownId.CNTHPS_TVAL_EL2, 0xE728, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Virtual Timer Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTHV_CTL_EL2 => new(Arm64SystemRegisterKnownId.CNTHV_CTL_EL2, 0xE719, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Virtual Timer CompareValue Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTHV_CVAL_EL2 => new(Arm64SystemRegisterKnownId.CNTHV_CVAL_EL2, 0xE71A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Virtual Timer TimerValue Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTHV_TVAL_EL2 => new(Arm64SystemRegisterKnownId.CNTHV_TVAL_EL2, 0xE718, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Secure Virtual Timer Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTHVS_CTL_EL2 => new(Arm64SystemRegisterKnownId.CNTHVS_CTL_EL2, 0xE721, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Secure Virtual Timer CompareValue Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTHVS_CVAL_EL2 => new(Arm64SystemRegisterKnownId.CNTHVS_CVAL_EL2, 0xE722, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Secure Virtual Timer TimerValue Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTHVS_TVAL_EL2 => new(Arm64SystemRegisterKnownId.CNTHVS_TVAL_EL2, 0xE720, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Hypervisor Control Register
    /// </summary>
    public static Arm64SystemRegister CNTKCTL_EL1 => new(Arm64SystemRegisterKnownId.CNTKCTL_EL1, 0xC708, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Kernel Control Register
    /// </summary>
    public static Arm64SystemRegister CNTKCTL_EL12 => new(Arm64SystemRegisterKnownId.CNTKCTL_EL12, 0xEF08, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Secure Physical Timer Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTP_CTL_EL0 => new(Arm64SystemRegisterKnownId.CNTP_CTL_EL0, 0xDF11, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Physical Timer Control Register
    /// </summary>
    public static Arm64SystemRegister CNTP_CTL_EL02 => new(Arm64SystemRegisterKnownId.CNTP_CTL_EL02, 0xEF11, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Secure Physical Timer CompareValue Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTP_CVAL_EL0 => new(Arm64SystemRegisterKnownId.CNTP_CVAL_EL0, 0xDF12, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Physical Timer CompareValue Register
    /// </summary>
    public static Arm64SystemRegister CNTP_CVAL_EL02 => new(Arm64SystemRegisterKnownId.CNTP_CVAL_EL02, 0xEF12, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Secure Physical Timer TimerValue Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTP_TVAL_EL0 => new(Arm64SystemRegisterKnownId.CNTP_TVAL_EL0, 0xDF10, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Physical Timer TimerValue Register
    /// </summary>
    public static Arm64SystemRegister CNTP_TVAL_EL02 => new(Arm64SystemRegisterKnownId.CNTP_TVAL_EL02, 0xEF10, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Physical Count Register
    /// </summary>
    public static Arm64SystemRegister CNTPCT_EL0 => new(Arm64SystemRegisterKnownId.CNTPCT_EL0, 0xDF01, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Counter-timer Self-Synchronized Physical Count Register
    /// </summary>
    public static Arm64SystemRegister CNTPCTSS_EL0 => new(Arm64SystemRegisterKnownId.CNTPCTSS_EL0, 0xDF05, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Counter-timer Physical Offset Register
    /// </summary>
    public static Arm64SystemRegister CNTPOFF_EL2 => new(Arm64SystemRegisterKnownId.CNTPOFF_EL2, 0xE706, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Physical Secure Timer Control Register
    /// </summary>
    public static Arm64SystemRegister CNTPS_CTL_EL1 => new(Arm64SystemRegisterKnownId.CNTPS_CTL_EL1, 0xFF11, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Physical Secure Timer CompareValue Register
    /// </summary>
    public static Arm64SystemRegister CNTPS_CVAL_EL1 => new(Arm64SystemRegisterKnownId.CNTPS_CVAL_EL1, 0xFF12, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Physical Secure Timer TimerValue Register
    /// </summary>
    public static Arm64SystemRegister CNTPS_TVAL_EL1 => new(Arm64SystemRegisterKnownId.CNTPS_TVAL_EL1, 0xFF10, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Secure Virtual Timer Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTV_CTL_EL0 => new(Arm64SystemRegisterKnownId.CNTV_CTL_EL0, 0xDF19, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Virtual Timer Control Register
    /// </summary>
    public static Arm64SystemRegister CNTV_CTL_EL02 => new(Arm64SystemRegisterKnownId.CNTV_CTL_EL02, 0xEF19, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Secure Virtual Timer CompareValue Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTV_CVAL_EL0 => new(Arm64SystemRegisterKnownId.CNTV_CVAL_EL0, 0xDF1A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Virtual Timer CompareValue Register
    /// </summary>
    public static Arm64SystemRegister CNTV_CVAL_EL02 => new(Arm64SystemRegisterKnownId.CNTV_CVAL_EL02, 0xEF1A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Secure Virtual Timer TimerValue Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CNTV_TVAL_EL0 => new(Arm64SystemRegisterKnownId.CNTV_TVAL_EL0, 0xDF18, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Virtual Timer TimerValue Register
    /// </summary>
    public static Arm64SystemRegister CNTV_TVAL_EL02 => new(Arm64SystemRegisterKnownId.CNTV_TVAL_EL02, 0xEF18, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Counter-timer Virtual Count Register
    /// </summary>
    public static Arm64SystemRegister CNTVCT_EL0 => new(Arm64SystemRegisterKnownId.CNTVCT_EL0, 0xDF02, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Counter-timer Self-Synchronized Virtual Count Register
    /// </summary>
    public static Arm64SystemRegister CNTVCTSS_EL0 => new(Arm64SystemRegisterKnownId.CNTVCTSS_EL0, 0xDF06, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Counter-timer Virtual Offset Register
    /// </summary>
    public static Arm64SystemRegister CNTVOFF_EL2 => new(Arm64SystemRegisterKnownId.CNTVOFF_EL2, 0xE703, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Context ID Register (EL1)
    /// </summary>
    public static Arm64SystemRegister CONTEXTIDR_EL1 => new(Arm64SystemRegisterKnownId.CONTEXTIDR_EL1, 0xC681, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Context ID Register (EL1)
    /// </summary>
    public static Arm64SystemRegister CONTEXTIDR_EL12 => new(Arm64SystemRegisterKnownId.CONTEXTIDR_EL12, 0xEE81, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Context ID Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CONTEXTIDR_EL2 => new(Arm64SystemRegisterKnownId.CONTEXTIDR_EL2, 0xE681, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Architectural Feature Access Control Register
    /// </summary>
    public static Arm64SystemRegister CPACR_EL1 => new(Arm64SystemRegisterKnownId.CPACR_EL1, 0xC082, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Architectural Feature Access Control Register
    /// </summary>
    public static Arm64SystemRegister CPACR_EL12 => new(Arm64SystemRegisterKnownId.CPACR_EL12, 0xE882, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Architectural Feature Access Control Register
    /// </summary>
    public static Arm64SystemRegister CPACRALIAS_EL1 => new(Arm64SystemRegisterKnownId.CPACRALIAS_EL1, 0xC0A4, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Architectural Feature Access Control Masking Register
    /// </summary>
    public static Arm64SystemRegister CPACRMASK_EL1 => new(Arm64SystemRegisterKnownId.CPACRMASK_EL1, 0xC0A2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Architectural Feature Access Control Masking Register
    /// </summary>
    public static Arm64SystemRegister CPACRMASK_EL12 => new(Arm64SystemRegisterKnownId.CPACRMASK_EL12, 0xE8A2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Architectural Feature Trap Register (EL2)
    /// </summary>
    public static Arm64SystemRegister CPTR_EL2 => new(Arm64SystemRegisterKnownId.CPTR_EL2, 0xE08A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Architectural Feature Trap Register (EL3)
    /// </summary>
    public static Arm64SystemRegister CPTR_EL3 => new(Arm64SystemRegisterKnownId.CPTR_EL3, 0xF08A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Architectural Feature Trap Masking Register
    /// </summary>
    public static Arm64SystemRegister CPTRMASK_EL2 => new(Arm64SystemRegisterKnownId.CPTRMASK_EL2, 0xE0A2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Cache Size Selection Register
    /// </summary>
    public static Arm64SystemRegister CSSELR_EL1 => new(Arm64SystemRegisterKnownId.CSSELR_EL1, 0xD000, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Data or unified Cache line Clean by Set/Way
    /// </summary>
    public static Arm64SystemRegister CSW => new(Arm64SystemRegisterKnownId.CSW, 0x43D2, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Cache Type Register
    /// </summary>
    public static Arm64SystemRegister CTR_EL0 => new(Arm64SystemRegisterKnownId.CTR_EL0, 0xD801, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Current Exception Level
    /// </summary>
    public static Arm64SystemRegister CurrentEL => new(Arm64SystemRegisterKnownId.CurrentEL, 0xC212, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Data or unified Cache line Clean by VA to PoC
    /// </summary>
    public static Arm64SystemRegister CVAC => new(Arm64SystemRegisterKnownId.CVAC, 0x5BD1, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Data or unified Cache line Clean by VA to PoDP
    /// </summary>
    public static Arm64SystemRegister CVADP => new(Arm64SystemRegisterKnownId.CVADP, 0x5BE9, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Data or unified Cache line Clean by VA to Outer Cache level
    /// </summary>
    public static Arm64SystemRegister CVAOC => new(Arm64SystemRegisterKnownId.CVAOC, 0x5BD8, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Data or unified Cache line Clean by VA to PoP
    /// </summary>
    public static Arm64SystemRegister CVAP => new(Arm64SystemRegisterKnownId.CVAP, 0x5BE1, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Data or unified Cache line Clean by VA to PoU
    /// </summary>
    public static Arm64SystemRegister CVAU => new(Arm64SystemRegisterKnownId.CVAU, 0x5BD9, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Domain Access Control Register
    /// </summary>
    public static Arm64SystemRegister DACR32_EL2 => new(Arm64SystemRegisterKnownId.DACR32_EL2, 0xE180, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Mask Bits
    /// </summary>
    public static Arm64SystemRegister DAIF => new(Arm64SystemRegisterKnownId.DAIF, 0xDA11, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Authentication Status Register
    /// </summary>
    public static Arm64SystemRegister DBGAUTHSTATUS_EL1 => new(Arm64SystemRegisterKnownId.DBGAUTHSTATUS_EL1, 0x83F6, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR0_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR0_EL1, 0x8005, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR1_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR1_EL1, 0x800D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR10_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR10_EL1, 0x8055, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR11_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR11_EL1, 0x805D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR12_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR12_EL1, 0x8065, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR13_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR13_EL1, 0x806D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR14_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR14_EL1, 0x8075, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR15_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR15_EL1, 0x807D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR2_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR2_EL1, 0x8015, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR3_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR3_EL1, 0x801D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR4_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR4_EL1, 0x8025, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR5_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR5_EL1, 0x802D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR6_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR6_EL1, 0x8035, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR7_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR7_EL1, 0x803D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR8_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR8_EL1, 0x8045, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGBCR9_EL1 => new(Arm64SystemRegisterKnownId.DBGBCR9_EL1, 0x804D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR0_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR0_EL1, 0x8004, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR1_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR1_EL1, 0x800C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR10_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR10_EL1, 0x8054, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR11_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR11_EL1, 0x805C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR12_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR12_EL1, 0x8064, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR13_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR13_EL1, 0x806C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR14_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR14_EL1, 0x8074, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR15_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR15_EL1, 0x807C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR2_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR2_EL1, 0x8014, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR3_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR3_EL1, 0x801C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR4_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR4_EL1, 0x8024, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR5_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR5_EL1, 0x802C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR6_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR6_EL1, 0x8034, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR7_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR7_EL1, 0x803C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR8_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR8_EL1, 0x8044, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Breakpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGBVR9_EL1 => new(Arm64SystemRegisterKnownId.DBGBVR9_EL1, 0x804C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug CLAIM Tag Clear Register
    /// </summary>
    public static Arm64SystemRegister DBGCLAIMCLR_EL1 => new(Arm64SystemRegisterKnownId.DBGCLAIMCLR_EL1, 0x83CE, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug CLAIM Tag Set Register
    /// </summary>
    public static Arm64SystemRegister DBGCLAIMSET_EL1 => new(Arm64SystemRegisterKnownId.DBGCLAIMSET_EL1, 0x83C6, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Data Transfer Register, half-duplex
    /// </summary>
    public static Arm64SystemRegister DBGDTR_EL0 => new(Arm64SystemRegisterKnownId.DBGDTR_EL0, 0x9820, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Data Transfer Register, Receive
    /// </summary>
    public static Arm64SystemRegister DBGDTRRX_EL0 => new(Arm64SystemRegisterKnownId.DBGDTRRX_EL0, 0x9828, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Debug Data Transfer Register, Transmit
    /// </summary>
    public static Arm64SystemRegister DBGDTRTX_EL0 => new(Arm64SystemRegisterKnownId.DBGDTRTX_EL0, 0x9828, Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Power Control Register
    /// </summary>
    public static Arm64SystemRegister DBGPRCR_EL1 => new(Arm64SystemRegisterKnownId.DBGPRCR_EL1, 0x80A4, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Vector Catch Register
    /// </summary>
    public static Arm64SystemRegister DBGVCR32_EL2 => new(Arm64SystemRegisterKnownId.DBGVCR32_EL2, 0xA038, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR0_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR0_EL1, 0x8007, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR1_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR1_EL1, 0x800F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR10_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR10_EL1, 0x8057, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR11_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR11_EL1, 0x805F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR12_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR12_EL1, 0x8067, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR13_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR13_EL1, 0x806F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR14_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR14_EL1, 0x8077, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR15_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR15_EL1, 0x807F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR2_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR2_EL1, 0x8017, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR3_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR3_EL1, 0x801F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR4_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR4_EL1, 0x8027, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR5_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR5_EL1, 0x802F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR6_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR6_EL1, 0x8037, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR7_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR7_EL1, 0x803F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR8_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR8_EL1, 0x8047, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Control Registers
    /// </summary>
    public static Arm64SystemRegister DBGWCR9_EL1 => new(Arm64SystemRegisterKnownId.DBGWCR9_EL1, 0x804F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR0_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR0_EL1, 0x8006, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR1_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR1_EL1, 0x800E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR10_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR10_EL1, 0x8056, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR11_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR11_EL1, 0x805E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR12_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR12_EL1, 0x8066, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR13_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR13_EL1, 0x806E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR14_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR14_EL1, 0x8076, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR15_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR15_EL1, 0x807E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR2_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR2_EL1, 0x8016, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR3_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR3_EL1, 0x801E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR4_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR4_EL1, 0x8026, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR5_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR5_EL1, 0x802E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR6_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR6_EL1, 0x8036, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR7_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR7_EL1, 0x803E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR8_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR8_EL1, 0x8046, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Watchpoint Value Registers
    /// </summary>
    public static Arm64SystemRegister DBGWVR9_EL1 => new(Arm64SystemRegisterKnownId.DBGWVR9_EL1, 0x804E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Data Cache Zero ID Register
    /// </summary>
    public static Arm64SystemRegister DCZID_EL0 => new(Arm64SystemRegisterKnownId.DCZID_EL0, 0xD807, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Deferred Interrupt Status Register
    /// </summary>
    public static Arm64SystemRegister DISR_EL1 => new(Arm64SystemRegisterKnownId.DISR_EL1, 0xC609, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Data Independent Timing
    /// </summary>
    public static Arm64SystemRegister _DIT => new(Arm64SystemRegisterKnownId.DIT, 0xDA15, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Link Register
    /// </summary>
    public static Arm64SystemRegister DLR_EL0 => new(Arm64SystemRegisterKnownId.DLR_EL0, 0xDA29, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Debug Saved Program Status Register
    /// </summary>
    public static Arm64SystemRegister DSPSR_EL0 => new(Arm64SystemRegisterKnownId.DSPSR_EL0, 0xDA28, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Exception Link Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ELR_EL1 => new(Arm64SystemRegisterKnownId.ELR_EL1, 0xC201, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Exception Link Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ELR_EL12 => new(Arm64SystemRegisterKnownId.ELR_EL12, 0xEA01, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Exception Link Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ELR_EL2 => new(Arm64SystemRegisterKnownId.ELR_EL2, 0xE201, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Exception Link Register (EL3)
    /// </summary>
    public static Arm64SystemRegister ELR_EL3 => new(Arm64SystemRegisterKnownId.ELR_EL3, 0xF201, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Error Record ID Register
    /// </summary>
    public static Arm64SystemRegister ERRIDR_EL1 => new(Arm64SystemRegisterKnownId.ERRIDR_EL1, 0xC298, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Error Record Select Register
    /// </summary>
    public static Arm64SystemRegister ERRSELR_EL1 => new(Arm64SystemRegisterKnownId.ERRSELR_EL1, 0xC299, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Selected Error Record Address Register
    /// </summary>
    public static Arm64SystemRegister ERXADDR_EL1 => new(Arm64SystemRegisterKnownId.ERXADDR_EL1, 0xC2A3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Selected Error Record Control Register
    /// </summary>
    public static Arm64SystemRegister ERXCTLR_EL1 => new(Arm64SystemRegisterKnownId.ERXCTLR_EL1, 0xC2A1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Selected Error Record Feature Register
    /// </summary>
    public static Arm64SystemRegister ERXFR_EL1 => new(Arm64SystemRegisterKnownId.ERXFR_EL1, 0xC2A0, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Selected Error Record Group Status Register
    /// </summary>
    public static Arm64SystemRegister ERXGSR_EL1 => new(Arm64SystemRegisterKnownId.ERXGSR_EL1, 0xC29A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Selected Error Record Miscellaneous Register 0
    /// </summary>
    public static Arm64SystemRegister ERXMISC0_EL1 => new(Arm64SystemRegisterKnownId.ERXMISC0_EL1, 0xC2A8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Selected Error Record Miscellaneous Register 1
    /// </summary>
    public static Arm64SystemRegister ERXMISC1_EL1 => new(Arm64SystemRegisterKnownId.ERXMISC1_EL1, 0xC2A9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Selected Error Record Miscellaneous Register 2
    /// </summary>
    public static Arm64SystemRegister ERXMISC2_EL1 => new(Arm64SystemRegisterKnownId.ERXMISC2_EL1, 0xC2AA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Selected Error Record Miscellaneous Register 3
    /// </summary>
    public static Arm64SystemRegister ERXMISC3_EL1 => new(Arm64SystemRegisterKnownId.ERXMISC3_EL1, 0xC2AB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Selected Pseudo-fault Generation Countdown Register
    /// </summary>
    public static Arm64SystemRegister ERXPFGCDN_EL1 => new(Arm64SystemRegisterKnownId.ERXPFGCDN_EL1, 0xC2A6, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Selected Pseudo-fault Generation Control Register
    /// </summary>
    public static Arm64SystemRegister ERXPFGCTL_EL1 => new(Arm64SystemRegisterKnownId.ERXPFGCTL_EL1, 0xC2A5, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Selected Pseudo-fault Generation Feature Register
    /// </summary>
    public static Arm64SystemRegister ERXPFGF_EL1 => new(Arm64SystemRegisterKnownId.ERXPFGF_EL1, 0xC2A4, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Selected Error Record Primary Status Register
    /// </summary>
    public static Arm64SystemRegister ERXSTATUS_EL1 => new(Arm64SystemRegisterKnownId.ERXSTATUS_EL1, 0xC2A2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Exception Syndrome Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ESR_EL1 => new(Arm64SystemRegisterKnownId.ESR_EL1, 0xC290, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Exception Syndrome Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ESR_EL12 => new(Arm64SystemRegisterKnownId.ESR_EL12, 0xEA90, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Exception Syndrome Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ESR_EL2 => new(Arm64SystemRegisterKnownId.ESR_EL2, 0xE290, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Exception Syndrome Register (EL3)
    /// </summary>
    public static Arm64SystemRegister ESR_EL3 => new(Arm64SystemRegisterKnownId.ESR_EL3, 0xF290, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Fault Address Register (EL1)
    /// </summary>
    public static Arm64SystemRegister FAR_EL1 => new(Arm64SystemRegisterKnownId.FAR_EL1, 0xC300, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Fault Address Register (EL1)
    /// </summary>
    public static Arm64SystemRegister FAR_EL12 => new(Arm64SystemRegisterKnownId.FAR_EL12, 0xEB00, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Fault Address Register (EL1)
    /// </summary>
    public static Arm64SystemRegister FAR_EL2 => new(Arm64SystemRegisterKnownId.FAR_EL2, 0xE300, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Fault Address Register (EL3)
    /// </summary>
    public static Arm64SystemRegister FAR_EL3 => new(Arm64SystemRegisterKnownId.FAR_EL3, 0xF300, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Fine-Grained Write Traps EL3
    /// </summary>
    public static Arm64SystemRegister FGWTE3_EL3 => new(Arm64SystemRegisterKnownId.FGWTE3_EL3, 0xF08D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Floating-point Control Register
    /// </summary>
    public static Arm64SystemRegister FPCR => new(Arm64SystemRegisterKnownId.FPCR, 0xDA20, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Floating-Point Exception Control Register
    /// </summary>
    public static Arm64SystemRegister FPEXC32_EL2 => new(Arm64SystemRegisterKnownId.FPEXC32_EL2, 0xE298, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Floating-point Mode Register
    /// </summary>
    public static Arm64SystemRegister FPMR => new(Arm64SystemRegisterKnownId.FPMR, 0xDA22, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Floating-point Status Register
    /// </summary>
    public static Arm64SystemRegister FPSR => new(Arm64SystemRegisterKnownId.FPSR, 0xDA21, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Tag Control Register.
    /// </summary>
    public static Arm64SystemRegister GCR_EL1 => new(Arm64SystemRegisterKnownId.GCR_EL1, 0xC086, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Guarded Control Stack Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister GCSCR_EL1 => new(Arm64SystemRegisterKnownId.GCSCR_EL1, 0xC128, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Guarded Control Stack Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister GCSCR_EL12 => new(Arm64SystemRegisterKnownId.GCSCR_EL12, 0xE928, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Guarded Control Stack Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister GCSCR_EL2 => new(Arm64SystemRegisterKnownId.GCSCR_EL2, 0xE128, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Guarded Control Stack Control Register (EL3)
    /// </summary>
    public static Arm64SystemRegister GCSCR_EL3 => new(Arm64SystemRegisterKnownId.GCSCR_EL3, 0xF128, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Guarded Control Stack Control Register (EL0)
    /// </summary>
    public static Arm64SystemRegister GCSCRE0_EL1 => new(Arm64SystemRegisterKnownId.GCSCRE0_EL1, 0xC12A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Guarded Control Stack Pop and Compare exception return record
    /// </summary>
    public static Arm64SystemRegister GCSPOPCX => new(Arm64SystemRegisterKnownId.GCSPOPCX, 0x43BD, Arm64SystemRegisterKind.GCSPOPCX);
    /// <summary>
    /// Guarded Control Stack Pop
    /// </summary>
    public static Arm64SystemRegister GCSPOPM => new(Arm64SystemRegisterKnownId.GCSPOPM, 0x5BB9, Arm64SystemRegisterKind.GCSPOPM);
    /// <summary>
    /// Guarded Control Stack Pop exception return record
    /// </summary>
    public static Arm64SystemRegister GCSPOPX => new(Arm64SystemRegisterKnownId.GCSPOPX, 0x43BE, Arm64SystemRegisterKind.GCSPOPX);
    /// <summary>
    /// Guarded Control Stack Pointer Register (EL0)
    /// </summary>
    public static Arm64SystemRegister GCSPR_EL0 => new(Arm64SystemRegisterKnownId.GCSPR_EL0, 0xD929, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Guarded Control Stack Pointer Register (EL1)
    /// </summary>
    public static Arm64SystemRegister GCSPR_EL1 => new(Arm64SystemRegisterKnownId.GCSPR_EL1, 0xC129, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Guarded Control Stack Pointer Register (EL1)
    /// </summary>
    public static Arm64SystemRegister GCSPR_EL12 => new(Arm64SystemRegisterKnownId.GCSPR_EL12, 0xE929, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Guarded Control Stack Pointer Register (EL2)
    /// </summary>
    public static Arm64SystemRegister GCSPR_EL2 => new(Arm64SystemRegisterKnownId.GCSPR_EL2, 0xE129, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Guarded Control Stack Pointer Register (EL3)
    /// </summary>
    public static Arm64SystemRegister GCSPR_EL3 => new(Arm64SystemRegisterKnownId.GCSPR_EL3, 0xF129, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Guarded Control Stack Push
    /// </summary>
    public static Arm64SystemRegister GCSPUSHM => new(Arm64SystemRegisterKnownId.GCSPUSHM, 0x5BB8, Arm64SystemRegisterKind.GCSPUSHM);
    /// <summary>
    /// Guarded Control Stack Push exception return record
    /// </summary>
    public static Arm64SystemRegister GCSPUSHX => new(Arm64SystemRegisterKnownId.GCSPUSHX, 0x43BC, Arm64SystemRegisterKind.GCSPUSHX);
    /// <summary>
    /// Guarded Control Stack Switch Stack 1
    /// </summary>
    public static Arm64SystemRegister GCSSS1 => new(Arm64SystemRegisterKnownId.GCSSS1, 0x5BBA, Arm64SystemRegisterKind.GCSSS1);
    /// <summary>
    /// Guarded Control Stack Switch Stack 2
    /// </summary>
    public static Arm64SystemRegister GCSSS2 => new(Arm64SystemRegisterKnownId.GCSSS2, 0x5BBB, Arm64SystemRegisterKind.GCSSS2);
    /// <summary>
    /// Multiple tag transfer ID Register
    /// </summary>
    public static Arm64SystemRegister GMID_EL1 => new(Arm64SystemRegisterKnownId.GMID_EL1, 0xC804, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Granule Protection Check Bypass Window Register (EL3)
    /// </summary>
    public static Arm64SystemRegister GPCBW_EL3 => new(Arm64SystemRegisterKnownId.GPCBW_EL3, 0xF10D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Granule Protection Check Control Register (EL3)
    /// </summary>
    public static Arm64SystemRegister GPCCR_EL3 => new(Arm64SystemRegisterKnownId.GPCCR_EL3, 0xF10E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Granule Protection Table Base Register
    /// </summary>
    public static Arm64SystemRegister GPTBR_EL3 => new(Arm64SystemRegisterKnownId.GPTBR_EL3, 0xF10C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Data Cache set Allocation Tag by VA
    /// </summary>
    public static Arm64SystemRegister GVA => new(Arm64SystemRegisterKnownId.GVA, 0x5BA3, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Data Cache set Allocation Tags and Zero by VA
    /// </summary>
    public static Arm64SystemRegister GZVA => new(Arm64SystemRegisterKnownId.GZVA, 0x5BA4, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Hardware Accelerator for Cleaning Dirty State Base Register
    /// </summary>
    public static Arm64SystemRegister HACDBSBR_EL2 => new(Arm64SystemRegisterKnownId.HACDBSBR_EL2, 0xE11C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hardware Accelerator for Cleaning Dirty State Consumer Register
    /// </summary>
    public static Arm64SystemRegister HACDBSCONS_EL2 => new(Arm64SystemRegisterKnownId.HACDBSCONS_EL2, 0xE11D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor Auxiliary Control Register
    /// </summary>
    public static Arm64SystemRegister HACR_EL2 => new(Arm64SystemRegisterKnownId.HACR_EL2, 0xE08F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor Activity Monitors Fine-Grained Read Trap Register
    /// </summary>
    public static Arm64SystemRegister HAFGRTR_EL2 => new(Arm64SystemRegisterKnownId.HAFGRTR_EL2, 0xE18E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor Configuration Register
    /// </summary>
    public static Arm64SystemRegister HCR_EL2 => new(Arm64SystemRegisterKnownId.HCR_EL2, 0xE088, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Hypervisor Configuration Register
    /// </summary>
    public static Arm64SystemRegister HCRX_EL2 => new(Arm64SystemRegisterKnownId.HCRX_EL2, 0xE092, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hardware Dirty State Tracking Structure Base Register
    /// </summary>
    public static Arm64SystemRegister HDBSSBR_EL2 => new(Arm64SystemRegisterKnownId.HDBSSBR_EL2, 0xE11A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hardware Dirty State Tracking Structure Producer Register
    /// </summary>
    public static Arm64SystemRegister HDBSSPROD_EL2 => new(Arm64SystemRegisterKnownId.HDBSSPROD_EL2, 0xE11B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor Debug Fine-Grained Read Trap Register
    /// </summary>
    public static Arm64SystemRegister HDFGRTR_EL2 => new(Arm64SystemRegisterKnownId.HDFGRTR_EL2, 0xE18C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor Debug Fine-Grained Read Trap Register 2
    /// </summary>
    public static Arm64SystemRegister HDFGRTR2_EL2 => new(Arm64SystemRegisterKnownId.HDFGRTR2_EL2, 0xE188, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor Debug Fine-Grained Write Trap Register
    /// </summary>
    public static Arm64SystemRegister HDFGWTR_EL2 => new(Arm64SystemRegisterKnownId.HDFGWTR_EL2, 0xE18D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor Debug Fine-Grained Write Trap Register 2
    /// </summary>
    public static Arm64SystemRegister HDFGWTR2_EL2 => new(Arm64SystemRegisterKnownId.HDFGWTR2_EL2, 0xE189, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor Fine-Grained Instruction Trap Register
    /// </summary>
    public static Arm64SystemRegister HFGITR_EL2 => new(Arm64SystemRegisterKnownId.HFGITR_EL2, 0xE08E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor Fine-Grained Instruction Trap Register 2
    /// </summary>
    public static Arm64SystemRegister HFGITR2_EL2 => new(Arm64SystemRegisterKnownId.HFGITR2_EL2, 0xE18F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor Fine-Grained Read Trap Register
    /// </summary>
    public static Arm64SystemRegister HFGRTR_EL2 => new(Arm64SystemRegisterKnownId.HFGRTR_EL2, 0xE08C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor Fine-Grained Read Trap Register 2
    /// </summary>
    public static Arm64SystemRegister HFGRTR2_EL2 => new(Arm64SystemRegisterKnownId.HFGRTR2_EL2, 0xE18A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor Fine-Grained Write Trap Register
    /// </summary>
    public static Arm64SystemRegister HFGWTR_EL2 => new(Arm64SystemRegisterKnownId.HFGWTR_EL2, 0xE08D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor Fine-Grained Write Trap Register 2
    /// </summary>
    public static Arm64SystemRegister HFGWTR2_EL2 => new(Arm64SystemRegisterKnownId.HFGWTR2_EL2, 0xE18B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor IPA Fault Address Register
    /// </summary>
    public static Arm64SystemRegister HPFAR_EL2 => new(Arm64SystemRegisterKnownId.HPFAR_EL2, 0xE304, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Hypervisor System Trap Register
    /// </summary>
    public static Arm64SystemRegister HSTR_EL2 => new(Arm64SystemRegisterKnownId.HSTR_EL2, 0xE08B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Invalidate the Branch Record Buffer
    /// </summary>
    public static Arm64SystemRegister IALL => new(Arm64SystemRegisterKnownId.IALL, 0x4B94, Arm64SystemRegisterKind.BRB);
    /// <summary>
    /// Instruction Cache Invalidate All to PoU
    /// </summary>
    public static Arm64SystemRegister IALLU => new(Arm64SystemRegisterKnownId.IALLU, 0x43A8, Arm64SystemRegisterKind.IC);
    /// <summary>
    /// Instruction Cache Invalidate All to PoU, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister IALLUIS => new(Arm64SystemRegisterKnownId.IALLUIS, 0x4388, Arm64SystemRegisterKind.IC);
    /// <summary>
    /// Interrupt Controller Active Priorities Group 0 Registers
    /// </summary>
    public static Arm64SystemRegister ICC_AP0R0_EL1 => new(Arm64SystemRegisterKnownId.ICC_AP0R0_EL1, 0xC644, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Active Priorities Group 0 Registers
    /// </summary>
    public static Arm64SystemRegister ICC_AP0R1_EL1 => new(Arm64SystemRegisterKnownId.ICC_AP0R1_EL1, 0xC645, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Active Priorities Group 0 Registers
    /// </summary>
    public static Arm64SystemRegister ICC_AP0R2_EL1 => new(Arm64SystemRegisterKnownId.ICC_AP0R2_EL1, 0xC646, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Active Priorities Group 0 Registers
    /// </summary>
    public static Arm64SystemRegister ICC_AP0R3_EL1 => new(Arm64SystemRegisterKnownId.ICC_AP0R3_EL1, 0xC647, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Active Priorities Group 1 Registers
    /// </summary>
    public static Arm64SystemRegister ICC_AP1R0_EL1 => new(Arm64SystemRegisterKnownId.ICC_AP1R0_EL1, 0xC648, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Active Priorities Group 1 Registers
    /// </summary>
    public static Arm64SystemRegister ICC_AP1R1_EL1 => new(Arm64SystemRegisterKnownId.ICC_AP1R1_EL1, 0xC649, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Active Priorities Group 1 Registers
    /// </summary>
    public static Arm64SystemRegister ICC_AP1R2_EL1 => new(Arm64SystemRegisterKnownId.ICC_AP1R2_EL1, 0xC64A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Active Priorities Group 1 Registers
    /// </summary>
    public static Arm64SystemRegister ICC_AP1R3_EL1 => new(Arm64SystemRegisterKnownId.ICC_AP1R3_EL1, 0xC64B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Alias Software Generated Interrupt Group 1 Register
    /// </summary>
    public static Arm64SystemRegister ICC_ASGI1R_EL1 => new(Arm64SystemRegisterKnownId.ICC_ASGI1R_EL1, 0xC65E, Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Binary Point Register 0
    /// </summary>
    public static Arm64SystemRegister ICC_BPR0_EL1 => new(Arm64SystemRegisterKnownId.ICC_BPR0_EL1, 0xC643, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Binary Point Register 1
    /// </summary>
    public static Arm64SystemRegister ICC_BPR1_EL1 => new(Arm64SystemRegisterKnownId.ICC_BPR1_EL1, 0xC663, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ICC_CTLR_EL1 => new(Arm64SystemRegisterKnownId.ICC_CTLR_EL1, 0xC664, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Control Register (EL3)
    /// </summary>
    public static Arm64SystemRegister ICC_CTLR_EL3 => new(Arm64SystemRegisterKnownId.ICC_CTLR_EL3, 0xF664, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Deactivate Interrupt Register
    /// </summary>
    public static Arm64SystemRegister ICC_DIR_EL1 => new(Arm64SystemRegisterKnownId.ICC_DIR_EL1, 0xC659, Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller End Of Interrupt Register 0
    /// </summary>
    public static Arm64SystemRegister ICC_EOIR0_EL1 => new(Arm64SystemRegisterKnownId.ICC_EOIR0_EL1, 0xC641, Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller End Of Interrupt Register 1
    /// </summary>
    public static Arm64SystemRegister ICC_EOIR1_EL1 => new(Arm64SystemRegisterKnownId.ICC_EOIR1_EL1, 0xC661, Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Highest Priority Pending Interrupt Register 0
    /// </summary>
    public static Arm64SystemRegister ICC_HPPIR0_EL1 => new(Arm64SystemRegisterKnownId.ICC_HPPIR0_EL1, 0xC642, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Interrupt Controller Highest Priority Pending Interrupt Register 1
    /// </summary>
    public static Arm64SystemRegister ICC_HPPIR1_EL1 => new(Arm64SystemRegisterKnownId.ICC_HPPIR1_EL1, 0xC662, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Interrupt Controller Interrupt Acknowledge Register 0
    /// </summary>
    public static Arm64SystemRegister ICC_IAR0_EL1 => new(Arm64SystemRegisterKnownId.ICC_IAR0_EL1, 0xC640, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Interrupt Controller Interrupt Acknowledge Register 1
    /// </summary>
    public static Arm64SystemRegister ICC_IAR1_EL1 => new(Arm64SystemRegisterKnownId.ICC_IAR1_EL1, 0xC660, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Interrupt Controller Interrupt Group 0 Enable Register
    /// </summary>
    public static Arm64SystemRegister ICC_IGRPEN0_EL1 => new(Arm64SystemRegisterKnownId.ICC_IGRPEN0_EL1, 0xC666, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Interrupt Group 1 Enable Register
    /// </summary>
    public static Arm64SystemRegister ICC_IGRPEN1_EL1 => new(Arm64SystemRegisterKnownId.ICC_IGRPEN1_EL1, 0xC667, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Interrupt Group 1 Enable Register (EL3)
    /// </summary>
    public static Arm64SystemRegister ICC_IGRPEN1_EL3 => new(Arm64SystemRegisterKnownId.ICC_IGRPEN1_EL3, 0xF667, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Non-maskable Interrupt Acknowledge Register 1
    /// </summary>
    public static Arm64SystemRegister ICC_NMIAR1_EL1 => new(Arm64SystemRegisterKnownId.ICC_NMIAR1_EL1, 0xC64D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Interrupt Controller Interrupt Priority Mask Register
    /// </summary>
    public static Arm64SystemRegister ICC_PMR_EL1 => new(Arm64SystemRegisterKnownId.ICC_PMR_EL1, 0xC230, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Running Priority Register
    /// </summary>
    public static Arm64SystemRegister ICC_RPR_EL1 => new(Arm64SystemRegisterKnownId.ICC_RPR_EL1, 0xC65B, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Interrupt Controller Software Generated Interrupt Group 0 Register
    /// </summary>
    public static Arm64SystemRegister ICC_SGI0R_EL1 => new(Arm64SystemRegisterKnownId.ICC_SGI0R_EL1, 0xC65F, Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Software Generated Interrupt Group 1 Register
    /// </summary>
    public static Arm64SystemRegister ICC_SGI1R_EL1 => new(Arm64SystemRegisterKnownId.ICC_SGI1R_EL1, 0xC65D, Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller System Register Enable Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ICC_SRE_EL1 => new(Arm64SystemRegisterKnownId.ICC_SRE_EL1, 0xC665, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller System Register Enable Register (EL2)
    /// </summary>
    public static Arm64SystemRegister ICC_SRE_EL2 => new(Arm64SystemRegisterKnownId.ICC_SRE_EL2, 0xE64D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller System Register Enable Register (EL3)
    /// </summary>
    public static Arm64SystemRegister ICC_SRE_EL3 => new(Arm64SystemRegisterKnownId.ICC_SRE_EL3, 0xF665, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Hyp Active Priorities Group 0 Registers
    /// </summary>
    public static Arm64SystemRegister ICH_AP0R0_EL2 => new(Arm64SystemRegisterKnownId.ICH_AP0R0_EL2, 0xE640, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Hyp Active Priorities Group 0 Registers
    /// </summary>
    public static Arm64SystemRegister ICH_AP0R1_EL2 => new(Arm64SystemRegisterKnownId.ICH_AP0R1_EL2, 0xE641, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Hyp Active Priorities Group 0 Registers
    /// </summary>
    public static Arm64SystemRegister ICH_AP0R2_EL2 => new(Arm64SystemRegisterKnownId.ICH_AP0R2_EL2, 0xE642, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Hyp Active Priorities Group 0 Registers
    /// </summary>
    public static Arm64SystemRegister ICH_AP0R3_EL2 => new(Arm64SystemRegisterKnownId.ICH_AP0R3_EL2, 0xE643, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Hyp Active Priorities Group 1 Registers
    /// </summary>
    public static Arm64SystemRegister ICH_AP1R0_EL2 => new(Arm64SystemRegisterKnownId.ICH_AP1R0_EL2, 0xE648, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Hyp Active Priorities Group 1 Registers
    /// </summary>
    public static Arm64SystemRegister ICH_AP1R1_EL2 => new(Arm64SystemRegisterKnownId.ICH_AP1R1_EL2, 0xE649, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Hyp Active Priorities Group 1 Registers
    /// </summary>
    public static Arm64SystemRegister ICH_AP1R2_EL2 => new(Arm64SystemRegisterKnownId.ICH_AP1R2_EL2, 0xE64A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Hyp Active Priorities Group 1 Registers
    /// </summary>
    public static Arm64SystemRegister ICH_AP1R3_EL2 => new(Arm64SystemRegisterKnownId.ICH_AP1R3_EL2, 0xE64B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller End of Interrupt Status Register
    /// </summary>
    public static Arm64SystemRegister ICH_EISR_EL2 => new(Arm64SystemRegisterKnownId.ICH_EISR_EL2, 0xE65B, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Interrupt Controller Empty List Register Status Register
    /// </summary>
    public static Arm64SystemRegister ICH_ELRSR_EL2 => new(Arm64SystemRegisterKnownId.ICH_ELRSR_EL2, 0xE65D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Interrupt Controller Hyp Control Register
    /// </summary>
    public static Arm64SystemRegister ICH_HCR_EL2 => new(Arm64SystemRegisterKnownId.ICH_HCR_EL2, 0xE658, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR0_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR0_EL2, 0xE660, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR1_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR1_EL2, 0xE661, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR10_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR10_EL2, 0xE66A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR11_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR11_EL2, 0xE66B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR12_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR12_EL2, 0xE66C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR13_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR13_EL2, 0xE66D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR14_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR14_EL2, 0xE66E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR15_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR15_EL2, 0xE66F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR2_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR2_EL2, 0xE662, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR3_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR3_EL2, 0xE663, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR4_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR4_EL2, 0xE664, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR5_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR5_EL2, 0xE665, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR6_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR6_EL2, 0xE666, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR7_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR7_EL2, 0xE667, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR8_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR8_EL2, 0xE668, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller List Registers
    /// </summary>
    public static Arm64SystemRegister ICH_LR9_EL2 => new(Arm64SystemRegisterKnownId.ICH_LR9_EL2, 0xE669, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller Maintenance Interrupt State Register
    /// </summary>
    public static Arm64SystemRegister ICH_MISR_EL2 => new(Arm64SystemRegisterKnownId.ICH_MISR_EL2, 0xE65A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Interrupt Controller Virtual Machine Control Register
    /// </summary>
    public static Arm64SystemRegister ICH_VMCR_EL2 => new(Arm64SystemRegisterKnownId.ICH_VMCR_EL2, 0xE65F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Interrupt Controller VGIC Type Register
    /// </summary>
    public static Arm64SystemRegister ICH_VTR_EL2 => new(Arm64SystemRegisterKnownId.ICH_VTR_EL2, 0xE659, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Auxiliary Feature Register 0
    /// </summary>
    public static Arm64SystemRegister ID_AA64AFR0_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64AFR0_EL1, 0xC02C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Auxiliary Feature Register 1
    /// </summary>
    public static Arm64SystemRegister ID_AA64AFR1_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64AFR1_EL1, 0xC02D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Debug Feature Register 0
    /// </summary>
    public static Arm64SystemRegister ID_AA64DFR0_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64DFR0_EL1, 0xC028, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Debug Feature Register 1
    /// </summary>
    public static Arm64SystemRegister ID_AA64DFR1_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64DFR1_EL1, 0xC029, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Debug Feature Register 2
    /// </summary>
    public static Arm64SystemRegister ID_AA64DFR2_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64DFR2_EL1, 0xC02A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Floating-point Feature Register 0
    /// </summary>
    public static Arm64SystemRegister ID_AA64FPFR0_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64FPFR0_EL1, 0xC027, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Instruction Set Attribute Register 0
    /// </summary>
    public static Arm64SystemRegister ID_AA64ISAR0_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64ISAR0_EL1, 0xC030, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Instruction Set Attribute Register 1
    /// </summary>
    public static Arm64SystemRegister ID_AA64ISAR1_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64ISAR1_EL1, 0xC031, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Instruction Set Attribute Register 2
    /// </summary>
    public static Arm64SystemRegister ID_AA64ISAR2_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64ISAR2_EL1, 0xC032, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Instruction Set Attribute Register 3
    /// </summary>
    public static Arm64SystemRegister ID_AA64ISAR3_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64ISAR3_EL1, 0xC033, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Memory Model Feature Register 0
    /// </summary>
    public static Arm64SystemRegister ID_AA64MMFR0_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64MMFR0_EL1, 0xC038, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Memory Model Feature Register 1
    /// </summary>
    public static Arm64SystemRegister ID_AA64MMFR1_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64MMFR1_EL1, 0xC039, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Memory Model Feature Register 2
    /// </summary>
    public static Arm64SystemRegister ID_AA64MMFR2_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64MMFR2_EL1, 0xC03A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Memory Model Feature Register 3
    /// </summary>
    public static Arm64SystemRegister ID_AA64MMFR3_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64MMFR3_EL1, 0xC03B, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Memory Model Feature Register 4
    /// </summary>
    public static Arm64SystemRegister ID_AA64MMFR4_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64MMFR4_EL1, 0xC03C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Processor Feature Register 0
    /// </summary>
    public static Arm64SystemRegister ID_AA64PFR0_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64PFR0_EL1, 0xC020, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Processor Feature Register 1
    /// </summary>
    public static Arm64SystemRegister ID_AA64PFR1_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64PFR1_EL1, 0xC021, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch64 Processor Feature Register 2
    /// </summary>
    public static Arm64SystemRegister ID_AA64PFR2_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64PFR2_EL1, 0xC022, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// SME Feature ID Register 0
    /// </summary>
    public static Arm64SystemRegister ID_AA64SMFR0_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64SMFR0_EL1, 0xC025, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// SVE Feature ID Register 0
    /// </summary>
    public static Arm64SystemRegister ID_AA64ZFR0_EL1 => new(Arm64SystemRegisterKnownId.ID_AA64ZFR0_EL1, 0xC024, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Auxiliary Feature Register 0
    /// </summary>
    public static Arm64SystemRegister ID_AFR0_EL1 => new(Arm64SystemRegisterKnownId.ID_AFR0_EL1, 0xC00B, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Debug Feature Register 0
    /// </summary>
    public static Arm64SystemRegister ID_DFR0_EL1 => new(Arm64SystemRegisterKnownId.ID_DFR0_EL1, 0xC00A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Debug Feature Register 1
    /// </summary>
    public static Arm64SystemRegister ID_DFR1_EL1 => new(Arm64SystemRegisterKnownId.ID_DFR1_EL1, 0xC01D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Instruction Set Attribute Register 0
    /// </summary>
    public static Arm64SystemRegister ID_ISAR0_EL1 => new(Arm64SystemRegisterKnownId.ID_ISAR0_EL1, 0xC010, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Instruction Set Attribute Register 1
    /// </summary>
    public static Arm64SystemRegister ID_ISAR1_EL1 => new(Arm64SystemRegisterKnownId.ID_ISAR1_EL1, 0xC011, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Instruction Set Attribute Register 2
    /// </summary>
    public static Arm64SystemRegister ID_ISAR2_EL1 => new(Arm64SystemRegisterKnownId.ID_ISAR2_EL1, 0xC012, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Instruction Set Attribute Register 3
    /// </summary>
    public static Arm64SystemRegister ID_ISAR3_EL1 => new(Arm64SystemRegisterKnownId.ID_ISAR3_EL1, 0xC013, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Instruction Set Attribute Register 4
    /// </summary>
    public static Arm64SystemRegister ID_ISAR4_EL1 => new(Arm64SystemRegisterKnownId.ID_ISAR4_EL1, 0xC014, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Instruction Set Attribute Register 5
    /// </summary>
    public static Arm64SystemRegister ID_ISAR5_EL1 => new(Arm64SystemRegisterKnownId.ID_ISAR5_EL1, 0xC015, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Instruction Set Attribute Register 6
    /// </summary>
    public static Arm64SystemRegister ID_ISAR6_EL1 => new(Arm64SystemRegisterKnownId.ID_ISAR6_EL1, 0xC017, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Memory Model Feature Register 0
    /// </summary>
    public static Arm64SystemRegister ID_MMFR0_EL1 => new(Arm64SystemRegisterKnownId.ID_MMFR0_EL1, 0xC00C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Memory Model Feature Register 1
    /// </summary>
    public static Arm64SystemRegister ID_MMFR1_EL1 => new(Arm64SystemRegisterKnownId.ID_MMFR1_EL1, 0xC00D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Memory Model Feature Register 2
    /// </summary>
    public static Arm64SystemRegister ID_MMFR2_EL1 => new(Arm64SystemRegisterKnownId.ID_MMFR2_EL1, 0xC00E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Memory Model Feature Register 3
    /// </summary>
    public static Arm64SystemRegister ID_MMFR3_EL1 => new(Arm64SystemRegisterKnownId.ID_MMFR3_EL1, 0xC00F, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Memory Model Feature Register 4
    /// </summary>
    public static Arm64SystemRegister ID_MMFR4_EL1 => new(Arm64SystemRegisterKnownId.ID_MMFR4_EL1, 0xC016, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Memory Model Feature Register 5
    /// </summary>
    public static Arm64SystemRegister ID_MMFR5_EL1 => new(Arm64SystemRegisterKnownId.ID_MMFR5_EL1, 0xC01E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Processor Feature Register 0
    /// </summary>
    public static Arm64SystemRegister ID_PFR0_EL1 => new(Arm64SystemRegisterKnownId.ID_PFR0_EL1, 0xC008, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Processor Feature Register 1
    /// </summary>
    public static Arm64SystemRegister ID_PFR1_EL1 => new(Arm64SystemRegisterKnownId.ID_PFR1_EL1, 0xC009, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Processor Feature Register 2
    /// </summary>
    public static Arm64SystemRegister ID_PFR2_EL1 => new(Arm64SystemRegisterKnownId.ID_PFR2_EL1, 0xC01C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Instruction Fault Status Register (EL2)
    /// </summary>
    public static Arm64SystemRegister IFSR32_EL2 => new(Arm64SystemRegisterKnownId.IFSR32_EL2, 0xE281, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Invalidate of Data and Allocation Tags by Set/Way
    /// </summary>
    public static Arm64SystemRegister IGDSW => new(Arm64SystemRegisterKnownId.IGDSW, 0x43B6, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Invalidate of Data and Allocation Tags by VA to PoC
    /// </summary>
    public static Arm64SystemRegister IGDVAC => new(Arm64SystemRegisterKnownId.IGDVAC, 0x43B5, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Invalidate of Allocation Tags by Set/Way
    /// </summary>
    public static Arm64SystemRegister IGSW => new(Arm64SystemRegisterKnownId.IGSW, 0x43B4, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Invalidate of Allocation Tags by VA to PoC
    /// </summary>
    public static Arm64SystemRegister IGVAC => new(Arm64SystemRegisterKnownId.IGVAC, 0x43B3, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Branch Record Injection into the Branch Record Buffer
    /// </summary>
    public static Arm64SystemRegister INJ => new(Arm64SystemRegisterKnownId.INJ, 0x4B95, Arm64SystemRegisterKind.BRB);
    /// <summary>
    /// TLB Invalidate by Intermediate Physical Address, Stage 2, EL1
    /// </summary>
    public static Arm64SystemRegister IPAS2E1 => new(Arm64SystemRegisterKnownId.IPAS2E1, 0x6421, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by Intermediate Physical Address, Stage 2, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister IPAS2E1IS => new(Arm64SystemRegisterKnownId.IPAS2E1IS, 0x6401, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by Intermediate Physical Address, Stage 2, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister IPAS2E1ISNXS => new(Arm64SystemRegisterKnownId.IPAS2E1ISNXS, 0x6481, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by Intermediate Physical Address, Stage 2, EL1
    /// </summary>
    public static Arm64SystemRegister IPAS2E1NXS => new(Arm64SystemRegisterKnownId.IPAS2E1NXS, 0x64A1, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by Intermediate Physical Address, Stage 2, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister IPAS2E1OS => new(Arm64SystemRegisterKnownId.IPAS2E1OS, 0x6420, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by Intermediate Physical Address, Stage 2, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister IPAS2E1OSNXS => new(Arm64SystemRegisterKnownId.IPAS2E1OSNXS, 0x64A0, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1
    /// </summary>
    public static Arm64SystemRegister IPAS2LE1 => new(Arm64SystemRegisterKnownId.IPAS2LE1, 0x6425, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister IPAS2LE1IS => new(Arm64SystemRegisterKnownId.IPAS2LE1IS, 0x6405, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister IPAS2LE1ISNXS => new(Arm64SystemRegisterKnownId.IPAS2LE1ISNXS, 0x6485, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1
    /// </summary>
    public static Arm64SystemRegister IPAS2LE1NXS => new(Arm64SystemRegisterKnownId.IPAS2LE1NXS, 0x64A5, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister IPAS2LE1OS => new(Arm64SystemRegisterKnownId.IPAS2LE1OS, 0x6424, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister IPAS2LE1OSNXS => new(Arm64SystemRegisterKnownId.IPAS2LE1OSNXS, 0x64A4, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// Interrupt Status Register
    /// </summary>
    public static Arm64SystemRegister ISR_EL1 => new(Arm64SystemRegisterKnownId.ISR_EL1, 0xC608, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Data or unified Cache line Invalidate by Set/Way
    /// </summary>
    public static Arm64SystemRegister ISW => new(Arm64SystemRegisterKnownId.ISW, 0x43B2, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Data or unified Cache line Invalidate by VA to PoC
    /// </summary>
    public static Arm64SystemRegister IVAC => new(Arm64SystemRegisterKnownId.IVAC, 0x43B1, Arm64SystemRegisterKind.DC);
    /// <summary>
    /// Instruction Cache line Invalidate by VA to PoU
    /// </summary>
    public static Arm64SystemRegister IVAU => new(Arm64SystemRegisterKnownId.IVAU, 0x5BA9, Arm64SystemRegisterKind.IC);
    /// <summary>
    /// LORegion Control (EL1)
    /// </summary>
    public static Arm64SystemRegister LORC_EL1 => new(Arm64SystemRegisterKnownId.LORC_EL1, 0xC523, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// LORegion End Address (EL1)
    /// </summary>
    public static Arm64SystemRegister LOREA_EL1 => new(Arm64SystemRegisterKnownId.LOREA_EL1, 0xC521, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// LORegionID (EL1)
    /// </summary>
    public static Arm64SystemRegister LORID_EL1 => new(Arm64SystemRegisterKnownId.LORID_EL1, 0xC527, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// LORegion Number (EL1)
    /// </summary>
    public static Arm64SystemRegister LORN_EL1 => new(Arm64SystemRegisterKnownId.LORN_EL1, 0xC522, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// LORegion Start Address (EL1)
    /// </summary>
    public static Arm64SystemRegister LORSA_EL1 => new(Arm64SystemRegisterKnownId.LORSA_EL1, 0xC520, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Memory Attribute Indirection Register (EL1)
    /// </summary>
    public static Arm64SystemRegister MAIR_EL1 => new(Arm64SystemRegisterKnownId.MAIR_EL1, 0xC510, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Memory Attribute Indirection Register (EL1)
    /// </summary>
    public static Arm64SystemRegister MAIR_EL12 => new(Arm64SystemRegisterKnownId.MAIR_EL12, 0xED10, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Memory Attribute Indirection Register (EL2)
    /// </summary>
    public static Arm64SystemRegister MAIR_EL2 => new(Arm64SystemRegisterKnownId.MAIR_EL2, 0xE510, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Memory Attribute Indirection Register (EL3)
    /// </summary>
    public static Arm64SystemRegister MAIR_EL3 => new(Arm64SystemRegisterKnownId.MAIR_EL3, 0xF510, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Memory Attribute Indirection Register (EL1)
    /// </summary>
    public static Arm64SystemRegister MAIR2_EL1 => new(Arm64SystemRegisterKnownId.MAIR2_EL1, 0xC511, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Memory Attribute Indirection Register (EL1)
    /// </summary>
    public static Arm64SystemRegister MAIR2_EL12 => new(Arm64SystemRegisterKnownId.MAIR2_EL12, 0xED11, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Memory Attribute Indirection Register (EL2)
    /// </summary>
    public static Arm64SystemRegister MAIR2_EL2 => new(Arm64SystemRegisterKnownId.MAIR2_EL2, 0xE509, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Memory Attribute Indirection Register (EL3)
    /// </summary>
    public static Arm64SystemRegister MAIR2_EL3 => new(Arm64SystemRegisterKnownId.MAIR2_EL3, 0xF509, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Monitor DCC Interrupt Enable Register
    /// </summary>
    public static Arm64SystemRegister MDCCINT_EL1 => new(Arm64SystemRegisterKnownId.MDCCINT_EL1, 0x8010, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Monitor DCC Status Register
    /// </summary>
    public static Arm64SystemRegister MDCCSR_EL0 => new(Arm64SystemRegisterKnownId.MDCCSR_EL0, 0x9808, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Monitor Debug Configuration Register (EL2)
    /// </summary>
    public static Arm64SystemRegister MDCR_EL2 => new(Arm64SystemRegisterKnownId.MDCR_EL2, 0xE089, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Monitor Debug Configuration Register (EL3)
    /// </summary>
    public static Arm64SystemRegister MDCR_EL3 => new(Arm64SystemRegisterKnownId.MDCR_EL3, 0xF099, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Monitor Debug ROM Address Register
    /// </summary>
    public static Arm64SystemRegister MDRAR_EL1 => new(Arm64SystemRegisterKnownId.MDRAR_EL1, 0x8080, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Monitor Debug System Control Register
    /// </summary>
    public static Arm64SystemRegister MDSCR_EL1 => new(Arm64SystemRegisterKnownId.MDSCR_EL1, 0x8012, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Breakpoint and Watchpoint Selection Register
    /// </summary>
    public static Arm64SystemRegister MDSELR_EL1 => new(Arm64SystemRegisterKnownId.MDSELR_EL1, 0x8022, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Monitor Debug Step Opcode Register
    /// </summary>
    public static Arm64SystemRegister MDSTEPOP_EL1 => new(Arm64SystemRegisterKnownId.MDSTEPOP_EL1, 0x802A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Alternate MECID for EL2 and EL2&amp;0 translation regimes
    /// </summary>
    public static Arm64SystemRegister MECID_A0_EL2 => new(Arm64SystemRegisterKnownId.MECID_A0_EL2, 0xE541, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Alternate MECID for EL2&amp;0 translation regimes.
    /// </summary>
    public static Arm64SystemRegister MECID_A1_EL2 => new(Arm64SystemRegisterKnownId.MECID_A1_EL2, 0xE543, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Primary MECID for EL2 and EL2&amp;0 translation regimes
    /// </summary>
    public static Arm64SystemRegister MECID_P0_EL2 => new(Arm64SystemRegisterKnownId.MECID_P0_EL2, 0xE540, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Primary MECID for EL2&amp;0 translation regimes
    /// </summary>
    public static Arm64SystemRegister MECID_P1_EL2 => new(Arm64SystemRegisterKnownId.MECID_P1_EL2, 0xE542, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Realm PA space Alternate MECID for EL3 stage 1 translation regime
    /// </summary>
    public static Arm64SystemRegister MECID_RL_A_EL3 => new(Arm64SystemRegisterKnownId.MECID_RL_A_EL3, 0xF551, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MEC Identification Register
    /// </summary>
    public static Arm64SystemRegister MECIDR_EL2 => new(Arm64SystemRegisterKnownId.MECIDR_EL2, 0xE547, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Physical Fault Address Register (EL3)
    /// </summary>
    public static Arm64SystemRegister MFAR_EL3 => new(Arm64SystemRegisterKnownId.MFAR_EL3, 0xF305, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Main ID Register
    /// </summary>
    public static Arm64SystemRegister MIDR_EL1 => new(Arm64SystemRegisterKnownId.MIDR_EL1, 0xC000, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// MPAM0 Register (EL1)
    /// </summary>
    public static Arm64SystemRegister MPAM0_EL1 => new(Arm64SystemRegisterKnownId.MPAM0_EL1, 0xC529, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM1 Register (EL1)
    /// </summary>
    public static Arm64SystemRegister MPAM1_EL1 => new(Arm64SystemRegisterKnownId.MPAM1_EL1, 0xC528, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM1 Register (EL1)
    /// </summary>
    public static Arm64SystemRegister MPAM1_EL12 => new(Arm64SystemRegisterKnownId.MPAM1_EL12, 0xED28, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM2 Register (EL2)
    /// </summary>
    public static Arm64SystemRegister MPAM2_EL2 => new(Arm64SystemRegisterKnownId.MPAM2_EL2, 0xE528, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM3 Register (EL3)
    /// </summary>
    public static Arm64SystemRegister MPAM3_EL3 => new(Arm64SystemRegisterKnownId.MPAM3_EL3, 0xF528, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM PE-side Maximum-bandwidth Control Register (EL0)
    /// </summary>
    public static Arm64SystemRegister MPAMBW0_EL1 => new(Arm64SystemRegisterKnownId.MPAMBW0_EL1, 0xC52D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM PE-side Maximum-bandwidth Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister MPAMBW1_EL1 => new(Arm64SystemRegisterKnownId.MPAMBW1_EL1, 0xC52C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM PE-side Maximum-bandwidth Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister MPAMBW1_EL12 => new(Arm64SystemRegisterKnownId.MPAMBW1_EL12, 0xED2C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM PE-side Maximum-bandwidth Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister MPAMBW2_EL2 => new(Arm64SystemRegisterKnownId.MPAMBW2_EL2, 0xE52C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM PE-side Maximum-bandwidth Control Register (EL3)
    /// </summary>
    public static Arm64SystemRegister MPAMBW3_EL3 => new(Arm64SystemRegisterKnownId.MPAMBW3_EL3, 0xF52C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM PE-side Maximum-bandwidth Limit Virtualization Register
    /// </summary>
    public static Arm64SystemRegister MPAMBWCAP_EL2 => new(Arm64SystemRegisterKnownId.MPAMBWCAP_EL2, 0xE52E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM PE-side Bandwidth Controls ID Register
    /// </summary>
    public static Arm64SystemRegister MPAMBWIDR_EL1 => new(Arm64SystemRegisterKnownId.MPAMBWIDR_EL1, 0xC525, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// MPAM Streaming Mode Bandwidth Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister MPAMBWSM_EL1 => new(Arm64SystemRegisterKnownId.MPAMBWSM_EL1, 0xC52F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM Hypervisor Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister MPAMHCR_EL2 => new(Arm64SystemRegisterKnownId.MPAMHCR_EL2, 0xE520, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM ID Register (EL1)
    /// </summary>
    public static Arm64SystemRegister MPAMIDR_EL1 => new(Arm64SystemRegisterKnownId.MPAMIDR_EL1, 0xC524, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// MPAM Streaming Mode Register
    /// </summary>
    public static Arm64SystemRegister MPAMSM_EL1 => new(Arm64SystemRegisterKnownId.MPAMSM_EL1, 0xC52B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM Virtual PARTID Mapping Register 0
    /// </summary>
    public static Arm64SystemRegister MPAMVPM0_EL2 => new(Arm64SystemRegisterKnownId.MPAMVPM0_EL2, 0xE530, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM Virtual PARTID Mapping Register 1
    /// </summary>
    public static Arm64SystemRegister MPAMVPM1_EL2 => new(Arm64SystemRegisterKnownId.MPAMVPM1_EL2, 0xE531, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM Virtual PARTID Mapping Register 2
    /// </summary>
    public static Arm64SystemRegister MPAMVPM2_EL2 => new(Arm64SystemRegisterKnownId.MPAMVPM2_EL2, 0xE532, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM Virtual PARTID Mapping Register 3
    /// </summary>
    public static Arm64SystemRegister MPAMVPM3_EL2 => new(Arm64SystemRegisterKnownId.MPAMVPM3_EL2, 0xE533, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM Virtual PARTID Mapping Register 4
    /// </summary>
    public static Arm64SystemRegister MPAMVPM4_EL2 => new(Arm64SystemRegisterKnownId.MPAMVPM4_EL2, 0xE534, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM Virtual PARTID Mapping Register 5
    /// </summary>
    public static Arm64SystemRegister MPAMVPM5_EL2 => new(Arm64SystemRegisterKnownId.MPAMVPM5_EL2, 0xE535, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM Virtual PARTID Mapping Register 6
    /// </summary>
    public static Arm64SystemRegister MPAMVPM6_EL2 => new(Arm64SystemRegisterKnownId.MPAMVPM6_EL2, 0xE536, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM Virtual PARTID Mapping Register 7
    /// </summary>
    public static Arm64SystemRegister MPAMVPM7_EL2 => new(Arm64SystemRegisterKnownId.MPAMVPM7_EL2, 0xE537, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// MPAM Virtual Partition Mapping Valid Register
    /// </summary>
    public static Arm64SystemRegister MPAMVPMV_EL2 => new(Arm64SystemRegisterKnownId.MPAMVPMV_EL2, 0xE521, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Multiprocessor Affinity Register
    /// </summary>
    public static Arm64SystemRegister MPIDR_EL1 => new(Arm64SystemRegisterKnownId.MPIDR_EL1, 0xC005, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Media and VFP Feature Register 0
    /// </summary>
    public static Arm64SystemRegister MVFR0_EL1 => new(Arm64SystemRegisterKnownId.MVFR0_EL1, 0xC018, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Media and VFP Feature Register 1
    /// </summary>
    public static Arm64SystemRegister MVFR1_EL1 => new(Arm64SystemRegisterKnownId.MVFR1_EL1, 0xC019, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// AArch32 Media and VFP Feature Register 2
    /// </summary>
    public static Arm64SystemRegister MVFR2_EL1 => new(Arm64SystemRegisterKnownId.MVFR2_EL1, 0xC01A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Condition Flags
    /// </summary>
    public static Arm64SystemRegister NZCV => new(Arm64SystemRegisterKnownId.NZCV, 0xDA10, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// OS Double Lock Register
    /// </summary>
    public static Arm64SystemRegister OSDLR_EL1 => new(Arm64SystemRegisterKnownId.OSDLR_EL1, 0x809C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// OS Lock Data Transfer Register, Receive
    /// </summary>
    public static Arm64SystemRegister OSDTRRX_EL1 => new(Arm64SystemRegisterKnownId.OSDTRRX_EL1, 0x8002, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// OS Lock Data Transfer Register, Transmit
    /// </summary>
    public static Arm64SystemRegister OSDTRTX_EL1 => new(Arm64SystemRegisterKnownId.OSDTRTX_EL1, 0x801A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// OS Lock Exception Catch Control Register
    /// </summary>
    public static Arm64SystemRegister OSECCR_EL1 => new(Arm64SystemRegisterKnownId.OSECCR_EL1, 0x8032, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// OS Lock Access Register
    /// </summary>
    public static Arm64SystemRegister OSLAR_EL1 => new(Arm64SystemRegisterKnownId.OSLAR_EL1, 0x8084, Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// OS Lock Status Register
    /// </summary>
    public static Arm64SystemRegister OSLSR_EL1 => new(Arm64SystemRegisterKnownId.OSLSR_EL1, 0x808C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// TLB Invalidate GPT Information by PA, All Entries, Local
    /// </summary>
    public static Arm64SystemRegister PAALL => new(Arm64SystemRegisterKnownId.PAALL, 0x743C, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate GPT Information by PA, All Entries, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister PAALLOS => new(Arm64SystemRegisterKnownId.PAALLOS, 0x740C, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// Privileged Access Never
    /// </summary>
    public static Arm64SystemRegister _PAN => new(Arm64SystemRegisterKnownId.PAN, 0xC213, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Physical Address Register
    /// </summary>
    public static Arm64SystemRegister PAR_EL1 => new(Arm64SystemRegisterKnownId.PAR_EL1, 0xC3A0, Arm64SystemRegisterKind.MRRS | Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR | Arm64SystemRegisterKind.MSRR);
    /// <summary>
    /// Physical Fault Address Register (EL1)
    /// </summary>
    public static Arm64SystemRegister PFAR_EL1 => new(Arm64SystemRegisterKnownId.PFAR_EL1, 0xC305, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Physical Fault Address Register (EL1)
    /// </summary>
    public static Arm64SystemRegister PFAR_EL12 => new(Arm64SystemRegisterKnownId.PFAR_EL12, 0xEB05, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Physical Fault Address Register (EL2)
    /// </summary>
    public static Arm64SystemRegister PFAR_EL2 => new(Arm64SystemRegisterKnownId.PFAR_EL2, 0xE305, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Permission Indirection Register 1 (EL1)
    /// </summary>
    public static Arm64SystemRegister PIR_EL1 => new(Arm64SystemRegisterKnownId.PIR_EL1, 0xC513, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Permission Indirection Register 1 (EL1)
    /// </summary>
    public static Arm64SystemRegister PIR_EL12 => new(Arm64SystemRegisterKnownId.PIR_EL12, 0xED13, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Permission Indirection Register 2 (EL2)
    /// </summary>
    public static Arm64SystemRegister PIR_EL2 => new(Arm64SystemRegisterKnownId.PIR_EL2, 0xE513, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    ///  Permission Indirection Register 3 (EL3)
    /// </summary>
    public static Arm64SystemRegister PIR_EL3 => new(Arm64SystemRegisterKnownId.PIR_EL3, 0xF513, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Permission Indirection Register 0 (EL1)
    /// </summary>
    public static Arm64SystemRegister PIRE0_EL1 => new(Arm64SystemRegisterKnownId.PIRE0_EL1, 0xC512, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Permission Indirection Register 0 (EL1)
    /// </summary>
    public static Arm64SystemRegister PIRE0_EL12 => new(Arm64SystemRegisterKnownId.PIRE0_EL12, 0xED12, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Permission Indirection Register 0 (EL2)
    /// </summary>
    public static Arm64SystemRegister PIRE0_EL2 => new(Arm64SystemRegisterKnownId.PIRE0_EL2, 0xE512, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Profiling Exception Mask
    /// </summary>
    public static Arm64SystemRegister _PM => new(Arm64SystemRegisterKnownId.PM, 0xC219, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Profiling Buffer ID Register
    /// </summary>
    public static Arm64SystemRegister PMBIDR_EL1 => new(Arm64SystemRegisterKnownId.PMBIDR_EL1, 0xC4D7, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Profiling Buffer Limit Address Register
    /// </summary>
    public static Arm64SystemRegister PMBLIMITR_EL1 => new(Arm64SystemRegisterKnownId.PMBLIMITR_EL1, 0xC4D0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Profiling Buffer Memory Attribute Register
    /// </summary>
    public static Arm64SystemRegister PMBMAR_EL1 => new(Arm64SystemRegisterKnownId.PMBMAR_EL1, 0xC4D5, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Profiling Buffer Write Pointer Register
    /// </summary>
    public static Arm64SystemRegister PMBPTR_EL1 => new(Arm64SystemRegisterKnownId.PMBPTR_EL1, 0xC4D1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Profiling Buffer Status/syndrome Register (EL1)
    /// </summary>
    public static Arm64SystemRegister PMBSR_EL1 => new(Arm64SystemRegisterKnownId.PMBSR_EL1, 0xC4D3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Profiling Buffer Status/syndrome Register (EL1)
    /// </summary>
    public static Arm64SystemRegister PMBSR_EL12 => new(Arm64SystemRegisterKnownId.PMBSR_EL12, 0xECD3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Profiling Buffer Syndrome Register (EL2)
    /// </summary>
    public static Arm64SystemRegister PMBSR_EL2 => new(Arm64SystemRegisterKnownId.PMBSR_EL2, 0xE4D3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Profiling Buffer Syndrome Register (EL3)
    /// </summary>
    public static Arm64SystemRegister PMBSR_EL3 => new(Arm64SystemRegisterKnownId.PMBSR_EL3, 0xF4D3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Cycle Count Filter Register
    /// </summary>
    public static Arm64SystemRegister PMCCFILTR_EL0 => new(Arm64SystemRegisterKnownId.PMCCFILTR_EL0, 0xDF7F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Cycle Count Register
    /// </summary>
    public static Arm64SystemRegister PMCCNTR_EL0 => new(Arm64SystemRegisterKnownId.PMCCNTR_EL0, 0xDCE8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Cycle Count Saved Value Register
    /// </summary>
    public static Arm64SystemRegister PMCCNTSVR_EL1 => new(Arm64SystemRegisterKnownId.PMCCNTSVR_EL1, 0x875F, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Common Event Identification Register 0
    /// </summary>
    public static Arm64SystemRegister PMCEID0_EL0 => new(Arm64SystemRegisterKnownId.PMCEID0_EL0, 0xDCE6, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Common Event Identification Register 1
    /// </summary>
    public static Arm64SystemRegister PMCEID1_EL0 => new(Arm64SystemRegisterKnownId.PMCEID1_EL0, 0xDCE7, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Count Enable Clear Register
    /// </summary>
    public static Arm64SystemRegister PMCNTENCLR_EL0 => new(Arm64SystemRegisterKnownId.PMCNTENCLR_EL0, 0xDCE2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Count Enable Set Register
    /// </summary>
    public static Arm64SystemRegister PMCNTENSET_EL0 => new(Arm64SystemRegisterKnownId.PMCNTENSET_EL0, 0xDCE1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Control Register
    /// </summary>
    public static Arm64SystemRegister PMCR_EL0 => new(Arm64SystemRegisterKnownId.PMCR_EL0, 0xDCE0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Extended Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister PMECR_EL1 => new(Arm64SystemRegisterKnownId.PMECR_EL1, 0xC4F5, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR0_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR0_EL0, 0xDF40, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR1_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR1_EL0, 0xDF41, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR10_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR10_EL0, 0xDF4A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR11_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR11_EL0, 0xDF4B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR12_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR12_EL0, 0xDF4C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR13_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR13_EL0, 0xDF4D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR14_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR14_EL0, 0xDF4E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR15_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR15_EL0, 0xDF4F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR16_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR16_EL0, 0xDF50, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR17_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR17_EL0, 0xDF51, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR18_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR18_EL0, 0xDF52, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR19_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR19_EL0, 0xDF53, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR2_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR2_EL0, 0xDF42, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR20_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR20_EL0, 0xDF54, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR21_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR21_EL0, 0xDF55, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR22_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR22_EL0, 0xDF56, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR23_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR23_EL0, 0xDF57, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR24_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR24_EL0, 0xDF58, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR25_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR25_EL0, 0xDF59, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR26_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR26_EL0, 0xDF5A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR27_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR27_EL0, 0xDF5B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR28_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR28_EL0, 0xDF5C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR29_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR29_EL0, 0xDF5D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR3_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR3_EL0, 0xDF43, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR30_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR30_EL0, 0xDF5E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR4_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR4_EL0, 0xDF44, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR5_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR5_EL0, 0xDF45, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR6_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR6_EL0, 0xDF46, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR7_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR7_EL0, 0xDF47, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR8_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR8_EL0, 0xDF48, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTR9_EL0 => new(Arm64SystemRegisterKnownId.PMEVCNTR9_EL0, 0xDF49, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR0_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR0_EL1, 0x8740, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR1_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR1_EL1, 0x8741, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR10_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR10_EL1, 0x874A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR11_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR11_EL1, 0x874B, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR12_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR12_EL1, 0x874C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR13_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR13_EL1, 0x874D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR14_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR14_EL1, 0x874E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR15_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR15_EL1, 0x874F, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR16_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR16_EL1, 0x8750, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR17_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR17_EL1, 0x8751, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR18_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR18_EL1, 0x8752, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR19_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR19_EL1, 0x8753, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR2_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR2_EL1, 0x8742, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR20_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR20_EL1, 0x8754, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR21_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR21_EL1, 0x8755, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR22_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR22_EL1, 0x8756, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR23_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR23_EL1, 0x8757, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR24_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR24_EL1, 0x8758, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR25_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR25_EL1, 0x8759, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR26_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR26_EL1, 0x875A, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR27_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR27_EL1, 0x875B, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR28_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR28_EL1, 0x875C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR29_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR29_EL1, 0x875D, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR3_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR3_EL1, 0x8743, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR30_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR30_EL1, 0x875E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR4_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR4_EL1, 0x8744, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR5_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR5_EL1, 0x8745, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR6_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR6_EL1, 0x8746, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR7_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR7_EL1, 0x8747, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR8_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR8_EL1, 0x8748, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Count Saved Value Registers
    /// </summary>
    public static Arm64SystemRegister PMEVCNTSVR9_EL1 => new(Arm64SystemRegisterKnownId.PMEVCNTSVR9_EL1, 0x8749, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER0_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER0_EL0, 0xDF60, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER1_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER1_EL0, 0xDF61, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER10_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER10_EL0, 0xDF6A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER11_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER11_EL0, 0xDF6B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER12_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER12_EL0, 0xDF6C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER13_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER13_EL0, 0xDF6D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER14_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER14_EL0, 0xDF6E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER15_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER15_EL0, 0xDF6F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER16_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER16_EL0, 0xDF70, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER17_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER17_EL0, 0xDF71, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER18_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER18_EL0, 0xDF72, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER19_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER19_EL0, 0xDF73, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER2_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER2_EL0, 0xDF62, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER20_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER20_EL0, 0xDF74, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER21_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER21_EL0, 0xDF75, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER22_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER22_EL0, 0xDF76, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER23_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER23_EL0, 0xDF77, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER24_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER24_EL0, 0xDF78, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER25_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER25_EL0, 0xDF79, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER26_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER26_EL0, 0xDF7A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER27_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER27_EL0, 0xDF7B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER28_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER28_EL0, 0xDF7C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER29_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER29_EL0, 0xDF7D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER3_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER3_EL0, 0xDF63, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER30_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER30_EL0, 0xDF7E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER4_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER4_EL0, 0xDF64, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER5_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER5_EL0, 0xDF65, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER6_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER6_EL0, 0xDF66, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER7_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER7_EL0, 0xDF67, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER8_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER8_EL0, 0xDF68, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Type Registers
    /// </summary>
    public static Arm64SystemRegister PMEVTYPER9_EL0 => new(Arm64SystemRegisterKnownId.PMEVTYPER9_EL0, 0xDF69, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Instruction Address Register
    /// </summary>
    public static Arm64SystemRegister PMIAR_EL1 => new(Arm64SystemRegisterKnownId.PMIAR_EL1, 0xC4F7, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Instruction Counter Filter Register
    /// </summary>
    public static Arm64SystemRegister PMICFILTR_EL0 => new(Arm64SystemRegisterKnownId.PMICFILTR_EL0, 0xDCB0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Instruction Counter Register
    /// </summary>
    public static Arm64SystemRegister PMICNTR_EL0 => new(Arm64SystemRegisterKnownId.PMICNTR_EL0, 0xDCA0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Instruction Count Saved Value Register
    /// </summary>
    public static Arm64SystemRegister PMICNTSVR_EL1 => new(Arm64SystemRegisterKnownId.PMICNTSVR_EL1, 0x8760, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Interrupt Enable Clear Register
    /// </summary>
    public static Arm64SystemRegister PMINTENCLR_EL1 => new(Arm64SystemRegisterKnownId.PMINTENCLR_EL1, 0xC4F2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Interrupt Enable Set Register
    /// </summary>
    public static Arm64SystemRegister PMINTENSET_EL1 => new(Arm64SystemRegisterKnownId.PMINTENSET_EL1, 0xC4F1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Machine Identification Register
    /// </summary>
    public static Arm64SystemRegister PMMIR_EL1 => new(Arm64SystemRegisterKnownId.PMMIR_EL1, 0xC4F6, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Performance Monitors Overflow Flag Status Clear Register
    /// </summary>
    public static Arm64SystemRegister PMOVSCLR_EL0 => new(Arm64SystemRegisterKnownId.PMOVSCLR_EL0, 0xDCE3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Overflow Flag Status Set Register
    /// </summary>
    public static Arm64SystemRegister PMOVSSET_EL0 => new(Arm64SystemRegisterKnownId.PMOVSSET_EL0, 0xDCF3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Statistical Profiling Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister PMSCR_EL1 => new(Arm64SystemRegisterKnownId.PMSCR_EL1, 0xC4C8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Statistical Profiling Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister PMSCR_EL12 => new(Arm64SystemRegisterKnownId.PMSCR_EL12, 0xECC8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Statistical Profiling Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister PMSCR_EL2 => new(Arm64SystemRegisterKnownId.PMSCR_EL2, 0xE4C8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Sampling Data Source Filter Register
    /// </summary>
    public static Arm64SystemRegister PMSDSFR_EL1 => new(Arm64SystemRegisterKnownId.PMSDSFR_EL1, 0xC4D4, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Event Counter Selection Register
    /// </summary>
    public static Arm64SystemRegister PMSELR_EL0 => new(Arm64SystemRegisterKnownId.PMSELR_EL0, 0xDCE5, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Sampling Event Filter Register
    /// </summary>
    public static Arm64SystemRegister PMSEVFR_EL1 => new(Arm64SystemRegisterKnownId.PMSEVFR_EL1, 0xC4CD, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Sampling Filter Control Register
    /// </summary>
    public static Arm64SystemRegister PMSFCR_EL1 => new(Arm64SystemRegisterKnownId.PMSFCR_EL1, 0xC4CC, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Sampling Interval Counter Register
    /// </summary>
    public static Arm64SystemRegister PMSICR_EL1 => new(Arm64SystemRegisterKnownId.PMSICR_EL1, 0xC4CA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Sampling Profiling ID Register
    /// </summary>
    public static Arm64SystemRegister PMSIDR_EL1 => new(Arm64SystemRegisterKnownId.PMSIDR_EL1, 0xC4CF, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Sampling Interval Reload Register
    /// </summary>
    public static Arm64SystemRegister PMSIRR_EL1 => new(Arm64SystemRegisterKnownId.PMSIRR_EL1, 0xC4CB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Sampling Latency Filter Register
    /// </summary>
    public static Arm64SystemRegister PMSLATFR_EL1 => new(Arm64SystemRegisterKnownId.PMSLATFR_EL1, 0xC4CE, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Sampling Inverted Event Filter Register
    /// </summary>
    public static Arm64SystemRegister PMSNEVFR_EL1 => new(Arm64SystemRegisterKnownId.PMSNEVFR_EL1, 0xC4C9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Snapshot Status and Capture Register
    /// </summary>
    public static Arm64SystemRegister PMSSCR_EL1 => new(Arm64SystemRegisterKnownId.PMSSCR_EL1, 0xC4EB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Software Increment Register
    /// </summary>
    public static Arm64SystemRegister PMSWINC_EL0 => new(Arm64SystemRegisterKnownId.PMSWINC_EL0, 0xDCE4, Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors User Access Control Register
    /// </summary>
    public static Arm64SystemRegister PMUACR_EL1 => new(Arm64SystemRegisterKnownId.PMUACR_EL1, 0xC4F4, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors User Enable Register
    /// </summary>
    public static Arm64SystemRegister PMUSERENR_EL0 => new(Arm64SystemRegisterKnownId.PMUSERENR_EL0, 0xDCF0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Selected Event Count Register
    /// </summary>
    public static Arm64SystemRegister PMXEVCNTR_EL0 => new(Arm64SystemRegisterKnownId.PMXEVCNTR_EL0, 0xDCEA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Selected Event Type Register
    /// </summary>
    public static Arm64SystemRegister PMXEVTYPER_EL0 => new(Arm64SystemRegisterKnownId.PMXEVTYPER_EL0, 0xDCE9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Performance Monitors Zero with Mask
    /// </summary>
    public static Arm64SystemRegister PMZR_EL0 => new(Arm64SystemRegisterKnownId.PMZR_EL0, 0xDCEC, Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Permission Overlay Register 0 (EL0)
    /// </summary>
    public static Arm64SystemRegister POR_EL0 => new(Arm64SystemRegisterKnownId.POR_EL0, 0xDD14, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Permission Overlay Register 1 (EL1)
    /// </summary>
    public static Arm64SystemRegister POR_EL1 => new(Arm64SystemRegisterKnownId.POR_EL1, 0xC514, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Permission Overlay Register 1 (EL1)
    /// </summary>
    public static Arm64SystemRegister POR_EL12 => new(Arm64SystemRegisterKnownId.POR_EL12, 0xED14, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Permission Overlay Register 2 (EL2)
    /// </summary>
    public static Arm64SystemRegister POR_EL2 => new(Arm64SystemRegisterKnownId.POR_EL2, 0xE514, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Permission Overlay Register 3 (EL3)
    /// </summary>
    public static Arm64SystemRegister POR_EL3 => new(Arm64SystemRegisterKnownId.POR_EL3, 0xF514, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Control Flow Prediction Restriction by Context
    /// </summary>
    public static Arm64SystemRegister _RCTX => new(Arm64SystemRegisterKnownId.RCTX, 0x5B9C, Arm64SystemRegisterKind.CFP | Arm64SystemRegisterKind.COSP | Arm64SystemRegisterKind.CPP | Arm64SystemRegisterKind.DVP);
    /// <summary>
    /// Read Check Write Instruction Mask (EL1)
    /// </summary>
    public static Arm64SystemRegister RCWMASK_EL1 => new(Arm64SystemRegisterKnownId.RCWMASK_EL1, 0xC686, Arm64SystemRegisterKind.MRRS | Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR | Arm64SystemRegisterKind.MSRR);
    /// <summary>
    /// Software Read Check Write Instruction Mask (EL1)
    /// </summary>
    public static Arm64SystemRegister RCWSMASK_EL1 => new(Arm64SystemRegisterKnownId.RCWSMASK_EL1, 0xC683, Arm64SystemRegisterKind.MRRS | Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR | Arm64SystemRegisterKind.MSRR);
    /// <summary>
    /// Revision ID Register
    /// </summary>
    public static Arm64SystemRegister REVIDR_EL1 => new(Arm64SystemRegisterKnownId.REVIDR_EL1, 0xC006, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Random Allocation Tag Seed Register.
    /// </summary>
    public static Arm64SystemRegister RGSR_EL1 => new(Arm64SystemRegisterKnownId.RGSR_EL1, 0xC085, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// TLB Range Invalidate by Intermediate Physical Address, Stage 2, EL1
    /// </summary>
    public static Arm64SystemRegister RIPAS2E1 => new(Arm64SystemRegisterKnownId.RIPAS2E1, 0x6422, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by Intermediate Physical Address, Stage 2, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RIPAS2E1IS => new(Arm64SystemRegisterKnownId.RIPAS2E1IS, 0x6402, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by Intermediate Physical Address, Stage 2, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RIPAS2E1ISNXS => new(Arm64SystemRegisterKnownId.RIPAS2E1ISNXS, 0x6482, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by Intermediate Physical Address, Stage 2, EL1
    /// </summary>
    public static Arm64SystemRegister RIPAS2E1NXS => new(Arm64SystemRegisterKnownId.RIPAS2E1NXS, 0x64A2, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by Intermediate Physical Address, Stage 2, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RIPAS2E1OS => new(Arm64SystemRegisterKnownId.RIPAS2E1OS, 0x6423, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by Intermediate Physical Address, Stage 2, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RIPAS2E1OSNXS => new(Arm64SystemRegisterKnownId.RIPAS2E1OSNXS, 0x64A3, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1
    /// </summary>
    public static Arm64SystemRegister RIPAS2LE1 => new(Arm64SystemRegisterKnownId.RIPAS2LE1, 0x6426, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RIPAS2LE1IS => new(Arm64SystemRegisterKnownId.RIPAS2LE1IS, 0x6406, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RIPAS2LE1ISNXS => new(Arm64SystemRegisterKnownId.RIPAS2LE1ISNXS, 0x6486, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1
    /// </summary>
    public static Arm64SystemRegister RIPAS2LE1NXS => new(Arm64SystemRegisterKnownId.RIPAS2LE1NXS, 0x64A6, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RIPAS2LE1OS => new(Arm64SystemRegisterKnownId.RIPAS2LE1OS, 0x6427, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by Intermediate Physical Address, Stage 2, Last level, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RIPAS2LE1OSNXS => new(Arm64SystemRegisterKnownId.RIPAS2LE1OSNXS, 0x64A7, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// Reset Management Register (EL1)
    /// </summary>
    public static Arm64SystemRegister RMR_EL1 => new(Arm64SystemRegisterKnownId.RMR_EL1, 0xC602, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Reset Management Register (EL2)
    /// </summary>
    public static Arm64SystemRegister RMR_EL2 => new(Arm64SystemRegisterKnownId.RMR_EL2, 0xE602, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Reset Management Register (EL3)
    /// </summary>
    public static Arm64SystemRegister RMR_EL3 => new(Arm64SystemRegisterKnownId.RMR_EL3, 0xF602, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Random Number
    /// </summary>
    public static Arm64SystemRegister RNDR => new(Arm64SystemRegisterKnownId.RNDR, 0xD920, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Random Number Full Entropy
    /// </summary>
    public static Arm64SystemRegister RNDRRS => new(Arm64SystemRegisterKnownId.RNDRRS, 0xD921, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// TLB Range Invalidate GPT Information by PA, Last level, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RPALOS => new(Arm64SystemRegisterKnownId.RPALOS, 0x7427, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Range Invalidate GPT Information by PA, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RPAOS => new(Arm64SystemRegisterKnownId.RPAOS, 0x7423, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Range Invalidate by VA, All ASID, EL1
    /// </summary>
    public static Arm64SystemRegister RVAAE1 => new(Arm64SystemRegisterKnownId.RVAAE1, 0x4433, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, All ASID, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVAAE1IS => new(Arm64SystemRegisterKnownId.RVAAE1IS, 0x4413, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, All ASID, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVAAE1ISNXS => new(Arm64SystemRegisterKnownId.RVAAE1ISNXS, 0x4493, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, All ASID, EL1
    /// </summary>
    public static Arm64SystemRegister RVAAE1NXS => new(Arm64SystemRegisterKnownId.RVAAE1NXS, 0x44B3, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, All ASID, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVAAE1OS => new(Arm64SystemRegisterKnownId.RVAAE1OS, 0x442B, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, All ASID, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVAAE1OSNXS => new(Arm64SystemRegisterKnownId.RVAAE1OSNXS, 0x44AB, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, All ASID, Last level, EL1
    /// </summary>
    public static Arm64SystemRegister RVAALE1 => new(Arm64SystemRegisterKnownId.RVAALE1, 0x4437, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, All ASID, Last Level, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVAALE1IS => new(Arm64SystemRegisterKnownId.RVAALE1IS, 0x4417, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, All ASID, Last Level, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVAALE1ISNXS => new(Arm64SystemRegisterKnownId.RVAALE1ISNXS, 0x4497, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, All ASID, Last level, EL1
    /// </summary>
    public static Arm64SystemRegister RVAALE1NXS => new(Arm64SystemRegisterKnownId.RVAALE1NXS, 0x44B7, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, All ASID, Last Level, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVAALE1OS => new(Arm64SystemRegisterKnownId.RVAALE1OS, 0x442F, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, All ASID, Last Level, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVAALE1OSNXS => new(Arm64SystemRegisterKnownId.RVAALE1OSNXS, 0x44AF, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL1
    /// </summary>
    public static Arm64SystemRegister RVAE1 => new(Arm64SystemRegisterKnownId.RVAE1, 0x4431, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVAE1IS => new(Arm64SystemRegisterKnownId.RVAE1IS, 0x4411, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVAE1ISNXS => new(Arm64SystemRegisterKnownId.RVAE1ISNXS, 0x4491, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL1
    /// </summary>
    public static Arm64SystemRegister RVAE1NXS => new(Arm64SystemRegisterKnownId.RVAE1NXS, 0x44B1, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVAE1OS => new(Arm64SystemRegisterKnownId.RVAE1OS, 0x4429, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVAE1OSNXS => new(Arm64SystemRegisterKnownId.RVAE1OSNXS, 0x44A9, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL2
    /// </summary>
    public static Arm64SystemRegister RVAE2 => new(Arm64SystemRegisterKnownId.RVAE2, 0x6431, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL2, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVAE2IS => new(Arm64SystemRegisterKnownId.RVAE2IS, 0x6411, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL2, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVAE2ISNXS => new(Arm64SystemRegisterKnownId.RVAE2ISNXS, 0x6491, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL2
    /// </summary>
    public static Arm64SystemRegister RVAE2NXS => new(Arm64SystemRegisterKnownId.RVAE2NXS, 0x64B1, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL2, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVAE2OS => new(Arm64SystemRegisterKnownId.RVAE2OS, 0x6429, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL2, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVAE2OSNXS => new(Arm64SystemRegisterKnownId.RVAE2OSNXS, 0x64A9, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL3
    /// </summary>
    public static Arm64SystemRegister RVAE3 => new(Arm64SystemRegisterKnownId.RVAE3, 0x7431, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL3, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVAE3IS => new(Arm64SystemRegisterKnownId.RVAE3IS, 0x7411, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL3, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVAE3ISNXS => new(Arm64SystemRegisterKnownId.RVAE3ISNXS, 0x7491, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL3
    /// </summary>
    public static Arm64SystemRegister RVAE3NXS => new(Arm64SystemRegisterKnownId.RVAE3NXS, 0x74B1, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL3, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVAE3OS => new(Arm64SystemRegisterKnownId.RVAE3OS, 0x7429, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, EL3, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVAE3OSNXS => new(Arm64SystemRegisterKnownId.RVAE3OSNXS, 0x74A9, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL1
    /// </summary>
    public static Arm64SystemRegister RVALE1 => new(Arm64SystemRegisterKnownId.RVALE1, 0x4435, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVALE1IS => new(Arm64SystemRegisterKnownId.RVALE1IS, 0x4415, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVALE1ISNXS => new(Arm64SystemRegisterKnownId.RVALE1ISNXS, 0x4495, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL1
    /// </summary>
    public static Arm64SystemRegister RVALE1NXS => new(Arm64SystemRegisterKnownId.RVALE1NXS, 0x44B5, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVALE1OS => new(Arm64SystemRegisterKnownId.RVALE1OS, 0x442D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVALE1OSNXS => new(Arm64SystemRegisterKnownId.RVALE1OSNXS, 0x44AD, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL2
    /// </summary>
    public static Arm64SystemRegister RVALE2 => new(Arm64SystemRegisterKnownId.RVALE2, 0x6435, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL2, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVALE2IS => new(Arm64SystemRegisterKnownId.RVALE2IS, 0x6415, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL2, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVALE2ISNXS => new(Arm64SystemRegisterKnownId.RVALE2ISNXS, 0x6495, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL2
    /// </summary>
    public static Arm64SystemRegister RVALE2NXS => new(Arm64SystemRegisterKnownId.RVALE2NXS, 0x64B5, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL2, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVALE2OS => new(Arm64SystemRegisterKnownId.RVALE2OS, 0x642D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL2, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVALE2OSNXS => new(Arm64SystemRegisterKnownId.RVALE2OSNXS, 0x64AD, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL3
    /// </summary>
    public static Arm64SystemRegister RVALE3 => new(Arm64SystemRegisterKnownId.RVALE3, 0x7435, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL3, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVALE3IS => new(Arm64SystemRegisterKnownId.RVALE3IS, 0x7415, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL3, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister RVALE3ISNXS => new(Arm64SystemRegisterKnownId.RVALE3ISNXS, 0x7495, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL3
    /// </summary>
    public static Arm64SystemRegister RVALE3NXS => new(Arm64SystemRegisterKnownId.RVALE3NXS, 0x74B5, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL3, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVALE3OS => new(Arm64SystemRegisterKnownId.RVALE3OS, 0x742D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Range Invalidate by VA, Last level, EL3, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister RVALE3OSNXS => new(Arm64SystemRegisterKnownId.RVALE3OSNXS, 0x74AD, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// Reset Vector Base Address Register (if EL2 and EL3 not implemented)
    /// </summary>
    public static Arm64SystemRegister RVBAR_EL1 => new(Arm64SystemRegisterKnownId.RVBAR_EL1, 0xC601, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Reset Vector Base Address Register (if EL3 not implemented)
    /// </summary>
    public static Arm64SystemRegister RVBAR_EL2 => new(Arm64SystemRegisterKnownId.RVBAR_EL2, 0xE601, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Reset Vector Base Address Register (if EL3 implemented)
    /// </summary>
    public static Arm64SystemRegister RVBAR_EL3 => new(Arm64SystemRegisterKnownId.RVBAR_EL3, 0xF601, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Address Translate Stages 1 and 2 EL0 Read
    /// </summary>
    public static Arm64SystemRegister S12E0R => new(Arm64SystemRegisterKnownId.S12E0R, 0x63C6, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stages 1 and 2 EL0 Write
    /// </summary>
    public static Arm64SystemRegister S12E0W => new(Arm64SystemRegisterKnownId.S12E0W, 0x63C7, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stages 1 and 2 EL1 Read
    /// </summary>
    public static Arm64SystemRegister S12E1R => new(Arm64SystemRegisterKnownId.S12E1R, 0x63C4, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stages 1 and 2 EL1 Write
    /// </summary>
    public static Arm64SystemRegister S12E1W => new(Arm64SystemRegisterKnownId.S12E1W, 0x63C5, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stage 1 EL0 Read
    /// </summary>
    public static Arm64SystemRegister S1E0R => new(Arm64SystemRegisterKnownId.S1E0R, 0x43C2, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stage 1 EL0 Write
    /// </summary>
    public static Arm64SystemRegister S1E0W => new(Arm64SystemRegisterKnownId.S1E0W, 0x43C3, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stage 1 EL1 Without Permission checks
    /// </summary>
    public static Arm64SystemRegister S1E1A => new(Arm64SystemRegisterKnownId.S1E1A, 0x43CA, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stage 1 EL1 Read
    /// </summary>
    public static Arm64SystemRegister S1E1R => new(Arm64SystemRegisterKnownId.S1E1R, 0x43C0, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stage 1 EL1 Read PAN
    /// </summary>
    public static Arm64SystemRegister S1E1RP => new(Arm64SystemRegisterKnownId.S1E1RP, 0x43C8, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stage 1 EL1 Write
    /// </summary>
    public static Arm64SystemRegister S1E1W => new(Arm64SystemRegisterKnownId.S1E1W, 0x43C1, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stage 1 EL1 Write PAN
    /// </summary>
    public static Arm64SystemRegister S1E1WP => new(Arm64SystemRegisterKnownId.S1E1WP, 0x43C9, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stage 1 EL2 Without Permission checks
    /// </summary>
    public static Arm64SystemRegister S1E2A => new(Arm64SystemRegisterKnownId.S1E2A, 0x63CA, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stage 1 EL2 Read
    /// </summary>
    public static Arm64SystemRegister S1E2R => new(Arm64SystemRegisterKnownId.S1E2R, 0x63C0, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stage 1 EL2 Write
    /// </summary>
    public static Arm64SystemRegister S1E2W => new(Arm64SystemRegisterKnownId.S1E2W, 0x63C1, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stage 1 EL3 Without Permission checks
    /// </summary>
    public static Arm64SystemRegister S1E3A => new(Arm64SystemRegisterKnownId.S1E3A, 0x73CA, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stage 1 EL3 Read
    /// </summary>
    public static Arm64SystemRegister S1E3R => new(Arm64SystemRegisterKnownId.S1E3R, 0x73C0, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Address Translate Stage 1 EL3 Write
    /// </summary>
    public static Arm64SystemRegister S1E3W => new(Arm64SystemRegisterKnownId.S1E3W, 0x73C1, Arm64SystemRegisterKind.AT);
    /// <summary>
    /// Stage 2 Permission Indirection Register (EL2)
    /// </summary>
    public static Arm64SystemRegister S2PIR_EL2 => new(Arm64SystemRegisterKnownId.S2PIR_EL2, 0xE515, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Stage 2 Permission Overlay Register (EL1)
    /// </summary>
    public static Arm64SystemRegister S2POR_EL1 => new(Arm64SystemRegisterKnownId.S2POR_EL1, 0xC515, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Secure Configuration Register
    /// </summary>
    public static Arm64SystemRegister SCR_EL3 => new(Arm64SystemRegisterKnownId.SCR_EL3, 0xF088, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SCTLR_EL1 => new(Arm64SystemRegisterKnownId.SCTLR_EL1, 0xC080, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SCTLR_EL12 => new(Arm64SystemRegisterKnownId.SCTLR_EL12, 0xE880, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister SCTLR_EL2 => new(Arm64SystemRegisterKnownId.SCTLR_EL2, 0xE080, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Control Register (EL3)
    /// </summary>
    public static Arm64SystemRegister SCTLR_EL3 => new(Arm64SystemRegisterKnownId.SCTLR_EL3, 0xF080, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SCTLR2_EL1 => new(Arm64SystemRegisterKnownId.SCTLR2_EL1, 0xC083, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SCTLR2_EL12 => new(Arm64SystemRegisterKnownId.SCTLR2_EL12, 0xE883, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister SCTLR2_EL2 => new(Arm64SystemRegisterKnownId.SCTLR2_EL2, 0xE083, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Control Register (EL3)
    /// </summary>
    public static Arm64SystemRegister SCTLR2_EL3 => new(Arm64SystemRegisterKnownId.SCTLR2_EL3, 0xF083, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SCTLR2ALIAS_EL1 => new(Arm64SystemRegisterKnownId.SCTLR2ALIAS_EL1, 0xC0A7, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended System Control Masking Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SCTLR2MASK_EL1 => new(Arm64SystemRegisterKnownId.SCTLR2MASK_EL1, 0xC0A3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended System Control Masking Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SCTLR2MASK_EL12 => new(Arm64SystemRegisterKnownId.SCTLR2MASK_EL12, 0xE8A3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended System Control Masking Register (EL2)
    /// </summary>
    public static Arm64SystemRegister SCTLR2MASK_EL2 => new(Arm64SystemRegisterKnownId.SCTLR2MASK_EL2, 0xE0A3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SCTLRALIAS_EL1 => new(Arm64SystemRegisterKnownId.SCTLRALIAS_EL1, 0xC0A6, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Control Masking Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SCTLRMASK_EL1 => new(Arm64SystemRegisterKnownId.SCTLRMASK_EL1, 0xC0A0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Control Masking Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SCTLRMASK_EL12 => new(Arm64SystemRegisterKnownId.SCTLRMASK_EL12, 0xE8A0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Control Masking Register (EL2)
    /// </summary>
    public static Arm64SystemRegister SCTLRMASK_EL2 => new(Arm64SystemRegisterKnownId.SCTLRMASK_EL2, 0xE0A0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// EL0 Read/Write Software Context Number
    /// </summary>
    public static Arm64SystemRegister SCXTNUM_EL0 => new(Arm64SystemRegisterKnownId.SCXTNUM_EL0, 0xDE87, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// EL1 Read/Write Software Context Number
    /// </summary>
    public static Arm64SystemRegister SCXTNUM_EL1 => new(Arm64SystemRegisterKnownId.SCXTNUM_EL1, 0xC687, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// EL1 Read/Write Software Context Number
    /// </summary>
    public static Arm64SystemRegister SCXTNUM_EL12 => new(Arm64SystemRegisterKnownId.SCXTNUM_EL12, 0xEE87, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// EL2 Read/Write Software Context Number
    /// </summary>
    public static Arm64SystemRegister SCXTNUM_EL2 => new(Arm64SystemRegisterKnownId.SCXTNUM_EL2, 0xE687, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// EL3 Read/Write Software Context Number
    /// </summary>
    public static Arm64SystemRegister SCXTNUM_EL3 => new(Arm64SystemRegisterKnownId.SCXTNUM_EL3, 0xF687, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// AArch32 Secure Debug Enable Register
    /// </summary>
    public static Arm64SystemRegister SDER32_EL2 => new(Arm64SystemRegisterKnownId.SDER32_EL2, 0xE099, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// AArch32 Secure Debug Enable Register
    /// </summary>
    public static Arm64SystemRegister SDER32_EL3 => new(Arm64SystemRegisterKnownId.SDER32_EL3, 0xF089, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// SME Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SMCR_EL1 => new(Arm64SystemRegisterKnownId.SMCR_EL1, 0xC096, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// SME Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SMCR_EL12 => new(Arm64SystemRegisterKnownId.SMCR_EL12, 0xE896, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// SME Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister SMCR_EL2 => new(Arm64SystemRegisterKnownId.SMCR_EL2, 0xE096, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// SME Control Register (EL3)
    /// </summary>
    public static Arm64SystemRegister SMCR_EL3 => new(Arm64SystemRegisterKnownId.SMCR_EL3, 0xF096, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Streaming Mode Identification Register
    /// </summary>
    public static Arm64SystemRegister SMIDR_EL1 => new(Arm64SystemRegisterKnownId.SMIDR_EL1, 0xC806, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Streaming Mode Priority Register
    /// </summary>
    public static Arm64SystemRegister SMPRI_EL1 => new(Arm64SystemRegisterKnownId.SMPRI_EL1, 0xC094, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Streaming Mode Priority Mapping Register
    /// </summary>
    public static Arm64SystemRegister SMPRIMAP_EL2 => new(Arm64SystemRegisterKnownId.SMPRIMAP_EL2, 0xE095, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Stack Pointer (EL0)
    /// </summary>
    public static Arm64SystemRegister SP_EL0 => new(Arm64SystemRegisterKnownId.SP_EL0, 0xC208, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Stack Pointer (EL1)
    /// </summary>
    public static Arm64SystemRegister SP_EL1 => new(Arm64SystemRegisterKnownId.SP_EL1, 0xE208, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Stack Pointer (EL2)
    /// </summary>
    public static Arm64SystemRegister SP_EL2 => new(Arm64SystemRegisterKnownId.SP_EL2, 0xF208, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Access Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SPMACCESSR_EL1 => new(Arm64SystemRegisterKnownId.SPMACCESSR_EL1, 0x84EB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Access Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SPMACCESSR_EL12 => new(Arm64SystemRegisterKnownId.SPMACCESSR_EL12, 0xACEB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Access Register (EL2)
    /// </summary>
    public static Arm64SystemRegister SPMACCESSR_EL2 => new(Arm64SystemRegisterKnownId.SPMACCESSR_EL2, 0xA4EB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Access Register (EL3)
    /// </summary>
    public static Arm64SystemRegister SPMACCESSR_EL3 => new(Arm64SystemRegisterKnownId.SPMACCESSR_EL3, 0xB4EB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Configuration Register
    /// </summary>
    public static Arm64SystemRegister SPMCFGR_EL1 => new(Arm64SystemRegisterKnownId.SPMCFGR_EL1, 0x84EF, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// System PMU Counter Group Configuration Registers
    /// </summary>
    public static Arm64SystemRegister SPMCGCR0_EL1 => new(Arm64SystemRegisterKnownId.SPMCGCR0_EL1, 0x84E8, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// System PMU Counter Group Configuration Registers
    /// </summary>
    public static Arm64SystemRegister SPMCGCR1_EL1 => new(Arm64SystemRegisterKnownId.SPMCGCR1_EL1, 0x84E9, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// System Performance Monitors Count Enable Clear Register
    /// </summary>
    public static Arm64SystemRegister SPMCNTENCLR_EL0 => new(Arm64SystemRegisterKnownId.SPMCNTENCLR_EL0, 0x9CE2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Count Enable Set Register
    /// </summary>
    public static Arm64SystemRegister SPMCNTENSET_EL0 => new(Arm64SystemRegisterKnownId.SPMCNTENSET_EL0, 0x9CE1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitor Control Register
    /// </summary>
    public static Arm64SystemRegister SPMCR_EL0 => new(Arm64SystemRegisterKnownId.SPMCR_EL0, 0x9CE0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Device Affinity Register
    /// </summary>
    public static Arm64SystemRegister SPMDEVAFF_EL1 => new(Arm64SystemRegisterKnownId.SPMDEVAFF_EL1, 0x84EE, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// System Performance Monitors Device Architecture Register
    /// </summary>
    public static Arm64SystemRegister SPMDEVARCH_EL1 => new(Arm64SystemRegisterKnownId.SPMDEVARCH_EL1, 0x84ED, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR0_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR0_EL0, 0x9F00, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR1_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR1_EL0, 0x9F01, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR10_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR10_EL0, 0x9F0A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR11_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR11_EL0, 0x9F0B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR12_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR12_EL0, 0x9F0C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR13_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR13_EL0, 0x9F0D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR14_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR14_EL0, 0x9F0E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR15_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR15_EL0, 0x9F0F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR2_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR2_EL0, 0x9F02, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR3_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR3_EL0, 0x9F03, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR4_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR4_EL0, 0x9F04, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR5_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR5_EL0, 0x9F05, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR6_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR6_EL0, 0x9F06, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR7_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR7_EL0, 0x9F07, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR8_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR8_EL0, 0x9F08, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Count Register
    /// </summary>
    public static Arm64SystemRegister SPMEVCNTR9_EL0 => new(Arm64SystemRegisterKnownId.SPMEVCNTR9_EL0, 0x9F09, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R0_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R0_EL0, 0x9F30, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R1_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R1_EL0, 0x9F31, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R10_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R10_EL0, 0x9F3A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R11_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R11_EL0, 0x9F3B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R12_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R12_EL0, 0x9F3C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R13_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R13_EL0, 0x9F3D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R14_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R14_EL0, 0x9F3E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R15_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R15_EL0, 0x9F3F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R2_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R2_EL0, 0x9F32, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R3_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R3_EL0, 0x9F33, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R4_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R4_EL0, 0x9F34, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R5_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R5_EL0, 0x9F35, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R6_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R6_EL0, 0x9F36, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R7_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R7_EL0, 0x9F37, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R8_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R8_EL0, 0x9F38, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register 2
    /// </summary>
    public static Arm64SystemRegister SPMEVFILT2R9_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILT2R9_EL0, 0x9F39, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR0_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR0_EL0, 0x9F20, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR1_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR1_EL0, 0x9F21, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR10_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR10_EL0, 0x9F2A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR11_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR11_EL0, 0x9F2B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR12_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR12_EL0, 0x9F2C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR13_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR13_EL0, 0x9F2D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR14_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR14_EL0, 0x9F2E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR15_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR15_EL0, 0x9F2F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR2_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR2_EL0, 0x9F22, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR3_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR3_EL0, 0x9F23, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR4_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR4_EL0, 0x9F24, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR5_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR5_EL0, 0x9F25, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR6_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR6_EL0, 0x9F26, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR7_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR7_EL0, 0x9F27, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR8_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR8_EL0, 0x9F28, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Filter Control Register
    /// </summary>
    public static Arm64SystemRegister SPMEVFILTR9_EL0 => new(Arm64SystemRegisterKnownId.SPMEVFILTR9_EL0, 0x9F29, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER0_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER0_EL0, 0x9F10, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER1_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER1_EL0, 0x9F11, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER10_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER10_EL0, 0x9F1A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER11_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER11_EL0, 0x9F1B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER12_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER12_EL0, 0x9F1C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER13_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER13_EL0, 0x9F1D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER14_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER14_EL0, 0x9F1E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER15_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER15_EL0, 0x9F1F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER2_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER2_EL0, 0x9F12, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER3_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER3_EL0, 0x9F13, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER4_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER4_EL0, 0x9F14, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER5_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER5_EL0, 0x9F15, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER6_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER6_EL0, 0x9F16, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER7_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER7_EL0, 0x9F17, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER8_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER8_EL0, 0x9F18, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Event Type Register
    /// </summary>
    public static Arm64SystemRegister SPMEVTYPER9_EL0 => new(Arm64SystemRegisterKnownId.SPMEVTYPER9_EL0, 0x9F19, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System PMU Implementation Identification Register
    /// </summary>
    public static Arm64SystemRegister SPMIIDR_EL1 => new(Arm64SystemRegisterKnownId.SPMIIDR_EL1, 0x84EC, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// System Performance Monitors Interrupt Enable Clear Register
    /// </summary>
    public static Arm64SystemRegister SPMINTENCLR_EL1 => new(Arm64SystemRegisterKnownId.SPMINTENCLR_EL1, 0x84F2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Interrupt Enable Set Register
    /// </summary>
    public static Arm64SystemRegister SPMINTENSET_EL1 => new(Arm64SystemRegisterKnownId.SPMINTENSET_EL1, 0x84F1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Overflow Flag Status Clear Register
    /// </summary>
    public static Arm64SystemRegister SPMOVSCLR_EL0 => new(Arm64SystemRegisterKnownId.SPMOVSCLR_EL0, 0x9CE3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Overflow Flag Status Set Register
    /// </summary>
    public static Arm64SystemRegister SPMOVSSET_EL0 => new(Arm64SystemRegisterKnownId.SPMOVSSET_EL0, 0x9CF3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Root and Realm Control Register
    /// </summary>
    public static Arm64SystemRegister SPMROOTCR_EL3 => new(Arm64SystemRegisterKnownId.SPMROOTCR_EL3, 0xB4F7, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Secure Control Register
    /// </summary>
    public static Arm64SystemRegister SPMSCR_EL1 => new(Arm64SystemRegisterKnownId.SPMSCR_EL1, 0xBCF7, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Select Register
    /// </summary>
    public static Arm64SystemRegister SPMSELR_EL0 => new(Arm64SystemRegisterKnownId.SPMSELR_EL0, 0x9CE5, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// System Performance Monitors Zero with Mask
    /// </summary>
    public static Arm64SystemRegister SPMZR_EL0 => new(Arm64SystemRegisterKnownId.SPMZR_EL0, 0x9CE4, Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Stack Pointer Select
    /// </summary>
    public static Arm64SystemRegister _SPSel => new(Arm64SystemRegisterKnownId.SPSel, 0xC210, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Saved Program Status Register (Abort mode)
    /// </summary>
    public static Arm64SystemRegister SPSR_abt => new(Arm64SystemRegisterKnownId.SPSR_abt, 0xE219, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Saved Program Status Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SPSR_EL1 => new(Arm64SystemRegisterKnownId.SPSR_EL1, 0xC200, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Saved Program Status Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SPSR_EL12 => new(Arm64SystemRegisterKnownId.SPSR_EL12, 0xEA00, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Saved Program Status Register (EL1)
    /// </summary>
    public static Arm64SystemRegister SPSR_EL2 => new(Arm64SystemRegisterKnownId.SPSR_EL2, 0xE200, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Saved Program Status Register (EL3)
    /// </summary>
    public static Arm64SystemRegister SPSR_EL3 => new(Arm64SystemRegisterKnownId.SPSR_EL3, 0xF200, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Saved Program Status Register (FIQ mode)
    /// </summary>
    public static Arm64SystemRegister SPSR_fiq => new(Arm64SystemRegisterKnownId.SPSR_fiq, 0xE21B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Saved Program Status Register (IRQ mode)
    /// </summary>
    public static Arm64SystemRegister SPSR_irq => new(Arm64SystemRegisterKnownId.SPSR_irq, 0xE218, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Saved Program Status Register (Undefined mode)
    /// </summary>
    public static Arm64SystemRegister SPSR_und => new(Arm64SystemRegisterKnownId.SPSR_und, 0xE21A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Speculative Store Bypass Safe
    /// </summary>
    public static Arm64SystemRegister _SSBS => new(Arm64SystemRegisterKnownId.SSBS, 0xDA16, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Streaming Vector Control Register
    /// </summary>
    public static Arm64SystemRegister SVCR => new(Arm64SystemRegisterKnownId.SVCR, 0xDA12, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Tag Check Override
    /// </summary>
    public static Arm64SystemRegister _TCO => new(Arm64SystemRegisterKnownId.TCO, 0xDA17, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Translation Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TCR_EL1 => new(Arm64SystemRegisterKnownId.TCR_EL1, 0xC102, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Translation Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TCR_EL12 => new(Arm64SystemRegisterKnownId.TCR_EL12, 0xE902, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Translation Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister TCR_EL2 => new(Arm64SystemRegisterKnownId.TCR_EL2, 0xE102, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Translation Control Register (EL3)
    /// </summary>
    public static Arm64SystemRegister TCR_EL3 => new(Arm64SystemRegisterKnownId.TCR_EL3, 0xF102, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Translation Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TCR2_EL1 => new(Arm64SystemRegisterKnownId.TCR2_EL1, 0xC103, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Translation Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TCR2_EL12 => new(Arm64SystemRegisterKnownId.TCR2_EL12, 0xE903, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Translation Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister TCR2_EL2 => new(Arm64SystemRegisterKnownId.TCR2_EL2, 0xE103, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Translation Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TCR2ALIAS_EL1 => new(Arm64SystemRegisterKnownId.TCR2ALIAS_EL1, 0xC13F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Translation Control Masking Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TCR2MASK_EL1 => new(Arm64SystemRegisterKnownId.TCR2MASK_EL1, 0xC13B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Translation Control Masking Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TCR2MASK_EL12 => new(Arm64SystemRegisterKnownId.TCR2MASK_EL12, 0xE93B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Extended Translation Control Masking Register (EL2)
    /// </summary>
    public static Arm64SystemRegister TCR2MASK_EL2 => new(Arm64SystemRegisterKnownId.TCR2MASK_EL2, 0xE13B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Translation Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TCRALIAS_EL1 => new(Arm64SystemRegisterKnownId.TCRALIAS_EL1, 0xC13E, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Translation Control Masking Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TCRMASK_EL1 => new(Arm64SystemRegisterKnownId.TCRMASK_EL1, 0xC13A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Translation Control Masking Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TCRMASK_EL12 => new(Arm64SystemRegisterKnownId.TCRMASK_EL12, 0xE93A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Translation Control Masking Register (EL2)
    /// </summary>
    public static Arm64SystemRegister TCRMASK_EL2 => new(Arm64SystemRegisterKnownId.TCRMASK_EL2, 0xE13A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Tag Fault Status Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TFSR_EL1 => new(Arm64SystemRegisterKnownId.TFSR_EL1, 0xC2B0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Tag Fault Status Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TFSR_EL12 => new(Arm64SystemRegisterKnownId.TFSR_EL12, 0xEAB0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Tag Fault Status Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TFSR_EL2 => new(Arm64SystemRegisterKnownId.TFSR_EL2, 0xE2B0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Tag Fault Status Register (EL3)
    /// </summary>
    public static Arm64SystemRegister TFSR_EL3 => new(Arm64SystemRegisterKnownId.TFSR_EL3, 0xF2B0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Tag Fault Status Register (EL0).
    /// </summary>
    public static Arm64SystemRegister TFSRE0_EL1 => new(Arm64SystemRegisterKnownId.TFSRE0_EL1, 0xC2B1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// EL0 Read/Write Software Thread ID Register
    /// </summary>
    public static Arm64SystemRegister TPIDR_EL0 => new(Arm64SystemRegisterKnownId.TPIDR_EL0, 0xDE82, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// EL1 Software Thread ID Register
    /// </summary>
    public static Arm64SystemRegister TPIDR_EL1 => new(Arm64SystemRegisterKnownId.TPIDR_EL1, 0xC684, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// EL2 Software Thread ID Register
    /// </summary>
    public static Arm64SystemRegister TPIDR_EL2 => new(Arm64SystemRegisterKnownId.TPIDR_EL2, 0xE682, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// EL3 Software Thread ID Register
    /// </summary>
    public static Arm64SystemRegister TPIDR_EL3 => new(Arm64SystemRegisterKnownId.TPIDR_EL3, 0xF682, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// EL0 Read/Write Software Thread ID Register 2
    /// </summary>
    public static Arm64SystemRegister TPIDR2_EL0 => new(Arm64SystemRegisterKnownId.TPIDR2_EL0, 0xDE85, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// EL0 Read-Only Software Thread ID Register
    /// </summary>
    public static Arm64SystemRegister TPIDRRO_EL0 => new(Arm64SystemRegisterKnownId.TPIDRRO_EL0, 0xDE83, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Buffer Base Address Register
    /// </summary>
    public static Arm64SystemRegister TRBBASER_EL1 => new(Arm64SystemRegisterKnownId.TRBBASER_EL1, 0xC4DA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Buffer ID Register
    /// </summary>
    public static Arm64SystemRegister TRBIDR_EL1 => new(Arm64SystemRegisterKnownId.TRBIDR_EL1, 0xC4DF, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace Buffer Limit Address Register
    /// </summary>
    public static Arm64SystemRegister TRBLIMITR_EL1 => new(Arm64SystemRegisterKnownId.TRBLIMITR_EL1, 0xC4D8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Buffer Memory Attribute Register
    /// </summary>
    public static Arm64SystemRegister TRBMAR_EL1 => new(Arm64SystemRegisterKnownId.TRBMAR_EL1, 0xC4DC, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Buffer MPAM Configuration Register
    /// </summary>
    public static Arm64SystemRegister TRBMPAM_EL1 => new(Arm64SystemRegisterKnownId.TRBMPAM_EL1, 0xC4DD, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Buffer Write Pointer Register
    /// </summary>
    public static Arm64SystemRegister TRBPTR_EL1 => new(Arm64SystemRegisterKnownId.TRBPTR_EL1, 0xC4D9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Buffer Status/syndrome Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TRBSR_EL1 => new(Arm64SystemRegisterKnownId.TRBSR_EL1, 0xC4DB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Buffer Status/syndrome Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TRBSR_EL12 => new(Arm64SystemRegisterKnownId.TRBSR_EL12, 0xECDB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Buffer Syndrome Register (EL2)
    /// </summary>
    public static Arm64SystemRegister TRBSR_EL2 => new(Arm64SystemRegisterKnownId.TRBSR_EL2, 0xE4DB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Buffer Syndrome Register (EL3)
    /// </summary>
    public static Arm64SystemRegister TRBSR_EL3 => new(Arm64SystemRegisterKnownId.TRBSR_EL3, 0xF4DB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Buffer Trigger Counter Register
    /// </summary>
    public static Arm64SystemRegister TRBTRG_EL1 => new(Arm64SystemRegisterKnownId.TRBTRG_EL1, 0xC4DE, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 0
    /// </summary>
    public static Arm64SystemRegister TRCACATR0 => new(Arm64SystemRegisterKnownId.TRCACATR0, 0x8902, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 1
    /// </summary>
    public static Arm64SystemRegister TRCACATR1 => new(Arm64SystemRegisterKnownId.TRCACATR1, 0x8912, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 10
    /// </summary>
    public static Arm64SystemRegister TRCACATR10 => new(Arm64SystemRegisterKnownId.TRCACATR10, 0x8923, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 11
    /// </summary>
    public static Arm64SystemRegister TRCACATR11 => new(Arm64SystemRegisterKnownId.TRCACATR11, 0x8933, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 12
    /// </summary>
    public static Arm64SystemRegister TRCACATR12 => new(Arm64SystemRegisterKnownId.TRCACATR12, 0x8943, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 13
    /// </summary>
    public static Arm64SystemRegister TRCACATR13 => new(Arm64SystemRegisterKnownId.TRCACATR13, 0x8953, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 14
    /// </summary>
    public static Arm64SystemRegister TRCACATR14 => new(Arm64SystemRegisterKnownId.TRCACATR14, 0x8963, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 15
    /// </summary>
    public static Arm64SystemRegister TRCACATR15 => new(Arm64SystemRegisterKnownId.TRCACATR15, 0x8973, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 2
    /// </summary>
    public static Arm64SystemRegister TRCACATR2 => new(Arm64SystemRegisterKnownId.TRCACATR2, 0x8922, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 3
    /// </summary>
    public static Arm64SystemRegister TRCACATR3 => new(Arm64SystemRegisterKnownId.TRCACATR3, 0x8932, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 4
    /// </summary>
    public static Arm64SystemRegister TRCACATR4 => new(Arm64SystemRegisterKnownId.TRCACATR4, 0x8942, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 5
    /// </summary>
    public static Arm64SystemRegister TRCACATR5 => new(Arm64SystemRegisterKnownId.TRCACATR5, 0x8952, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 6
    /// </summary>
    public static Arm64SystemRegister TRCACATR6 => new(Arm64SystemRegisterKnownId.TRCACATR6, 0x8962, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 7
    /// </summary>
    public static Arm64SystemRegister TRCACATR7 => new(Arm64SystemRegisterKnownId.TRCACATR7, 0x8972, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 8
    /// </summary>
    public static Arm64SystemRegister TRCACATR8 => new(Arm64SystemRegisterKnownId.TRCACATR8, 0x8903, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Access Type Register 9
    /// </summary>
    public static Arm64SystemRegister TRCACATR9 => new(Arm64SystemRegisterKnownId.TRCACATR9, 0x8913, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 0
    /// </summary>
    public static Arm64SystemRegister TRCACVR0 => new(Arm64SystemRegisterKnownId.TRCACVR0, 0x8900, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 1
    /// </summary>
    public static Arm64SystemRegister TRCACVR1 => new(Arm64SystemRegisterKnownId.TRCACVR1, 0x8910, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 10
    /// </summary>
    public static Arm64SystemRegister TRCACVR10 => new(Arm64SystemRegisterKnownId.TRCACVR10, 0x8921, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 11
    /// </summary>
    public static Arm64SystemRegister TRCACVR11 => new(Arm64SystemRegisterKnownId.TRCACVR11, 0x8931, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 12
    /// </summary>
    public static Arm64SystemRegister TRCACVR12 => new(Arm64SystemRegisterKnownId.TRCACVR12, 0x8941, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 13
    /// </summary>
    public static Arm64SystemRegister TRCACVR13 => new(Arm64SystemRegisterKnownId.TRCACVR13, 0x8951, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 14
    /// </summary>
    public static Arm64SystemRegister TRCACVR14 => new(Arm64SystemRegisterKnownId.TRCACVR14, 0x8961, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 15
    /// </summary>
    public static Arm64SystemRegister TRCACVR15 => new(Arm64SystemRegisterKnownId.TRCACVR15, 0x8971, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 2
    /// </summary>
    public static Arm64SystemRegister TRCACVR2 => new(Arm64SystemRegisterKnownId.TRCACVR2, 0x8920, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 3
    /// </summary>
    public static Arm64SystemRegister TRCACVR3 => new(Arm64SystemRegisterKnownId.TRCACVR3, 0x8930, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 4
    /// </summary>
    public static Arm64SystemRegister TRCACVR4 => new(Arm64SystemRegisterKnownId.TRCACVR4, 0x8940, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 5
    /// </summary>
    public static Arm64SystemRegister TRCACVR5 => new(Arm64SystemRegisterKnownId.TRCACVR5, 0x8950, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 6
    /// </summary>
    public static Arm64SystemRegister TRCACVR6 => new(Arm64SystemRegisterKnownId.TRCACVR6, 0x8960, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 7
    /// </summary>
    public static Arm64SystemRegister TRCACVR7 => new(Arm64SystemRegisterKnownId.TRCACVR7, 0x8970, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 8
    /// </summary>
    public static Arm64SystemRegister TRCACVR8 => new(Arm64SystemRegisterKnownId.TRCACVR8, 0x8901, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Address Comparator Value Register 9
    /// </summary>
    public static Arm64SystemRegister TRCACVR9 => new(Arm64SystemRegisterKnownId.TRCACVR9, 0x8911, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Authentication Status Register
    /// </summary>
    public static Arm64SystemRegister TRCAUTHSTATUS => new(Arm64SystemRegisterKnownId.TRCAUTHSTATUS, 0x8BF6, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace Auxiliary Control Register
    /// </summary>
    public static Arm64SystemRegister TRCAUXCTLR => new(Arm64SystemRegisterKnownId.TRCAUXCTLR, 0x8830, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Branch Broadcast Control Register
    /// </summary>
    public static Arm64SystemRegister TRCBBCTLR => new(Arm64SystemRegisterKnownId.TRCBBCTLR, 0x8878, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Cycle Count Control Register
    /// </summary>
    public static Arm64SystemRegister TRCCCCTLR => new(Arm64SystemRegisterKnownId.TRCCCCTLR, 0x8870, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Context Identifier Comparator Control Register 0
    /// </summary>
    public static Arm64SystemRegister TRCCIDCCTLR0 => new(Arm64SystemRegisterKnownId.TRCCIDCCTLR0, 0x8982, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Context Identifier Comparator Control Register 1
    /// </summary>
    public static Arm64SystemRegister TRCCIDCCTLR1 => new(Arm64SystemRegisterKnownId.TRCCIDCCTLR1, 0x898A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Context Identifier Comparator Value Registers 0
    /// </summary>
    public static Arm64SystemRegister TRCCIDCVR0 => new(Arm64SystemRegisterKnownId.TRCCIDCVR0, 0x8980, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Context Identifier Comparator Value Registers 1
    /// </summary>
    public static Arm64SystemRegister TRCCIDCVR1 => new(Arm64SystemRegisterKnownId.TRCCIDCVR1, 0x8990, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Context Identifier Comparator Value Registers 2
    /// </summary>
    public static Arm64SystemRegister TRCCIDCVR2 => new(Arm64SystemRegisterKnownId.TRCCIDCVR2, 0x89A0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Context Identifier Comparator Value Registers 3
    /// </summary>
    public static Arm64SystemRegister TRCCIDCVR3 => new(Arm64SystemRegisterKnownId.TRCCIDCVR3, 0x89B0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Context Identifier Comparator Value Registers 4
    /// </summary>
    public static Arm64SystemRegister TRCCIDCVR4 => new(Arm64SystemRegisterKnownId.TRCCIDCVR4, 0x89C0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Context Identifier Comparator Value Registers 5
    /// </summary>
    public static Arm64SystemRegister TRCCIDCVR5 => new(Arm64SystemRegisterKnownId.TRCCIDCVR5, 0x89D0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Context Identifier Comparator Value Registers 6
    /// </summary>
    public static Arm64SystemRegister TRCCIDCVR6 => new(Arm64SystemRegisterKnownId.TRCCIDCVR6, 0x89E0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Context Identifier Comparator Value Registers 7
    /// </summary>
    public static Arm64SystemRegister TRCCIDCVR7 => new(Arm64SystemRegisterKnownId.TRCCIDCVR7, 0x89F0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Claim Tag Clear Register
    /// </summary>
    public static Arm64SystemRegister TRCCLAIMCLR => new(Arm64SystemRegisterKnownId.TRCCLAIMCLR, 0x8BCE, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Claim Tag Set Register
    /// </summary>
    public static Arm64SystemRegister TRCCLAIMSET => new(Arm64SystemRegisterKnownId.TRCCLAIMSET, 0x8BC6, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Counter Control Register 0
    /// </summary>
    public static Arm64SystemRegister TRCCNTCTLR0 => new(Arm64SystemRegisterKnownId.TRCCNTCTLR0, 0x8825, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Counter Control Register 1
    /// </summary>
    public static Arm64SystemRegister TRCCNTCTLR1 => new(Arm64SystemRegisterKnownId.TRCCNTCTLR1, 0x882D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Counter Control Register 2
    /// </summary>
    public static Arm64SystemRegister TRCCNTCTLR2 => new(Arm64SystemRegisterKnownId.TRCCNTCTLR2, 0x8835, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Counter Control Register 3
    /// </summary>
    public static Arm64SystemRegister TRCCNTCTLR3 => new(Arm64SystemRegisterKnownId.TRCCNTCTLR3, 0x883D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Counter Reload Value Register 0
    /// </summary>
    public static Arm64SystemRegister TRCCNTRLDVR0 => new(Arm64SystemRegisterKnownId.TRCCNTRLDVR0, 0x8805, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Counter Reload Value Register 1
    /// </summary>
    public static Arm64SystemRegister TRCCNTRLDVR1 => new(Arm64SystemRegisterKnownId.TRCCNTRLDVR1, 0x880D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Counter Reload Value Register 2
    /// </summary>
    public static Arm64SystemRegister TRCCNTRLDVR2 => new(Arm64SystemRegisterKnownId.TRCCNTRLDVR2, 0x8815, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Counter Reload Value Register 3
    /// </summary>
    public static Arm64SystemRegister TRCCNTRLDVR3 => new(Arm64SystemRegisterKnownId.TRCCNTRLDVR3, 0x881D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Counter Value Register 0
    /// </summary>
    public static Arm64SystemRegister TRCCNTVR0 => new(Arm64SystemRegisterKnownId.TRCCNTVR0, 0x8845, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Counter Value Register 1
    /// </summary>
    public static Arm64SystemRegister TRCCNTVR1 => new(Arm64SystemRegisterKnownId.TRCCNTVR1, 0x884D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Counter Value Register 2
    /// </summary>
    public static Arm64SystemRegister TRCCNTVR2 => new(Arm64SystemRegisterKnownId.TRCCNTVR2, 0x8855, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Counter Value Register 3
    /// </summary>
    public static Arm64SystemRegister TRCCNTVR3 => new(Arm64SystemRegisterKnownId.TRCCNTVR3, 0x885D, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Configuration Register
    /// </summary>
    public static Arm64SystemRegister TRCCONFIGR => new(Arm64SystemRegisterKnownId.TRCCONFIGR, 0x8820, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Device Architecture Register
    /// </summary>
    public static Arm64SystemRegister TRCDEVARCH => new(Arm64SystemRegisterKnownId.TRCDEVARCH, 0x8BFE, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace Device Configuration Register
    /// </summary>
    public static Arm64SystemRegister TRCDEVID => new(Arm64SystemRegisterKnownId.TRCDEVID, 0x8B97, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace Event Control 0 Register
    /// </summary>
    public static Arm64SystemRegister TRCEVENTCTL0R => new(Arm64SystemRegisterKnownId.TRCEVENTCTL0R, 0x8840, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Event Control 1 Register
    /// </summary>
    public static Arm64SystemRegister TRCEVENTCTL1R => new(Arm64SystemRegisterKnownId.TRCEVENTCTL1R, 0x8848, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace External Input Select Register 0
    /// </summary>
    public static Arm64SystemRegister TRCEXTINSELR0 => new(Arm64SystemRegisterKnownId.TRCEXTINSELR0, 0x8844, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace External Input Select Register 1
    /// </summary>
    public static Arm64SystemRegister TRCEXTINSELR1 => new(Arm64SystemRegisterKnownId.TRCEXTINSELR1, 0x884C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace External Input Select Register 2
    /// </summary>
    public static Arm64SystemRegister TRCEXTINSELR2 => new(Arm64SystemRegisterKnownId.TRCEXTINSELR2, 0x8854, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace External Input Select Register 3
    /// </summary>
    public static Arm64SystemRegister TRCEXTINSELR3 => new(Arm64SystemRegisterKnownId.TRCEXTINSELR3, 0x885C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace ID Register 0
    /// </summary>
    public static Arm64SystemRegister TRCIDR0 => new(Arm64SystemRegisterKnownId.TRCIDR0, 0x8847, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace ID Register 1
    /// </summary>
    public static Arm64SystemRegister TRCIDR1 => new(Arm64SystemRegisterKnownId.TRCIDR1, 0x884F, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace ID Register 10
    /// </summary>
    public static Arm64SystemRegister TRCIDR10 => new(Arm64SystemRegisterKnownId.TRCIDR10, 0x8816, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace ID Register 11
    /// </summary>
    public static Arm64SystemRegister TRCIDR11 => new(Arm64SystemRegisterKnownId.TRCIDR11, 0x881E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace ID Register 12
    /// </summary>
    public static Arm64SystemRegister TRCIDR12 => new(Arm64SystemRegisterKnownId.TRCIDR12, 0x8826, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace ID Register 13
    /// </summary>
    public static Arm64SystemRegister TRCIDR13 => new(Arm64SystemRegisterKnownId.TRCIDR13, 0x882E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace ID Register 2
    /// </summary>
    public static Arm64SystemRegister TRCIDR2 => new(Arm64SystemRegisterKnownId.TRCIDR2, 0x8857, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace ID Register 3
    /// </summary>
    public static Arm64SystemRegister TRCIDR3 => new(Arm64SystemRegisterKnownId.TRCIDR3, 0x885F, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace ID Register 4
    /// </summary>
    public static Arm64SystemRegister TRCIDR4 => new(Arm64SystemRegisterKnownId.TRCIDR4, 0x8867, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace ID Register 5
    /// </summary>
    public static Arm64SystemRegister TRCIDR5 => new(Arm64SystemRegisterKnownId.TRCIDR5, 0x886F, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace ID Register 6
    /// </summary>
    public static Arm64SystemRegister TRCIDR6 => new(Arm64SystemRegisterKnownId.TRCIDR6, 0x8877, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace ID Register 7
    /// </summary>
    public static Arm64SystemRegister TRCIDR7 => new(Arm64SystemRegisterKnownId.TRCIDR7, 0x887F, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace ID Register 8
    /// </summary>
    public static Arm64SystemRegister TRCIDR8 => new(Arm64SystemRegisterKnownId.TRCIDR8, 0x8806, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace ID Register 9
    /// </summary>
    public static Arm64SystemRegister TRCIDR9 => new(Arm64SystemRegisterKnownId.TRCIDR9, 0x880E, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace IMP DEF Register 0
    /// </summary>
    public static Arm64SystemRegister TRCIMSPEC0 => new(Arm64SystemRegisterKnownId.TRCIMSPEC0, 0x8807, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace IMP DEF Register 1
    /// </summary>
    public static Arm64SystemRegister TRCIMSPEC1 => new(Arm64SystemRegisterKnownId.TRCIMSPEC1, 0x880F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace IMP DEF Register 2
    /// </summary>
    public static Arm64SystemRegister TRCIMSPEC2 => new(Arm64SystemRegisterKnownId.TRCIMSPEC2, 0x8817, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace IMP DEF Register 3
    /// </summary>
    public static Arm64SystemRegister TRCIMSPEC3 => new(Arm64SystemRegisterKnownId.TRCIMSPEC3, 0x881F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace IMP DEF Register 4
    /// </summary>
    public static Arm64SystemRegister TRCIMSPEC4 => new(Arm64SystemRegisterKnownId.TRCIMSPEC4, 0x8827, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace IMP DEF Register 5
    /// </summary>
    public static Arm64SystemRegister TRCIMSPEC5 => new(Arm64SystemRegisterKnownId.TRCIMSPEC5, 0x882F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace IMP DEF Register 6
    /// </summary>
    public static Arm64SystemRegister TRCIMSPEC6 => new(Arm64SystemRegisterKnownId.TRCIMSPEC6, 0x8837, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace IMP DEF Register 7
    /// </summary>
    public static Arm64SystemRegister TRCIMSPEC7 => new(Arm64SystemRegisterKnownId.TRCIMSPEC7, 0x883F, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Instrumentation
    /// </summary>
    public static Arm64SystemRegister TRCIT => new(Arm64SystemRegisterKnownId.TRCIT, 0x5B97, Arm64SystemRegisterKind.TRCIT);
    /// <summary>
    /// Instrumentation Trace Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TRCITECR_EL1 => new(Arm64SystemRegisterKnownId.TRCITECR_EL1, 0xC093, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Instrumentation Trace Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TRCITECR_EL12 => new(Arm64SystemRegisterKnownId.TRCITECR_EL12, 0xE893, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Instrumentation Trace Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister TRCITECR_EL2 => new(Arm64SystemRegisterKnownId.TRCITECR_EL2, 0xE093, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Instrumentation Trace Extension External Debug Control Register
    /// </summary>
    public static Arm64SystemRegister TRCITEEDCR => new(Arm64SystemRegisterKnownId.TRCITEEDCR, 0x8811, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace OS Lock Status Register
    /// </summary>
    public static Arm64SystemRegister TRCOSLSR => new(Arm64SystemRegisterKnownId.TRCOSLSR, 0x888C, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace Programming Control Register
    /// </summary>
    public static Arm64SystemRegister TRCPRGCTLR => new(Arm64SystemRegisterKnownId.TRCPRGCTLR, 0x8808, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Q Element Control Register
    /// </summary>
    public static Arm64SystemRegister TRCQCTLR => new(Arm64SystemRegisterKnownId.TRCQCTLR, 0x8809, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 10
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR10 => new(Arm64SystemRegisterKnownId.TRCRSCTLR10, 0x88D0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 11
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR11 => new(Arm64SystemRegisterKnownId.TRCRSCTLR11, 0x88D8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 12
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR12 => new(Arm64SystemRegisterKnownId.TRCRSCTLR12, 0x88E0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 13
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR13 => new(Arm64SystemRegisterKnownId.TRCRSCTLR13, 0x88E8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 14
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR14 => new(Arm64SystemRegisterKnownId.TRCRSCTLR14, 0x88F0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 15
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR15 => new(Arm64SystemRegisterKnownId.TRCRSCTLR15, 0x88F8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 16
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR16 => new(Arm64SystemRegisterKnownId.TRCRSCTLR16, 0x8881, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 17
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR17 => new(Arm64SystemRegisterKnownId.TRCRSCTLR17, 0x8889, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 18
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR18 => new(Arm64SystemRegisterKnownId.TRCRSCTLR18, 0x8891, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 19
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR19 => new(Arm64SystemRegisterKnownId.TRCRSCTLR19, 0x8899, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 2
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR2 => new(Arm64SystemRegisterKnownId.TRCRSCTLR2, 0x8890, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 20
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR20 => new(Arm64SystemRegisterKnownId.TRCRSCTLR20, 0x88A1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 21
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR21 => new(Arm64SystemRegisterKnownId.TRCRSCTLR21, 0x88A9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 22
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR22 => new(Arm64SystemRegisterKnownId.TRCRSCTLR22, 0x88B1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 23
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR23 => new(Arm64SystemRegisterKnownId.TRCRSCTLR23, 0x88B9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 24
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR24 => new(Arm64SystemRegisterKnownId.TRCRSCTLR24, 0x88C1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 25
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR25 => new(Arm64SystemRegisterKnownId.TRCRSCTLR25, 0x88C9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 26
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR26 => new(Arm64SystemRegisterKnownId.TRCRSCTLR26, 0x88D1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 27
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR27 => new(Arm64SystemRegisterKnownId.TRCRSCTLR27, 0x88D9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 28
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR28 => new(Arm64SystemRegisterKnownId.TRCRSCTLR28, 0x88E1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 29
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR29 => new(Arm64SystemRegisterKnownId.TRCRSCTLR29, 0x88E9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 3
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR3 => new(Arm64SystemRegisterKnownId.TRCRSCTLR3, 0x8898, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 30
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR30 => new(Arm64SystemRegisterKnownId.TRCRSCTLR30, 0x88F1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 31
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR31 => new(Arm64SystemRegisterKnownId.TRCRSCTLR31, 0x88F9, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 4
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR4 => new(Arm64SystemRegisterKnownId.TRCRSCTLR4, 0x88A0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 5
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR5 => new(Arm64SystemRegisterKnownId.TRCRSCTLR5, 0x88A8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 6
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR6 => new(Arm64SystemRegisterKnownId.TRCRSCTLR6, 0x88B0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 7
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR7 => new(Arm64SystemRegisterKnownId.TRCRSCTLR7, 0x88B8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 8
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR8 => new(Arm64SystemRegisterKnownId.TRCRSCTLR8, 0x88C0, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resource Selection Control Register 9
    /// </summary>
    public static Arm64SystemRegister TRCRSCTLR9 => new(Arm64SystemRegisterKnownId.TRCRSCTLR9, 0x88C8, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Resources Status Register
    /// </summary>
    public static Arm64SystemRegister TRCRSR => new(Arm64SystemRegisterKnownId.TRCRSR, 0x8850, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Sequencer State Transition Control Register 0
    /// </summary>
    public static Arm64SystemRegister TRCSEQEVR0 => new(Arm64SystemRegisterKnownId.TRCSEQEVR0, 0x8804, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Sequencer State Transition Control Register 1
    /// </summary>
    public static Arm64SystemRegister TRCSEQEVR1 => new(Arm64SystemRegisterKnownId.TRCSEQEVR1, 0x880C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Sequencer State Transition Control Register 2
    /// </summary>
    public static Arm64SystemRegister TRCSEQEVR2 => new(Arm64SystemRegisterKnownId.TRCSEQEVR2, 0x8814, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Sequencer Reset Control Register
    /// </summary>
    public static Arm64SystemRegister TRCSEQRSTEVR => new(Arm64SystemRegisterKnownId.TRCSEQRSTEVR, 0x8834, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Sequencer State Register
    /// </summary>
    public static Arm64SystemRegister TRCSEQSTR => new(Arm64SystemRegisterKnownId.TRCSEQSTR, 0x883C, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Register 0
    /// </summary>
    public static Arm64SystemRegister TRCSSCCR0 => new(Arm64SystemRegisterKnownId.TRCSSCCR0, 0x8882, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Register 1
    /// </summary>
    public static Arm64SystemRegister TRCSSCCR1 => new(Arm64SystemRegisterKnownId.TRCSSCCR1, 0x888A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Register 2
    /// </summary>
    public static Arm64SystemRegister TRCSSCCR2 => new(Arm64SystemRegisterKnownId.TRCSSCCR2, 0x8892, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Register 3
    /// </summary>
    public static Arm64SystemRegister TRCSSCCR3 => new(Arm64SystemRegisterKnownId.TRCSSCCR3, 0x889A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Register 4
    /// </summary>
    public static Arm64SystemRegister TRCSSCCR4 => new(Arm64SystemRegisterKnownId.TRCSSCCR4, 0x88A2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Register 5
    /// </summary>
    public static Arm64SystemRegister TRCSSCCR5 => new(Arm64SystemRegisterKnownId.TRCSSCCR5, 0x88AA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Register 6
    /// </summary>
    public static Arm64SystemRegister TRCSSCCR6 => new(Arm64SystemRegisterKnownId.TRCSSCCR6, 0x88B2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Register 7
    /// </summary>
    public static Arm64SystemRegister TRCSSCCR7 => new(Arm64SystemRegisterKnownId.TRCSSCCR7, 0x88BA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Status Register 0
    /// </summary>
    public static Arm64SystemRegister TRCSSCSR0 => new(Arm64SystemRegisterKnownId.TRCSSCSR0, 0x88C2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Status Register 1
    /// </summary>
    public static Arm64SystemRegister TRCSSCSR1 => new(Arm64SystemRegisterKnownId.TRCSSCSR1, 0x88CA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Status Register 2
    /// </summary>
    public static Arm64SystemRegister TRCSSCSR2 => new(Arm64SystemRegisterKnownId.TRCSSCSR2, 0x88D2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Status Register 3
    /// </summary>
    public static Arm64SystemRegister TRCSSCSR3 => new(Arm64SystemRegisterKnownId.TRCSSCSR3, 0x88DA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Status Register 4
    /// </summary>
    public static Arm64SystemRegister TRCSSCSR4 => new(Arm64SystemRegisterKnownId.TRCSSCSR4, 0x88E2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Status Register 5
    /// </summary>
    public static Arm64SystemRegister TRCSSCSR5 => new(Arm64SystemRegisterKnownId.TRCSSCSR5, 0x88EA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Status Register 6
    /// </summary>
    public static Arm64SystemRegister TRCSSCSR6 => new(Arm64SystemRegisterKnownId.TRCSSCSR6, 0x88F2, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Comparator Control Status Register 7
    /// </summary>
    public static Arm64SystemRegister TRCSSCSR7 => new(Arm64SystemRegisterKnownId.TRCSSCSR7, 0x88FA, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Processing Element Comparator Input Control Register 0
    /// </summary>
    public static Arm64SystemRegister TRCSSPCICR0 => new(Arm64SystemRegisterKnownId.TRCSSPCICR0, 0x8883, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Processing Element Comparator Input Control Register 1
    /// </summary>
    public static Arm64SystemRegister TRCSSPCICR1 => new(Arm64SystemRegisterKnownId.TRCSSPCICR1, 0x888B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Processing Element Comparator Input Control Register 2
    /// </summary>
    public static Arm64SystemRegister TRCSSPCICR2 => new(Arm64SystemRegisterKnownId.TRCSSPCICR2, 0x8893, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Processing Element Comparator Input Control Register 3
    /// </summary>
    public static Arm64SystemRegister TRCSSPCICR3 => new(Arm64SystemRegisterKnownId.TRCSSPCICR3, 0x889B, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Processing Element Comparator Input Control Register 4
    /// </summary>
    public static Arm64SystemRegister TRCSSPCICR4 => new(Arm64SystemRegisterKnownId.TRCSSPCICR4, 0x88A3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Processing Element Comparator Input Control Register 5
    /// </summary>
    public static Arm64SystemRegister TRCSSPCICR5 => new(Arm64SystemRegisterKnownId.TRCSSPCICR5, 0x88AB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Processing Element Comparator Input Control Register 6
    /// </summary>
    public static Arm64SystemRegister TRCSSPCICR6 => new(Arm64SystemRegisterKnownId.TRCSSPCICR6, 0x88B3, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Single-shot Processing Element Comparator Input Control Register 7
    /// </summary>
    public static Arm64SystemRegister TRCSSPCICR7 => new(Arm64SystemRegisterKnownId.TRCSSPCICR7, 0x88BB, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Stall Control Register
    /// </summary>
    public static Arm64SystemRegister TRCSTALLCTLR => new(Arm64SystemRegisterKnownId.TRCSTALLCTLR, 0x8858, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Status Register
    /// </summary>
    public static Arm64SystemRegister TRCSTATR => new(Arm64SystemRegisterKnownId.TRCSTATR, 0x8818, Arm64SystemRegisterKind.MRS);
    /// <summary>
    /// Trace Synchronization Period Register
    /// </summary>
    public static Arm64SystemRegister TRCSYNCPR => new(Arm64SystemRegisterKnownId.TRCSYNCPR, 0x8868, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace ID Register
    /// </summary>
    public static Arm64SystemRegister TRCTRACEIDR => new(Arm64SystemRegisterKnownId.TRCTRACEIDR, 0x8801, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Timestamp Control Register
    /// </summary>
    public static Arm64SystemRegister TRCTSCTLR => new(Arm64SystemRegisterKnownId.TRCTSCTLR, 0x8860, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace ViewInst Main Control Register
    /// </summary>
    public static Arm64SystemRegister TRCVICTLR => new(Arm64SystemRegisterKnownId.TRCVICTLR, 0x8802, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace ViewInst Include/Exclude Control Register
    /// </summary>
    public static Arm64SystemRegister TRCVIIECTLR => new(Arm64SystemRegisterKnownId.TRCVIIECTLR, 0x880A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace ViewInst Start/Stop PE Comparator Control Register
    /// </summary>
    public static Arm64SystemRegister TRCVIPCSSCTLR => new(Arm64SystemRegisterKnownId.TRCVIPCSSCTLR, 0x881A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace ViewInst Start/Stop Control Register
    /// </summary>
    public static Arm64SystemRegister TRCVISSCTLR => new(Arm64SystemRegisterKnownId.TRCVISSCTLR, 0x8812, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Virtual Context Identifier Comparator Control Register 0
    /// </summary>
    public static Arm64SystemRegister TRCVMIDCCTLR0 => new(Arm64SystemRegisterKnownId.TRCVMIDCCTLR0, 0x8992, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Virtual Context Identifier Comparator Control Register 1
    /// </summary>
    public static Arm64SystemRegister TRCVMIDCCTLR1 => new(Arm64SystemRegisterKnownId.TRCVMIDCCTLR1, 0x899A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Virtual Context Identifier Comparator Value Register 0
    /// </summary>
    public static Arm64SystemRegister TRCVMIDCVR0 => new(Arm64SystemRegisterKnownId.TRCVMIDCVR0, 0x8981, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Virtual Context Identifier Comparator Value Register 1
    /// </summary>
    public static Arm64SystemRegister TRCVMIDCVR1 => new(Arm64SystemRegisterKnownId.TRCVMIDCVR1, 0x8991, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Virtual Context Identifier Comparator Value Register 2
    /// </summary>
    public static Arm64SystemRegister TRCVMIDCVR2 => new(Arm64SystemRegisterKnownId.TRCVMIDCVR2, 0x89A1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Virtual Context Identifier Comparator Value Register 3
    /// </summary>
    public static Arm64SystemRegister TRCVMIDCVR3 => new(Arm64SystemRegisterKnownId.TRCVMIDCVR3, 0x89B1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Virtual Context Identifier Comparator Value Register 4
    /// </summary>
    public static Arm64SystemRegister TRCVMIDCVR4 => new(Arm64SystemRegisterKnownId.TRCVMIDCVR4, 0x89C1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Virtual Context Identifier Comparator Value Register 5
    /// </summary>
    public static Arm64SystemRegister TRCVMIDCVR5 => new(Arm64SystemRegisterKnownId.TRCVMIDCVR5, 0x89D1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Virtual Context Identifier Comparator Value Register 6
    /// </summary>
    public static Arm64SystemRegister TRCVMIDCVR6 => new(Arm64SystemRegisterKnownId.TRCVMIDCVR6, 0x89E1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Virtual Context Identifier Comparator Value Register 7
    /// </summary>
    public static Arm64SystemRegister TRCVMIDCVR7 => new(Arm64SystemRegisterKnownId.TRCVMIDCVR7, 0x89F1, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Filter Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TRFCR_EL1 => new(Arm64SystemRegisterKnownId.TRFCR_EL1, 0xC091, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Filter Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister TRFCR_EL12 => new(Arm64SystemRegisterKnownId.TRFCR_EL12, 0xE891, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Trace Filter Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister TRFCR_EL2 => new(Arm64SystemRegisterKnownId.TRFCR_EL2, 0xE091, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Translation Table Base Register 0 (EL1)
    /// </summary>
    public static Arm64SystemRegister TTBR0_EL1 => new(Arm64SystemRegisterKnownId.TTBR0_EL1, 0xC100, Arm64SystemRegisterKind.MRRS | Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR | Arm64SystemRegisterKind.MSRR);
    /// <summary>
    /// Translation Table Base Register 0 (EL1)
    /// </summary>
    public static Arm64SystemRegister TTBR0_EL12 => new(Arm64SystemRegisterKnownId.TTBR0_EL12, 0xE900, Arm64SystemRegisterKind.MRRS | Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR | Arm64SystemRegisterKind.MSRR);
    /// <summary>
    /// Translation Table Base Register 0 (EL2)
    /// </summary>
    public static Arm64SystemRegister TTBR0_EL2 => new(Arm64SystemRegisterKnownId.TTBR0_EL2, 0xE100, Arm64SystemRegisterKind.MRRS | Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR | Arm64SystemRegisterKind.MSRR);
    /// <summary>
    /// Translation Table Base Register 0 (EL3)
    /// </summary>
    public static Arm64SystemRegister TTBR0_EL3 => new(Arm64SystemRegisterKnownId.TTBR0_EL3, 0xF100, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Translation Table Base Register 1 (EL1)
    /// </summary>
    public static Arm64SystemRegister TTBR1_EL1 => new(Arm64SystemRegisterKnownId.TTBR1_EL1, 0xC101, Arm64SystemRegisterKind.MRRS | Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR | Arm64SystemRegisterKind.MSRR);
    /// <summary>
    /// Translation Table Base Register 1 (EL1)
    /// </summary>
    public static Arm64SystemRegister TTBR1_EL12 => new(Arm64SystemRegisterKnownId.TTBR1_EL12, 0xE901, Arm64SystemRegisterKind.MRRS | Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR | Arm64SystemRegisterKind.MSRR);
    /// <summary>
    /// Translation Table Base Register 1 (EL2)
    /// </summary>
    public static Arm64SystemRegister TTBR1_EL2 => new(Arm64SystemRegisterKnownId.TTBR1_EL2, 0xE101, Arm64SystemRegisterKind.MRRS | Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR | Arm64SystemRegisterKind.MSRR);
    /// <summary>
    /// User Access Override
    /// </summary>
    public static Arm64SystemRegister _UAO => new(Arm64SystemRegisterKnownId.UAO, 0xC214, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// TLB Invalidate by VA, All ASID, EL1
    /// </summary>
    public static Arm64SystemRegister VAAE1 => new(Arm64SystemRegisterKnownId.VAAE1, 0x443B, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, All ASID, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VAAE1IS => new(Arm64SystemRegisterKnownId.VAAE1IS, 0x441B, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, All ASID, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VAAE1ISNXS => new(Arm64SystemRegisterKnownId.VAAE1ISNXS, 0x449B, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, All ASID, EL1
    /// </summary>
    public static Arm64SystemRegister VAAE1NXS => new(Arm64SystemRegisterKnownId.VAAE1NXS, 0x44BB, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, All ASID, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VAAE1OS => new(Arm64SystemRegisterKnownId.VAAE1OS, 0x440B, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, All ASID, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VAAE1OSNXS => new(Arm64SystemRegisterKnownId.VAAE1OSNXS, 0x448B, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, All ASID, Last level, EL1
    /// </summary>
    public static Arm64SystemRegister VAALE1 => new(Arm64SystemRegisterKnownId.VAALE1, 0x443F, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, All ASID, Last Level, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VAALE1IS => new(Arm64SystemRegisterKnownId.VAALE1IS, 0x441F, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, All ASID, Last Level, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VAALE1ISNXS => new(Arm64SystemRegisterKnownId.VAALE1ISNXS, 0x449F, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, All ASID, Last level, EL1
    /// </summary>
    public static Arm64SystemRegister VAALE1NXS => new(Arm64SystemRegisterKnownId.VAALE1NXS, 0x44BF, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, All ASID, Last Level, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VAALE1OS => new(Arm64SystemRegisterKnownId.VAALE1OS, 0x440F, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, All ASID, Last Level, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VAALE1OSNXS => new(Arm64SystemRegisterKnownId.VAALE1OSNXS, 0x448F, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL1
    /// </summary>
    public static Arm64SystemRegister VAE1 => new(Arm64SystemRegisterKnownId.VAE1, 0x4439, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VAE1IS => new(Arm64SystemRegisterKnownId.VAE1IS, 0x4419, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VAE1ISNXS => new(Arm64SystemRegisterKnownId.VAE1ISNXS, 0x4499, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL1
    /// </summary>
    public static Arm64SystemRegister VAE1NXS => new(Arm64SystemRegisterKnownId.VAE1NXS, 0x44B9, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VAE1OS => new(Arm64SystemRegisterKnownId.VAE1OS, 0x4409, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VAE1OSNXS => new(Arm64SystemRegisterKnownId.VAE1OSNXS, 0x4489, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL2
    /// </summary>
    public static Arm64SystemRegister VAE2 => new(Arm64SystemRegisterKnownId.VAE2, 0x6439, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL2, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VAE2IS => new(Arm64SystemRegisterKnownId.VAE2IS, 0x6419, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL2, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VAE2ISNXS => new(Arm64SystemRegisterKnownId.VAE2ISNXS, 0x6499, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL2
    /// </summary>
    public static Arm64SystemRegister VAE2NXS => new(Arm64SystemRegisterKnownId.VAE2NXS, 0x64B9, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL2, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VAE2OS => new(Arm64SystemRegisterKnownId.VAE2OS, 0x6409, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL2, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VAE2OSNXS => new(Arm64SystemRegisterKnownId.VAE2OSNXS, 0x6489, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL3
    /// </summary>
    public static Arm64SystemRegister VAE3 => new(Arm64SystemRegisterKnownId.VAE3, 0x7439, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL3, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VAE3IS => new(Arm64SystemRegisterKnownId.VAE3IS, 0x7419, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL3, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VAE3ISNXS => new(Arm64SystemRegisterKnownId.VAE3ISNXS, 0x7499, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL3
    /// </summary>
    public static Arm64SystemRegister VAE3NXS => new(Arm64SystemRegisterKnownId.VAE3NXS, 0x74B9, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL3, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VAE3OS => new(Arm64SystemRegisterKnownId.VAE3OS, 0x7409, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, EL3, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VAE3OSNXS => new(Arm64SystemRegisterKnownId.VAE3OSNXS, 0x7489, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL1
    /// </summary>
    public static Arm64SystemRegister VALE1 => new(Arm64SystemRegisterKnownId.VALE1, 0x443D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VALE1IS => new(Arm64SystemRegisterKnownId.VALE1IS, 0x441D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VALE1ISNXS => new(Arm64SystemRegisterKnownId.VALE1ISNXS, 0x449D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL1
    /// </summary>
    public static Arm64SystemRegister VALE1NXS => new(Arm64SystemRegisterKnownId.VALE1NXS, 0x44BD, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VALE1OS => new(Arm64SystemRegisterKnownId.VALE1OS, 0x440D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VALE1OSNXS => new(Arm64SystemRegisterKnownId.VALE1OSNXS, 0x448D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL2
    /// </summary>
    public static Arm64SystemRegister VALE2 => new(Arm64SystemRegisterKnownId.VALE2, 0x643D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL2, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VALE2IS => new(Arm64SystemRegisterKnownId.VALE2IS, 0x641D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL2, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VALE2ISNXS => new(Arm64SystemRegisterKnownId.VALE2ISNXS, 0x649D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL2
    /// </summary>
    public static Arm64SystemRegister VALE2NXS => new(Arm64SystemRegisterKnownId.VALE2NXS, 0x64BD, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL2, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VALE2OS => new(Arm64SystemRegisterKnownId.VALE2OS, 0x640D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL2, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VALE2OSNXS => new(Arm64SystemRegisterKnownId.VALE2OSNXS, 0x648D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL3
    /// </summary>
    public static Arm64SystemRegister VALE3 => new(Arm64SystemRegisterKnownId.VALE3, 0x743D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL3, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VALE3IS => new(Arm64SystemRegisterKnownId.VALE3IS, 0x741D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL3, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VALE3ISNXS => new(Arm64SystemRegisterKnownId.VALE3ISNXS, 0x749D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL3
    /// </summary>
    public static Arm64SystemRegister VALE3NXS => new(Arm64SystemRegisterKnownId.VALE3NXS, 0x74BD, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL3, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VALE3OS => new(Arm64SystemRegisterKnownId.VALE3OS, 0x740D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// TLB Invalidate by VA, Last level, EL3, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VALE3OSNXS => new(Arm64SystemRegisterKnownId.VALE3OSNXS, 0x748D, Arm64SystemRegisterKind.TLBI | Arm64SystemRegisterKind.TLBIP);
    /// <summary>
    /// Vector Base Address Register (EL1)
    /// </summary>
    public static Arm64SystemRegister VBAR_EL1 => new(Arm64SystemRegisterKnownId.VBAR_EL1, 0xC600, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Vector Base Address Register (EL1)
    /// </summary>
    public static Arm64SystemRegister VBAR_EL12 => new(Arm64SystemRegisterKnownId.VBAR_EL12, 0xEE00, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Vector Base Address Register (EL2)
    /// </summary>
    public static Arm64SystemRegister VBAR_EL2 => new(Arm64SystemRegisterKnownId.VBAR_EL2, 0xE600, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Vector Base Address Register (EL3)
    /// </summary>
    public static Arm64SystemRegister VBAR_EL3 => new(Arm64SystemRegisterKnownId.VBAR_EL3, 0xF600, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Virtual Deferred Interrupt Status Register (EL2)
    /// </summary>
    public static Arm64SystemRegister VDISR_EL2 => new(Arm64SystemRegisterKnownId.VDISR_EL2, 0xE609, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Virtual Deferred Interrupt Status Register (EL3)
    /// </summary>
    public static Arm64SystemRegister VDISR_EL3 => new(Arm64SystemRegisterKnownId.VDISR_EL3, 0xF609, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// TLB Invalidate by VMID, All at stage 1, EL1
    /// </summary>
    public static Arm64SystemRegister VMALLE1 => new(Arm64SystemRegisterKnownId.VMALLE1, 0x4438, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by VMID, All at stage 1, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VMALLE1IS => new(Arm64SystemRegisterKnownId.VMALLE1IS, 0x4418, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by VMID, All at stage 1, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VMALLE1ISNXS => new(Arm64SystemRegisterKnownId.VMALLE1ISNXS, 0x4498, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by VMID, All at stage 1, EL1
    /// </summary>
    public static Arm64SystemRegister VMALLE1NXS => new(Arm64SystemRegisterKnownId.VMALLE1NXS, 0x44B8, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by VMID, All at stage 1, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VMALLE1OS => new(Arm64SystemRegisterKnownId.VMALLE1OS, 0x4408, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by VMID, All at stage 1, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VMALLE1OSNXS => new(Arm64SystemRegisterKnownId.VMALLE1OSNXS, 0x4488, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by VMID, All at Stage 1 and 2, EL1
    /// </summary>
    public static Arm64SystemRegister VMALLS12E1 => new(Arm64SystemRegisterKnownId.VMALLS12E1, 0x643E, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by VMID, All at Stage 1 and 2, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VMALLS12E1IS => new(Arm64SystemRegisterKnownId.VMALLS12E1IS, 0x641E, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by VMID, All at Stage 1 and 2, EL1, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VMALLS12E1ISNXS => new(Arm64SystemRegisterKnownId.VMALLS12E1ISNXS, 0x649E, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by VMID, All at Stage 1 and 2, EL1
    /// </summary>
    public static Arm64SystemRegister VMALLS12E1NXS => new(Arm64SystemRegisterKnownId.VMALLS12E1NXS, 0x64BE, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by VMID, All at Stage 1 and 2, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VMALLS12E1OS => new(Arm64SystemRegisterKnownId.VMALLS12E1OS, 0x640E, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate by VMID, All at Stage 1 and 2, EL1, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VMALLS12E1OSNXS => new(Arm64SystemRegisterKnownId.VMALLS12E1OSNXS, 0x648E, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate stage 2 dirty state by VMID, EL1&amp;0
    /// </summary>
    public static Arm64SystemRegister VMALLWS2E1 => new(Arm64SystemRegisterKnownId.VMALLWS2E1, 0x6432, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate stage 2 dirty state by VMID, EL1&amp;0, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VMALLWS2E1IS => new(Arm64SystemRegisterKnownId.VMALLWS2E1IS, 0x6412, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate stage 2 dirty state by VMID, EL1&amp;0, Inner Shareable
    /// </summary>
    public static Arm64SystemRegister VMALLWS2E1ISNXS => new(Arm64SystemRegisterKnownId.VMALLWS2E1ISNXS, 0x6492, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate stage 2 dirty state by VMID, EL1&amp;0
    /// </summary>
    public static Arm64SystemRegister VMALLWS2E1NXS => new(Arm64SystemRegisterKnownId.VMALLWS2E1NXS, 0x64B2, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate stage 2 write permission by VMID, EL1&amp;0, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VMALLWS2E1OS => new(Arm64SystemRegisterKnownId.VMALLWS2E1OS, 0x642A, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// TLB Invalidate stage 2 write permission by VMID, EL1&amp;0, Outer Shareable
    /// </summary>
    public static Arm64SystemRegister VMALLWS2E1OSNXS => new(Arm64SystemRegisterKnownId.VMALLWS2E1OSNXS, 0x64AA, Arm64SystemRegisterKind.TLBI);
    /// <summary>
    /// Alternate MECID for EL1&amp;0 stage 2 translation regime
    /// </summary>
    public static Arm64SystemRegister VMECID_A_EL2 => new(Arm64SystemRegisterKnownId.VMECID_A_EL2, 0xE549, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Primary MECID for EL1&amp;0 stage 2 translation regime
    /// </summary>
    public static Arm64SystemRegister VMECID_P_EL2 => new(Arm64SystemRegisterKnownId.VMECID_P_EL2, 0xE548, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Virtualization Multiprocessor ID Register
    /// </summary>
    public static Arm64SystemRegister VMPIDR_EL2 => new(Arm64SystemRegisterKnownId.VMPIDR_EL2, 0xE005, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Virtual Nested Control Register
    /// </summary>
    public static Arm64SystemRegister VNCR_EL2 => new(Arm64SystemRegisterKnownId.VNCR_EL2, 0xE110, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Virtualization Processor ID Register
    /// </summary>
    public static Arm64SystemRegister VPIDR_EL2 => new(Arm64SystemRegisterKnownId.VPIDR_EL2, 0xE000, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Virtual SError Exception Syndrome Register (EL2)
    /// </summary>
    public static Arm64SystemRegister VSESR_EL2 => new(Arm64SystemRegisterKnownId.VSESR_EL2, 0xE293, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Virtual SError Exception Syndrome Register (EL3)
    /// </summary>
    public static Arm64SystemRegister VSESR_EL3 => new(Arm64SystemRegisterKnownId.VSESR_EL3, 0xF293, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Virtualization Secure Translation Control Register
    /// </summary>
    public static Arm64SystemRegister VSTCR_EL2 => new(Arm64SystemRegisterKnownId.VSTCR_EL2, 0xE132, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Virtualization Secure Translation Table Base Register
    /// </summary>
    public static Arm64SystemRegister VSTTBR_EL2 => new(Arm64SystemRegisterKnownId.VSTTBR_EL2, 0xE130, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Virtualization Translation Control Register
    /// </summary>
    public static Arm64SystemRegister VTCR_EL2 => new(Arm64SystemRegisterKnownId.VTCR_EL2, 0xE10A, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Virtualization Translation Table Base Register
    /// </summary>
    public static Arm64SystemRegister VTTBR_EL2 => new(Arm64SystemRegisterKnownId.VTTBR_EL2, 0xE108, Arm64SystemRegisterKind.MRRS | Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR | Arm64SystemRegisterKind.MSRR);
    /// <summary>
    /// SVE Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ZCR_EL1 => new(Arm64SystemRegisterKnownId.ZCR_EL1, 0xC090, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// SVE Control Register (EL1)
    /// </summary>
    public static Arm64SystemRegister ZCR_EL12 => new(Arm64SystemRegisterKnownId.ZCR_EL12, 0xE890, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// SVE Control Register (EL2)
    /// </summary>
    public static Arm64SystemRegister ZCR_EL2 => new(Arm64SystemRegisterKnownId.ZCR_EL2, 0xE090, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// SVE Control Register (EL3)
    /// </summary>
    public static Arm64SystemRegister ZCR_EL3 => new(Arm64SystemRegisterKnownId.ZCR_EL3, 0xF090, Arm64SystemRegisterKind.MRS | Arm64SystemRegisterKind.MSR);
    /// <summary>
    /// Data Cache Zero by VA
    /// </summary>
    public static Arm64SystemRegister ZVA => new(Arm64SystemRegisterKnownId.ZVA, 0x5BA1, Arm64SystemRegisterKind.DC);
}
