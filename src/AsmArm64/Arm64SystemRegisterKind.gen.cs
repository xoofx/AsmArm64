
// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

namespace AsmArm64;

/// <summary>
/// Kind of system registers.
/// </summary>
[Flags]
public enum Arm64SystemRegisterKind
{
    /// <summary>
    /// The kind of this system register is unknown.
    /// </summary>
    Unknown = 0,

    /// <summary>
    /// The register is used by the APAS instruction.
    /// </summary>
    APAS = 1 << 0,

    /// <summary>
    /// The register is used by the AT instruction.
    /// </summary>
    AT = 1 << 1,

    /// <summary>
    /// The register is used by the BRB instruction.
    /// </summary>
    BRB = 1 << 2,

    /// <summary>
    /// The register is used by the CFP instruction.
    /// </summary>
    CFP = 1 << 3,

    /// <summary>
    /// The register is used by the COSP instruction.
    /// </summary>
    COSP = 1 << 4,

    /// <summary>
    /// The register is used by the CPP instruction.
    /// </summary>
    CPP = 1 << 5,

    /// <summary>
    /// The register is used by the DC instruction.
    /// </summary>
    DC = 1 << 6,

    /// <summary>
    /// The register is used by the DVP instruction.
    /// </summary>
    DVP = 1 << 7,

    /// <summary>
    /// The register is used by the GCSPOPCX instruction.
    /// </summary>
    GCSPOPCX = 1 << 8,

    /// <summary>
    /// The register is used by the GCSPOPM instruction.
    /// </summary>
    GCSPOPM = 1 << 9,

    /// <summary>
    /// The register is used by the GCSPOPX instruction.
    /// </summary>
    GCSPOPX = 1 << 10,

    /// <summary>
    /// The register is used by the GCSPUSHM instruction.
    /// </summary>
    GCSPUSHM = 1 << 11,

    /// <summary>
    /// The register is used by the GCSPUSHX instruction.
    /// </summary>
    GCSPUSHX = 1 << 12,

    /// <summary>
    /// The register is used by the GCSSS1 instruction.
    /// </summary>
    GCSSS1 = 1 << 13,

    /// <summary>
    /// The register is used by the GCSSS2 instruction.
    /// </summary>
    GCSSS2 = 1 << 14,

    /// <summary>
    /// The register is used by the IC instruction.
    /// </summary>
    IC = 1 << 15,

    /// <summary>
    /// The register is used by the MRRS instruction.
    /// </summary>
    MRRS = 1 << 16,

    /// <summary>
    /// The register is used by the MRS instruction.
    /// </summary>
    MRS = 1 << 17,

    /// <summary>
    /// The register is used by the MSR instruction.
    /// </summary>
    MSR = 1 << 18,

    /// <summary>
    /// The register is used by the MSRR instruction.
    /// </summary>
    MSRR = 1 << 19,

    /// <summary>
    /// The register is used by the TLBI instruction.
    /// </summary>
    TLBI = 1 << 20,

    /// <summary>
    /// The register is used by the TLBIP instruction.
    /// </summary>
    TLBIP = 1 << 21,

    /// <summary>
    /// The register is used by the TRCIT instruction.
    /// </summary>
    TRCIT = 1 << 22,
}

