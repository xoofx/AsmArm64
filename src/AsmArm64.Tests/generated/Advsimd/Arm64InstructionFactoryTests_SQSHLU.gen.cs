// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.Advsimd;

[TestClass]
public class Arm64InstructionFactoryTests_SQSHLU_Advsimd : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.SQSHLU"/>.
    /// </summary>
    [TestMethod]
    public void Test_SQSHLU_asisdshf_r_0()
    {
        TestInst(SQSHLU(B1, B2, 5), asm => asm.SQSHLU(B1, B2, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU B1, B2, #5");
        TestInst(SQSHLU(B31, B2, 5), asm => asm.SQSHLU(B31, B2, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU B31, B2, #5");
        TestInst(SQSHLU(B1, B0, 5), asm => asm.SQSHLU(B1, B0, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU B1, B0, #5");
        TestInst(SQSHLU(B31, B0, 5), asm => asm.SQSHLU(B31, B0, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU B31, B0, #5");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.SQSHLU"/>.
    /// </summary>
    [TestMethod]
    public void Test_SQSHLU_asisdshf_r_1()
    {
        TestInst(SQSHLU(H1, H2, 5), asm => asm.SQSHLU(H1, H2, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU H1, H2, #5");
        TestInst(SQSHLU(H31, H2, 5), asm => asm.SQSHLU(H31, H2, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU H31, H2, #5");
        TestInst(SQSHLU(H1, H0, 5), asm => asm.SQSHLU(H1, H0, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU H1, H0, #5");
        TestInst(SQSHLU(H31, H0, 5), asm => asm.SQSHLU(H31, H0, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU H31, H0, #5");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.SQSHLU"/>.
    /// </summary>
    [TestMethod]
    public void Test_SQSHLU_asisdshf_r_2()
    {
        TestInst(SQSHLU(S1, S2, 5), asm => asm.SQSHLU(S1, S2, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU S1, S2, #5");
        TestInst(SQSHLU(S31, S2, 5), asm => asm.SQSHLU(S31, S2, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU S31, S2, #5");
        TestInst(SQSHLU(S1, S0, 5), asm => asm.SQSHLU(S1, S0, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU S1, S0, #5");
        TestInst(SQSHLU(S31, S0, 5), asm => asm.SQSHLU(S31, S0, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU S31, S0, #5");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.SQSHLU"/>.
    /// </summary>
    [TestMethod]
    public void Test_SQSHLU_asisdshf_r_3()
    {
        TestInst(SQSHLU(D1, D2, 5), asm => asm.SQSHLU(D1, D2, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU D1, D2, #5");
        TestInst(SQSHLU(D31, D2, 5), asm => asm.SQSHLU(D31, D2, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU D31, D2, #5");
        TestInst(SQSHLU(D1, D0, 5), asm => asm.SQSHLU(D1, D0, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU D1, D0, #5");
        TestInst(SQSHLU(D31, D0, 5), asm => asm.SQSHLU(D31, D0, 5), Arm64InstructionId.SQSHLU_asisdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU D31, D0, #5");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.SQSHLU"/>.
    /// </summary>
    [TestMethod]
    public void Test_SQSHLU_asimdshf_r_4()
    {
        TestInst(SQSHLU(V0.T_8B, V1.T_8B, 5), asm => asm.SQSHLU(V0.T_8B, V1.T_8B, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.8B, V1.8B, #5");
        TestInst(SQSHLU(V30.T_8B, V1.T_8B, 5), asm => asm.SQSHLU(V30.T_8B, V1.T_8B, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.8B, V1.8B, #5");
        TestInst(SQSHLU(V0.T_8B, V31.T_8B, 5), asm => asm.SQSHLU(V0.T_8B, V31.T_8B, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.8B, V31.8B, #5");
        TestInst(SQSHLU(V30.T_8B, V31.T_8B, 5), asm => asm.SQSHLU(V30.T_8B, V31.T_8B, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.8B, V31.8B, #5");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.SQSHLU"/>.
    /// </summary>
    [TestMethod]
    public void Test_SQSHLU_asimdshf_r_5()
    {
        TestInst(SQSHLU(V0.T_16B, V1.T_16B, 5), asm => asm.SQSHLU(V0.T_16B, V1.T_16B, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.16B, V1.16B, #5");
        TestInst(SQSHLU(V30.T_16B, V1.T_16B, 5), asm => asm.SQSHLU(V30.T_16B, V1.T_16B, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.16B, V1.16B, #5");
        TestInst(SQSHLU(V0.T_16B, V31.T_16B, 5), asm => asm.SQSHLU(V0.T_16B, V31.T_16B, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.16B, V31.16B, #5");
        TestInst(SQSHLU(V30.T_16B, V31.T_16B, 5), asm => asm.SQSHLU(V30.T_16B, V31.T_16B, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.16B, V31.16B, #5");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.SQSHLU"/>.
    /// </summary>
    [TestMethod]
    public void Test_SQSHLU_asimdshf_r_6()
    {
        TestInst(SQSHLU(V0.T_4H, V1.T_4H, 5), asm => asm.SQSHLU(V0.T_4H, V1.T_4H, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.4H, V1.4H, #5");
        TestInst(SQSHLU(V30.T_4H, V1.T_4H, 5), asm => asm.SQSHLU(V30.T_4H, V1.T_4H, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.4H, V1.4H, #5");
        TestInst(SQSHLU(V0.T_4H, V31.T_4H, 5), asm => asm.SQSHLU(V0.T_4H, V31.T_4H, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.4H, V31.4H, #5");
        TestInst(SQSHLU(V30.T_4H, V31.T_4H, 5), asm => asm.SQSHLU(V30.T_4H, V31.T_4H, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.4H, V31.4H, #5");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.SQSHLU"/>.
    /// </summary>
    [TestMethod]
    public void Test_SQSHLU_asimdshf_r_7()
    {
        TestInst(SQSHLU(V0.T_8H, V1.T_8H, 5), asm => asm.SQSHLU(V0.T_8H, V1.T_8H, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.8H, V1.8H, #5");
        TestInst(SQSHLU(V30.T_8H, V1.T_8H, 5), asm => asm.SQSHLU(V30.T_8H, V1.T_8H, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.8H, V1.8H, #5");
        TestInst(SQSHLU(V0.T_8H, V31.T_8H, 5), asm => asm.SQSHLU(V0.T_8H, V31.T_8H, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.8H, V31.8H, #5");
        TestInst(SQSHLU(V30.T_8H, V31.T_8H, 5), asm => asm.SQSHLU(V30.T_8H, V31.T_8H, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.8H, V31.8H, #5");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.SQSHLU"/>.
    /// </summary>
    [TestMethod]
    public void Test_SQSHLU_asimdshf_r_8()
    {
        TestInst(SQSHLU(V0.T_2S, V1.T_2S, 5), asm => asm.SQSHLU(V0.T_2S, V1.T_2S, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.2S, V1.2S, #5");
        TestInst(SQSHLU(V30.T_2S, V1.T_2S, 5), asm => asm.SQSHLU(V30.T_2S, V1.T_2S, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.2S, V1.2S, #5");
        TestInst(SQSHLU(V0.T_2S, V31.T_2S, 5), asm => asm.SQSHLU(V0.T_2S, V31.T_2S, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.2S, V31.2S, #5");
        TestInst(SQSHLU(V30.T_2S, V31.T_2S, 5), asm => asm.SQSHLU(V30.T_2S, V31.T_2S, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.2S, V31.2S, #5");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.SQSHLU"/>.
    /// </summary>
    [TestMethod]
    public void Test_SQSHLU_asimdshf_r_9()
    {
        TestInst(SQSHLU(V0.T_4S, V1.T_4S, 5), asm => asm.SQSHLU(V0.T_4S, V1.T_4S, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.4S, V1.4S, #5");
        TestInst(SQSHLU(V30.T_4S, V1.T_4S, 5), asm => asm.SQSHLU(V30.T_4S, V1.T_4S, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.4S, V1.4S, #5");
        TestInst(SQSHLU(V0.T_4S, V31.T_4S, 5), asm => asm.SQSHLU(V0.T_4S, V31.T_4S, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.4S, V31.4S, #5");
        TestInst(SQSHLU(V30.T_4S, V31.T_4S, 5), asm => asm.SQSHLU(V30.T_4S, V31.T_4S, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.4S, V31.4S, #5");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.SQSHLU"/>.
    /// </summary>
    [TestMethod]
    public void Test_SQSHLU_asimdshf_r_10()
    {
        TestInst(SQSHLU(V0.T_2D, V1.T_2D, 5), asm => asm.SQSHLU(V0.T_2D, V1.T_2D, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.2D, V1.2D, #5");
        TestInst(SQSHLU(V30.T_2D, V1.T_2D, 5), asm => asm.SQSHLU(V30.T_2D, V1.T_2D, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.2D, V1.2D, #5");
        TestInst(SQSHLU(V0.T_2D, V31.T_2D, 5), asm => asm.SQSHLU(V0.T_2D, V31.T_2D, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V0.2D, V31.2D, #5");
        TestInst(SQSHLU(V30.T_2D, V31.T_2D, 5), asm => asm.SQSHLU(V30.T_2D, V31.T_2D, 5), Arm64InstructionId.SQSHLU_asimdshf_r, Arm64Mnemonic.SQSHLU, "SQSHLU V30.2D, V31.2D, #5");
    }
}
