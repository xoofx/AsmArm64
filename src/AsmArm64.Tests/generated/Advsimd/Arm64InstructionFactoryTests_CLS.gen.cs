// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System.Runtime.CompilerServices;
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.Advsimd;

[TestClass]
public class Arm64InstructionFactoryTests_CLS_Advsimd : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.CLS"/>.
    /// </summary>
    [TestMethod]
    public void Test_CLS_asimdmisc_r_0()
    {
        TestInst(CLS(V0.T_8B, V1.T_8B), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V0.8B, V1.8B");
        TestInst(CLS(V30.T_8B, V1.T_8B), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V30.8B, V1.8B");
        TestInst(CLS(V0.T_8B, V31.T_8B), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V0.8B, V31.8B");
        TestInst(CLS(V30.T_8B, V31.T_8B), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V30.8B, V31.8B");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.CLS"/>.
    /// </summary>
    [TestMethod]
    public void Test_CLS_asimdmisc_r_1()
    {
        TestInst(CLS(V0.T_16B, V1.T_16B), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V0.16B, V1.16B");
        TestInst(CLS(V30.T_16B, V1.T_16B), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V30.16B, V1.16B");
        TestInst(CLS(V0.T_16B, V31.T_16B), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V0.16B, V31.16B");
        TestInst(CLS(V30.T_16B, V31.T_16B), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V30.16B, V31.16B");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.CLS"/>.
    /// </summary>
    [TestMethod]
    public void Test_CLS_asimdmisc_r_2()
    {
        TestInst(CLS(V0.T_4H, V1.T_4H), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V0.4H, V1.4H");
        TestInst(CLS(V30.T_4H, V1.T_4H), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V30.4H, V1.4H");
        TestInst(CLS(V0.T_4H, V31.T_4H), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V0.4H, V31.4H");
        TestInst(CLS(V30.T_4H, V31.T_4H), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V30.4H, V31.4H");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.CLS"/>.
    /// </summary>
    [TestMethod]
    public void Test_CLS_asimdmisc_r_3()
    {
        TestInst(CLS(V0.T_8H, V1.T_8H), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V0.8H, V1.8H");
        TestInst(CLS(V30.T_8H, V1.T_8H), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V30.8H, V1.8H");
        TestInst(CLS(V0.T_8H, V31.T_8H), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V0.8H, V31.8H");
        TestInst(CLS(V30.T_8H, V31.T_8H), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V30.8H, V31.8H");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.CLS"/>.
    /// </summary>
    [TestMethod]
    public void Test_CLS_asimdmisc_r_4()
    {
        TestInst(CLS(V0.T_2S, V1.T_2S), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V0.2S, V1.2S");
        TestInst(CLS(V30.T_2S, V1.T_2S), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V30.2S, V1.2S");
        TestInst(CLS(V0.T_2S, V31.T_2S), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V0.2S, V31.2S");
        TestInst(CLS(V30.T_2S, V31.T_2S), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V30.2S, V31.2S");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.CLS"/>.
    /// </summary>
    [TestMethod]
    public void Test_CLS_asimdmisc_r_5()
    {
        TestInst(CLS(V0.T_4S, V1.T_4S), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V0.4S, V1.4S");
        TestInst(CLS(V30.T_4S, V1.T_4S), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V30.4S, V1.4S");
        TestInst(CLS(V0.T_4S, V31.T_4S), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V0.4S, V31.4S");
        TestInst(CLS(V30.T_4S, V31.T_4S), Arm64InstructionId.CLS_asimdmisc_r, Arm64Mnemonic.CLS, "CLS V30.4S, V31.4S");
    }
}
