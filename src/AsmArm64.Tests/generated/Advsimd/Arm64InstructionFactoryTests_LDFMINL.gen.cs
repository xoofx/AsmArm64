// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System.Runtime.CompilerServices;
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.Advsimd;

[TestClass]
public class Arm64InstructionFactoryTests_LDFMINL_Advsimd : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LDFMINL"/>.
    /// </summary>
    [TestMethod]
    public void Test_LDFMINL_16_0()
    {
        TestInst(LDFMINL(H0, H1, _[X3]), Arm64InstructionId.LDFMINL_16, Arm64Mnemonic.LDFMINL, "LDFMINL H0, H1, [X3]");
        TestInst(LDFMINL(H31, H1, _[X3]), Arm64InstructionId.LDFMINL_16, Arm64Mnemonic.LDFMINL, "LDFMINL H31, H1, [X3]");
        TestInst(LDFMINL(H0, H31, _[X3]), Arm64InstructionId.LDFMINL_16, Arm64Mnemonic.LDFMINL, "LDFMINL H0, H31, [X3]");
        TestInst(LDFMINL(H31, H31, _[X3]), Arm64InstructionId.LDFMINL_16, Arm64Mnemonic.LDFMINL, "LDFMINL H31, H31, [X3]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LDFMINL"/>.
    /// </summary>
    [TestMethod]
    public void Test_LDFMINL_32_1()
    {
        TestInst(LDFMINL(S0, S1, _[X3]), Arm64InstructionId.LDFMINL_32, Arm64Mnemonic.LDFMINL, "LDFMINL S0, S1, [X3]");
        TestInst(LDFMINL(S31, S1, _[X3]), Arm64InstructionId.LDFMINL_32, Arm64Mnemonic.LDFMINL, "LDFMINL S31, S1, [X3]");
        TestInst(LDFMINL(S0, S31, _[X3]), Arm64InstructionId.LDFMINL_32, Arm64Mnemonic.LDFMINL, "LDFMINL S0, S31, [X3]");
        TestInst(LDFMINL(S31, S31, _[X3]), Arm64InstructionId.LDFMINL_32, Arm64Mnemonic.LDFMINL, "LDFMINL S31, S31, [X3]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LDFMINL"/>.
    /// </summary>
    [TestMethod]
    public void Test_LDFMINL_64_2()
    {
        TestInst(LDFMINL(D0, D1, _[X3]), Arm64InstructionId.LDFMINL_64, Arm64Mnemonic.LDFMINL, "LDFMINL D0, D1, [X3]");
        TestInst(LDFMINL(D31, D1, _[X3]), Arm64InstructionId.LDFMINL_64, Arm64Mnemonic.LDFMINL, "LDFMINL D31, D1, [X3]");
        TestInst(LDFMINL(D0, D31, _[X3]), Arm64InstructionId.LDFMINL_64, Arm64Mnemonic.LDFMINL, "LDFMINL D0, D31, [X3]");
        TestInst(LDFMINL(D31, D31, _[X3]), Arm64InstructionId.LDFMINL_64, Arm64Mnemonic.LDFMINL, "LDFMINL D31, D31, [X3]");
    }
}
