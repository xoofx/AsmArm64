// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.Advsimd;

[TestClass]
public class Arm64InstructionFactoryTests_LUTI4_Advsimd : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LUTI4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LUTI4_asimdtbl_l5_0()
    {
        TestInst(LUTI4(V0.T_16B, V1.T_16B.Group1(), V2[1]), asm => asm.LUTI4(V0.T_16B, V1.T_16B.Group1(), V2[1]), Arm64InstructionId.LUTI4_asimdtbl_l5, Arm64Mnemonic.LUTI4, "LUTI4 V0.16B, { V1.16B }, V2[1]");
        TestInst(LUTI4(V30.T_16B, V1.T_16B.Group1(), V2[1]), asm => asm.LUTI4(V30.T_16B, V1.T_16B.Group1(), V2[1]), Arm64InstructionId.LUTI4_asimdtbl_l5, Arm64Mnemonic.LUTI4, "LUTI4 V30.16B, { V1.16B }, V2[1]");
        TestInst(LUTI4(V0.T_16B, V31.T_16B.Group1(), V2[1]), asm => asm.LUTI4(V0.T_16B, V31.T_16B.Group1(), V2[1]), Arm64InstructionId.LUTI4_asimdtbl_l5, Arm64Mnemonic.LUTI4, "LUTI4 V0.16B, { V31.16B }, V2[1]");
        TestInst(LUTI4(V30.T_16B, V31.T_16B.Group1(), V2[1]), asm => asm.LUTI4(V30.T_16B, V31.T_16B.Group1(), V2[1]), Arm64InstructionId.LUTI4_asimdtbl_l5, Arm64Mnemonic.LUTI4, "LUTI4 V30.16B, { V31.16B }, V2[1]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LUTI4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LUTI4_asimdtbl_l7_1()
    {
        TestInst(LUTI4(V0.T_8H, V1.T_8H.Group2(), V2[1]), asm => asm.LUTI4(V0.T_8H, V1.T_8H.Group2(), V2[1]), Arm64InstructionId.LUTI4_asimdtbl_l7, Arm64Mnemonic.LUTI4, "LUTI4 V0.8H, { V1.8H, V2.8H }, V2[1]");
        TestInst(LUTI4(V30.T_8H, V1.T_8H.Group2(), V2[1]), asm => asm.LUTI4(V30.T_8H, V1.T_8H.Group2(), V2[1]), Arm64InstructionId.LUTI4_asimdtbl_l7, Arm64Mnemonic.LUTI4, "LUTI4 V30.8H, { V1.8H, V2.8H }, V2[1]");
        TestInst(LUTI4(V0.T_8H, V31.T_8H.Group2(), V2[1]), asm => asm.LUTI4(V0.T_8H, V31.T_8H.Group2(), V2[1]), Arm64InstructionId.LUTI4_asimdtbl_l7, Arm64Mnemonic.LUTI4, "LUTI4 V0.8H, { V31.8H, V0.8H }, V2[1]");
        TestInst(LUTI4(V30.T_8H, V31.T_8H.Group2(), V2[1]), asm => asm.LUTI4(V30.T_8H, V31.T_8H.Group2(), V2[1]), Arm64InstructionId.LUTI4_asimdtbl_l7, Arm64Mnemonic.LUTI4, "LUTI4 V30.8H, { V31.8H, V0.8H }, V2[1]");
    }
}
