// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.Advsimd;

[TestClass]
public class Arm64InstructionFactoryTests_FCVTXN_Advsimd : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.FCVTXN"/>.
    /// </summary>
    [TestMethod]
    public void Test_FCVTXN_asisdmisc_n_0()
    {
        TestInst(FCVTXN(S0, D1), asm => asm.FCVTXN(S0, D1), Arm64InstructionId.FCVTXN_asisdmisc_n, Arm64Mnemonic.FCVTXN, "FCVTXN S0, D1");
        TestInst(FCVTXN(S31, D1), asm => asm.FCVTXN(S31, D1), Arm64InstructionId.FCVTXN_asisdmisc_n, Arm64Mnemonic.FCVTXN, "FCVTXN S31, D1");
        TestInst(FCVTXN(S0, D31), asm => asm.FCVTXN(S0, D31), Arm64InstructionId.FCVTXN_asisdmisc_n, Arm64Mnemonic.FCVTXN, "FCVTXN S0, D31");
        TestInst(FCVTXN(S31, D31), asm => asm.FCVTXN(S31, D31), Arm64InstructionId.FCVTXN_asisdmisc_n, Arm64Mnemonic.FCVTXN, "FCVTXN S31, D31");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.FCVTXN"/>.
    /// </summary>
    [TestMethod]
    public void Test_FCVTXN_asimdmisc_n_1()
    {
        TestInst(FCVTXN(V0.T_2S, V1.T_2D), asm => asm.FCVTXN(V0.T_2S, V1.T_2D), Arm64InstructionId.FCVTXN_asimdmisc_n, Arm64Mnemonic.FCVTXN, "FCVTXN V0.2S, V1.2D");
        TestInst(FCVTXN(V30.T_2S, V1.T_2D), asm => asm.FCVTXN(V30.T_2S, V1.T_2D), Arm64InstructionId.FCVTXN_asimdmisc_n, Arm64Mnemonic.FCVTXN, "FCVTXN V30.2S, V1.2D");
        TestInst(FCVTXN(V0.T_2S, V31.T_2D), asm => asm.FCVTXN(V0.T_2S, V31.T_2D), Arm64InstructionId.FCVTXN_asimdmisc_n, Arm64Mnemonic.FCVTXN, "FCVTXN V0.2S, V31.2D");
        TestInst(FCVTXN(V30.T_2S, V31.T_2D), asm => asm.FCVTXN(V30.T_2S, V31.T_2D), Arm64InstructionId.FCVTXN_asimdmisc_n, Arm64Mnemonic.FCVTXN, "FCVTXN V30.2S, V31.2D");
    }
}
