// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.Advsimd;

[TestClass]
public class Arm64InstructionFactoryTests_FMMLA_Advsimd : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.FMMLA"/>.
    /// </summary>
    [TestMethod]
    public void Test_FMMLA_asimd_fp8fp16_0()
    {
        TestInst(FMMLA(V0.T_8H, V1.T_16B, V2.T_16B), asm => asm.FMMLA(V0.T_8H, V1.T_16B, V2.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp16, Arm64Mnemonic.FMMLA, "FMMLA V0.8H, V1.16B, V2.16B");
        TestInst(FMMLA(V30.T_8H, V1.T_16B, V2.T_16B), asm => asm.FMMLA(V30.T_8H, V1.T_16B, V2.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp16, Arm64Mnemonic.FMMLA, "FMMLA V30.8H, V1.16B, V2.16B");
        TestInst(FMMLA(V0.T_8H, V31.T_16B, V2.T_16B), asm => asm.FMMLA(V0.T_8H, V31.T_16B, V2.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp16, Arm64Mnemonic.FMMLA, "FMMLA V0.8H, V31.16B, V2.16B");
        TestInst(FMMLA(V30.T_8H, V31.T_16B, V2.T_16B), asm => asm.FMMLA(V30.T_8H, V31.T_16B, V2.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp16, Arm64Mnemonic.FMMLA, "FMMLA V30.8H, V31.16B, V2.16B");
        TestInst(FMMLA(V0.T_8H, V1.T_16B, V0.T_16B), asm => asm.FMMLA(V0.T_8H, V1.T_16B, V0.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp16, Arm64Mnemonic.FMMLA, "FMMLA V0.8H, V1.16B, V0.16B");
        TestInst(FMMLA(V30.T_8H, V1.T_16B, V0.T_16B), asm => asm.FMMLA(V30.T_8H, V1.T_16B, V0.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp16, Arm64Mnemonic.FMMLA, "FMMLA V30.8H, V1.16B, V0.16B");
        TestInst(FMMLA(V0.T_8H, V31.T_16B, V0.T_16B), asm => asm.FMMLA(V0.T_8H, V31.T_16B, V0.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp16, Arm64Mnemonic.FMMLA, "FMMLA V0.8H, V31.16B, V0.16B");
        TestInst(FMMLA(V30.T_8H, V31.T_16B, V0.T_16B), asm => asm.FMMLA(V30.T_8H, V31.T_16B, V0.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp16, Arm64Mnemonic.FMMLA, "FMMLA V30.8H, V31.16B, V0.16B");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.FMMLA"/>.
    /// </summary>
    [TestMethod]
    public void Test_FMMLA_asimd_fp8fp32_1()
    {
        TestInst(FMMLA(V0.T_4S, V1.T_16B, V2.T_16B), asm => asm.FMMLA(V0.T_4S, V1.T_16B, V2.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp32, Arm64Mnemonic.FMMLA, "FMMLA V0.4S, V1.16B, V2.16B");
        TestInst(FMMLA(V30.T_4S, V1.T_16B, V2.T_16B), asm => asm.FMMLA(V30.T_4S, V1.T_16B, V2.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp32, Arm64Mnemonic.FMMLA, "FMMLA V30.4S, V1.16B, V2.16B");
        TestInst(FMMLA(V0.T_4S, V31.T_16B, V2.T_16B), asm => asm.FMMLA(V0.T_4S, V31.T_16B, V2.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp32, Arm64Mnemonic.FMMLA, "FMMLA V0.4S, V31.16B, V2.16B");
        TestInst(FMMLA(V30.T_4S, V31.T_16B, V2.T_16B), asm => asm.FMMLA(V30.T_4S, V31.T_16B, V2.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp32, Arm64Mnemonic.FMMLA, "FMMLA V30.4S, V31.16B, V2.16B");
        TestInst(FMMLA(V0.T_4S, V1.T_16B, V0.T_16B), asm => asm.FMMLA(V0.T_4S, V1.T_16B, V0.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp32, Arm64Mnemonic.FMMLA, "FMMLA V0.4S, V1.16B, V0.16B");
        TestInst(FMMLA(V30.T_4S, V1.T_16B, V0.T_16B), asm => asm.FMMLA(V30.T_4S, V1.T_16B, V0.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp32, Arm64Mnemonic.FMMLA, "FMMLA V30.4S, V1.16B, V0.16B");
        TestInst(FMMLA(V0.T_4S, V31.T_16B, V0.T_16B), asm => asm.FMMLA(V0.T_4S, V31.T_16B, V0.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp32, Arm64Mnemonic.FMMLA, "FMMLA V0.4S, V31.16B, V0.16B");
        TestInst(FMMLA(V30.T_4S, V31.T_16B, V0.T_16B), asm => asm.FMMLA(V30.T_4S, V31.T_16B, V0.T_16B), Arm64InstructionId.FMMLA_asimd_fp8fp32, Arm64Mnemonic.FMMLA, "FMMLA V30.4S, V31.16B, V0.16B");
    }
}
