// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.Advsimd;

[TestClass]
public class Arm64InstructionFactoryTests_LD4_Advsimd : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlse_r4_0()
    {
        TestInst(LD4(V0.T_8B.Group4(), _[X2]), asm => asm.LD4(V0.T_8B.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V0.8B, V1.8B, V2.8B, V3.8B }, [X2]");
        TestInst(LD4(V30.T_8B.Group4(), _[X2]), asm => asm.LD4(V30.T_8B.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V30.8B, V31.8B, V0.8B, V1.8B }, [X2]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlse_r4_1()
    {
        TestInst(LD4(V0.T_16B.Group4(), _[X2]), asm => asm.LD4(V0.T_16B.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V0.16B, V1.16B, V2.16B, V3.16B }, [X2]");
        TestInst(LD4(V30.T_16B.Group4(), _[X2]), asm => asm.LD4(V30.T_16B.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V30.16B, V31.16B, V0.16B, V1.16B }, [X2]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlse_r4_2()
    {
        TestInst(LD4(V0.T_4H.Group4(), _[X2]), asm => asm.LD4(V0.T_4H.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V0.4H, V1.4H, V2.4H, V3.4H }, [X2]");
        TestInst(LD4(V30.T_4H.Group4(), _[X2]), asm => asm.LD4(V30.T_4H.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V30.4H, V31.4H, V0.4H, V1.4H }, [X2]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlse_r4_3()
    {
        TestInst(LD4(V0.T_8H.Group4(), _[X2]), asm => asm.LD4(V0.T_8H.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V0.8H, V1.8H, V2.8H, V3.8H }, [X2]");
        TestInst(LD4(V30.T_8H.Group4(), _[X2]), asm => asm.LD4(V30.T_8H.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V30.8H, V31.8H, V0.8H, V1.8H }, [X2]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlse_r4_4()
    {
        TestInst(LD4(V0.T_2S.Group4(), _[X2]), asm => asm.LD4(V0.T_2S.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V0.2S, V1.2S, V2.2S, V3.2S }, [X2]");
        TestInst(LD4(V30.T_2S.Group4(), _[X2]), asm => asm.LD4(V30.T_2S.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V30.2S, V31.2S, V0.2S, V1.2S }, [X2]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlse_r4_5()
    {
        TestInst(LD4(V0.T_4S.Group4(), _[X2]), asm => asm.LD4(V0.T_4S.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V0.4S, V1.4S, V2.4S, V3.4S }, [X2]");
        TestInst(LD4(V30.T_4S.Group4(), _[X2]), asm => asm.LD4(V30.T_4S.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V30.4S, V31.4S, V0.4S, V1.4S }, [X2]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlse_r4_6()
    {
        TestInst(LD4(V0.T_2D.Group4(), _[X2]), asm => asm.LD4(V0.T_2D.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V0.2D, V1.2D, V2.2D, V3.2D }, [X2]");
        TestInst(LD4(V30.T_2D.Group4(), _[X2]), asm => asm.LD4(V30.T_2D.Group4(), _[X2]), Arm64InstructionId.LD4_asisdlse_r4, Arm64Mnemonic.LD4, "LD4 { V30.2D, V31.2D, V0.2D, V1.2D }, [X2]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_i4_i_7()
    {
        TestInst(LD4(V0.T_8B.Group4(), _[X2], 32), asm => asm.LD4(V0.T_8B.Group4(), _[X2], 32), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V0.8B, V1.8B, V2.8B, V3.8B }, [X2], #32");
        TestInst(LD4(V30.T_8B.Group4(), _[X2], 32), asm => asm.LD4(V30.T_8B.Group4(), _[X2], 32), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V30.8B, V31.8B, V0.8B, V1.8B }, [X2], #32");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_i4_i_8()
    {
        TestInst(LD4(V0.T_16B.Group4(), _[X2], 64), asm => asm.LD4(V0.T_16B.Group4(), _[X2], 64), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V0.16B, V1.16B, V2.16B, V3.16B }, [X2], #64");
        TestInst(LD4(V30.T_16B.Group4(), _[X2], 64), asm => asm.LD4(V30.T_16B.Group4(), _[X2], 64), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V30.16B, V31.16B, V0.16B, V1.16B }, [X2], #64");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_i4_i_9()
    {
        TestInst(LD4(V0.T_4H.Group4(), _[X2], 32), asm => asm.LD4(V0.T_4H.Group4(), _[X2], 32), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V0.4H, V1.4H, V2.4H, V3.4H }, [X2], #32");
        TestInst(LD4(V30.T_4H.Group4(), _[X2], 32), asm => asm.LD4(V30.T_4H.Group4(), _[X2], 32), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V30.4H, V31.4H, V0.4H, V1.4H }, [X2], #32");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_i4_i_10()
    {
        TestInst(LD4(V0.T_8H.Group4(), _[X2], 64), asm => asm.LD4(V0.T_8H.Group4(), _[X2], 64), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V0.8H, V1.8H, V2.8H, V3.8H }, [X2], #64");
        TestInst(LD4(V30.T_8H.Group4(), _[X2], 64), asm => asm.LD4(V30.T_8H.Group4(), _[X2], 64), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V30.8H, V31.8H, V0.8H, V1.8H }, [X2], #64");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_i4_i_11()
    {
        TestInst(LD4(V0.T_2S.Group4(), _[X2], 32), asm => asm.LD4(V0.T_2S.Group4(), _[X2], 32), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V0.2S, V1.2S, V2.2S, V3.2S }, [X2], #32");
        TestInst(LD4(V30.T_2S.Group4(), _[X2], 32), asm => asm.LD4(V30.T_2S.Group4(), _[X2], 32), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V30.2S, V31.2S, V0.2S, V1.2S }, [X2], #32");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_i4_i_12()
    {
        TestInst(LD4(V0.T_4S.Group4(), _[X2], 64), asm => asm.LD4(V0.T_4S.Group4(), _[X2], 64), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V0.4S, V1.4S, V2.4S, V3.4S }, [X2], #64");
        TestInst(LD4(V30.T_4S.Group4(), _[X2], 64), asm => asm.LD4(V30.T_4S.Group4(), _[X2], 64), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V30.4S, V31.4S, V0.4S, V1.4S }, [X2], #64");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_i4_i_13()
    {
        TestInst(LD4(V0.T_2D.Group4(), _[X2], 64), asm => asm.LD4(V0.T_2D.Group4(), _[X2], 64), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V0.2D, V1.2D, V2.2D, V3.2D }, [X2], #64");
        TestInst(LD4(V30.T_2D.Group4(), _[X2], 64), asm => asm.LD4(V30.T_2D.Group4(), _[X2], 64), Arm64InstructionId.LD4_asisdlsep_i4_i, Arm64Mnemonic.LD4, "LD4 { V30.2D, V31.2D, V0.2D, V1.2D }, [X2], #64");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_r4_r_14()
    {
        TestInst(LD4(V0.T_8B.Group4(), _[X2], X2), asm => asm.LD4(V0.T_8B.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.8B, V1.8B, V2.8B, V3.8B }, [X2], X2");
        TestInst(LD4(V30.T_8B.Group4(), _[X2], X2), asm => asm.LD4(V30.T_8B.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.8B, V31.8B, V0.8B, V1.8B }, [X2], X2");
        TestInst(LD4(V0.T_8B.Group4(), _[X2], X17), asm => asm.LD4(V0.T_8B.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.8B, V1.8B, V2.8B, V3.8B }, [X2], X17");
        TestInst(LD4(V30.T_8B.Group4(), _[X2], X17), asm => asm.LD4(V30.T_8B.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.8B, V31.8B, V0.8B, V1.8B }, [X2], X17");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_r4_r_15()
    {
        TestInst(LD4(V0.T_16B.Group4(), _[X2], X2), asm => asm.LD4(V0.T_16B.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.16B, V1.16B, V2.16B, V3.16B }, [X2], X2");
        TestInst(LD4(V30.T_16B.Group4(), _[X2], X2), asm => asm.LD4(V30.T_16B.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.16B, V31.16B, V0.16B, V1.16B }, [X2], X2");
        TestInst(LD4(V0.T_16B.Group4(), _[X2], X17), asm => asm.LD4(V0.T_16B.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.16B, V1.16B, V2.16B, V3.16B }, [X2], X17");
        TestInst(LD4(V30.T_16B.Group4(), _[X2], X17), asm => asm.LD4(V30.T_16B.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.16B, V31.16B, V0.16B, V1.16B }, [X2], X17");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_r4_r_16()
    {
        TestInst(LD4(V0.T_4H.Group4(), _[X2], X2), asm => asm.LD4(V0.T_4H.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.4H, V1.4H, V2.4H, V3.4H }, [X2], X2");
        TestInst(LD4(V30.T_4H.Group4(), _[X2], X2), asm => asm.LD4(V30.T_4H.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.4H, V31.4H, V0.4H, V1.4H }, [X2], X2");
        TestInst(LD4(V0.T_4H.Group4(), _[X2], X17), asm => asm.LD4(V0.T_4H.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.4H, V1.4H, V2.4H, V3.4H }, [X2], X17");
        TestInst(LD4(V30.T_4H.Group4(), _[X2], X17), asm => asm.LD4(V30.T_4H.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.4H, V31.4H, V0.4H, V1.4H }, [X2], X17");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_r4_r_17()
    {
        TestInst(LD4(V0.T_8H.Group4(), _[X2], X2), asm => asm.LD4(V0.T_8H.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.8H, V1.8H, V2.8H, V3.8H }, [X2], X2");
        TestInst(LD4(V30.T_8H.Group4(), _[X2], X2), asm => asm.LD4(V30.T_8H.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.8H, V31.8H, V0.8H, V1.8H }, [X2], X2");
        TestInst(LD4(V0.T_8H.Group4(), _[X2], X17), asm => asm.LD4(V0.T_8H.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.8H, V1.8H, V2.8H, V3.8H }, [X2], X17");
        TestInst(LD4(V30.T_8H.Group4(), _[X2], X17), asm => asm.LD4(V30.T_8H.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.8H, V31.8H, V0.8H, V1.8H }, [X2], X17");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_r4_r_18()
    {
        TestInst(LD4(V0.T_2S.Group4(), _[X2], X2), asm => asm.LD4(V0.T_2S.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.2S, V1.2S, V2.2S, V3.2S }, [X2], X2");
        TestInst(LD4(V30.T_2S.Group4(), _[X2], X2), asm => asm.LD4(V30.T_2S.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.2S, V31.2S, V0.2S, V1.2S }, [X2], X2");
        TestInst(LD4(V0.T_2S.Group4(), _[X2], X17), asm => asm.LD4(V0.T_2S.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.2S, V1.2S, V2.2S, V3.2S }, [X2], X17");
        TestInst(LD4(V30.T_2S.Group4(), _[X2], X17), asm => asm.LD4(V30.T_2S.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.2S, V31.2S, V0.2S, V1.2S }, [X2], X17");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_r4_r_19()
    {
        TestInst(LD4(V0.T_4S.Group4(), _[X2], X2), asm => asm.LD4(V0.T_4S.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.4S, V1.4S, V2.4S, V3.4S }, [X2], X2");
        TestInst(LD4(V30.T_4S.Group4(), _[X2], X2), asm => asm.LD4(V30.T_4S.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.4S, V31.4S, V0.4S, V1.4S }, [X2], X2");
        TestInst(LD4(V0.T_4S.Group4(), _[X2], X17), asm => asm.LD4(V0.T_4S.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.4S, V1.4S, V2.4S, V3.4S }, [X2], X17");
        TestInst(LD4(V30.T_4S.Group4(), _[X2], X17), asm => asm.LD4(V30.T_4S.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.4S, V31.4S, V0.4S, V1.4S }, [X2], X17");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsep_r4_r_20()
    {
        TestInst(LD4(V0.T_2D.Group4(), _[X2], X2), asm => asm.LD4(V0.T_2D.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.2D, V1.2D, V2.2D, V3.2D }, [X2], X2");
        TestInst(LD4(V30.T_2D.Group4(), _[X2], X2), asm => asm.LD4(V30.T_2D.Group4(), _[X2], X2), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.2D, V31.2D, V0.2D, V1.2D }, [X2], X2");
        TestInst(LD4(V0.T_2D.Group4(), _[X2], X17), asm => asm.LD4(V0.T_2D.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V0.2D, V1.2D, V2.2D, V3.2D }, [X2], X17");
        TestInst(LD4(V30.T_2D.Group4(), _[X2], X17), asm => asm.LD4(V30.T_2D.Group4(), _[X2], X17), Arm64InstructionId.LD4_asisdlsep_r4_r, Arm64Mnemonic.LD4, "LD4 { V30.2D, V31.2D, V0.2D, V1.2D }, [X2], X17");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlso_b4_4b_21()
    {
        TestInst(LD4(V0.B.Group4()[1], _[X2]), asm => asm.LD4(V0.B.Group4()[1], _[X2]), Arm64InstructionId.LD4_asisdlso_b4_4b, Arm64Mnemonic.LD4, "LD4 { V0.B, V1.B, V2.B, V3.B }[1], [X2]");
        TestInst(LD4(V30.B.Group4()[1], _[X2]), asm => asm.LD4(V30.B.Group4()[1], _[X2]), Arm64InstructionId.LD4_asisdlso_b4_4b, Arm64Mnemonic.LD4, "LD4 { V30.B, V31.B, V0.B, V1.B }[1], [X2]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlso_h4_4h_22()
    {
        TestInst(LD4(V0.H.Group4()[1], _[X2]), asm => asm.LD4(V0.H.Group4()[1], _[X2]), Arm64InstructionId.LD4_asisdlso_h4_4h, Arm64Mnemonic.LD4, "LD4 { V0.H, V1.H, V2.H, V3.H }[1], [X2]");
        TestInst(LD4(V30.H.Group4()[1], _[X2]), asm => asm.LD4(V30.H.Group4()[1], _[X2]), Arm64InstructionId.LD4_asisdlso_h4_4h, Arm64Mnemonic.LD4, "LD4 { V30.H, V31.H, V0.H, V1.H }[1], [X2]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlso_s4_4s_23()
    {
        TestInst(LD4(V0.S.Group4()[1], _[X2]), asm => asm.LD4(V0.S.Group4()[1], _[X2]), Arm64InstructionId.LD4_asisdlso_s4_4s, Arm64Mnemonic.LD4, "LD4 { V0.S, V1.S, V2.S, V3.S }[1], [X2]");
        TestInst(LD4(V30.S.Group4()[1], _[X2]), asm => asm.LD4(V30.S.Group4()[1], _[X2]), Arm64InstructionId.LD4_asisdlso_s4_4s, Arm64Mnemonic.LD4, "LD4 { V30.S, V31.S, V0.S, V1.S }[1], [X2]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlso_d4_4d_24()
    {
        TestInst(LD4(V0.D.Group4()[1], _[X2]), asm => asm.LD4(V0.D.Group4()[1], _[X2]), Arm64InstructionId.LD4_asisdlso_d4_4d, Arm64Mnemonic.LD4, "LD4 { V0.D, V1.D, V2.D, V3.D }[1], [X2]");
        TestInst(LD4(V30.D.Group4()[1], _[X2]), asm => asm.LD4(V30.D.Group4()[1], _[X2]), Arm64InstructionId.LD4_asisdlso_d4_4d, Arm64Mnemonic.LD4, "LD4 { V30.D, V31.D, V0.D, V1.D }[1], [X2]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsop_b4_i4b_25()
    {
        TestInst(LD4(V0.B.Group4()[1], _[X2], 4), asm => asm.LD4(V0.B.Group4()[1], _[X2], 4), Arm64InstructionId.LD4_asisdlsop_b4_i4b, Arm64Mnemonic.LD4, "LD4 { V0.B, V1.B, V2.B, V3.B }[1], [X2], #4");
        TestInst(LD4(V30.B.Group4()[1], _[X2], 4), asm => asm.LD4(V30.B.Group4()[1], _[X2], 4), Arm64InstructionId.LD4_asisdlsop_b4_i4b, Arm64Mnemonic.LD4, "LD4 { V30.B, V31.B, V0.B, V1.B }[1], [X2], #4");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsop_bx4_r4b_26()
    {
        TestInst(LD4(V0.B.Group4()[1], _[X2], X2), asm => asm.LD4(V0.B.Group4()[1], _[X2], X2), Arm64InstructionId.LD4_asisdlsop_bx4_r4b, Arm64Mnemonic.LD4, "LD4 { V0.B, V1.B, V2.B, V3.B }[1], [X2], X2");
        TestInst(LD4(V30.B.Group4()[1], _[X2], X2), asm => asm.LD4(V30.B.Group4()[1], _[X2], X2), Arm64InstructionId.LD4_asisdlsop_bx4_r4b, Arm64Mnemonic.LD4, "LD4 { V30.B, V31.B, V0.B, V1.B }[1], [X2], X2");
        TestInst(LD4(V0.B.Group4()[1], _[X2], X17), asm => asm.LD4(V0.B.Group4()[1], _[X2], X17), Arm64InstructionId.LD4_asisdlsop_bx4_r4b, Arm64Mnemonic.LD4, "LD4 { V0.B, V1.B, V2.B, V3.B }[1], [X2], X17");
        TestInst(LD4(V30.B.Group4()[1], _[X2], X17), asm => asm.LD4(V30.B.Group4()[1], _[X2], X17), Arm64InstructionId.LD4_asisdlsop_bx4_r4b, Arm64Mnemonic.LD4, "LD4 { V30.B, V31.B, V0.B, V1.B }[1], [X2], X17");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsop_h4_i4h_27()
    {
        TestInst(LD4(V0.H.Group4()[1], _[X2], 8), asm => asm.LD4(V0.H.Group4()[1], _[X2], 8), Arm64InstructionId.LD4_asisdlsop_h4_i4h, Arm64Mnemonic.LD4, "LD4 { V0.H, V1.H, V2.H, V3.H }[1], [X2], #8");
        TestInst(LD4(V30.H.Group4()[1], _[X2], 8), asm => asm.LD4(V30.H.Group4()[1], _[X2], 8), Arm64InstructionId.LD4_asisdlsop_h4_i4h, Arm64Mnemonic.LD4, "LD4 { V30.H, V31.H, V0.H, V1.H }[1], [X2], #8");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsop_hx4_r4h_28()
    {
        TestInst(LD4(V0.H.Group4()[1], _[X2], X2), asm => asm.LD4(V0.H.Group4()[1], _[X2], X2), Arm64InstructionId.LD4_asisdlsop_hx4_r4h, Arm64Mnemonic.LD4, "LD4 { V0.H, V1.H, V2.H, V3.H }[1], [X2], X2");
        TestInst(LD4(V30.H.Group4()[1], _[X2], X2), asm => asm.LD4(V30.H.Group4()[1], _[X2], X2), Arm64InstructionId.LD4_asisdlsop_hx4_r4h, Arm64Mnemonic.LD4, "LD4 { V30.H, V31.H, V0.H, V1.H }[1], [X2], X2");
        TestInst(LD4(V0.H.Group4()[1], _[X2], X17), asm => asm.LD4(V0.H.Group4()[1], _[X2], X17), Arm64InstructionId.LD4_asisdlsop_hx4_r4h, Arm64Mnemonic.LD4, "LD4 { V0.H, V1.H, V2.H, V3.H }[1], [X2], X17");
        TestInst(LD4(V30.H.Group4()[1], _[X2], X17), asm => asm.LD4(V30.H.Group4()[1], _[X2], X17), Arm64InstructionId.LD4_asisdlsop_hx4_r4h, Arm64Mnemonic.LD4, "LD4 { V30.H, V31.H, V0.H, V1.H }[1], [X2], X17");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsop_s4_i4s_29()
    {
        TestInst(LD4(V0.S.Group4()[1], _[X2], 16), asm => asm.LD4(V0.S.Group4()[1], _[X2], 16), Arm64InstructionId.LD4_asisdlsop_s4_i4s, Arm64Mnemonic.LD4, "LD4 { V0.S, V1.S, V2.S, V3.S }[1], [X2], #16");
        TestInst(LD4(V30.S.Group4()[1], _[X2], 16), asm => asm.LD4(V30.S.Group4()[1], _[X2], 16), Arm64InstructionId.LD4_asisdlsop_s4_i4s, Arm64Mnemonic.LD4, "LD4 { V30.S, V31.S, V0.S, V1.S }[1], [X2], #16");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsop_sx4_r4s_30()
    {
        TestInst(LD4(V0.S.Group4()[1], _[X2], X2), asm => asm.LD4(V0.S.Group4()[1], _[X2], X2), Arm64InstructionId.LD4_asisdlsop_sx4_r4s, Arm64Mnemonic.LD4, "LD4 { V0.S, V1.S, V2.S, V3.S }[1], [X2], X2");
        TestInst(LD4(V30.S.Group4()[1], _[X2], X2), asm => asm.LD4(V30.S.Group4()[1], _[X2], X2), Arm64InstructionId.LD4_asisdlsop_sx4_r4s, Arm64Mnemonic.LD4, "LD4 { V30.S, V31.S, V0.S, V1.S }[1], [X2], X2");
        TestInst(LD4(V0.S.Group4()[1], _[X2], X17), asm => asm.LD4(V0.S.Group4()[1], _[X2], X17), Arm64InstructionId.LD4_asisdlsop_sx4_r4s, Arm64Mnemonic.LD4, "LD4 { V0.S, V1.S, V2.S, V3.S }[1], [X2], X17");
        TestInst(LD4(V30.S.Group4()[1], _[X2], X17), asm => asm.LD4(V30.S.Group4()[1], _[X2], X17), Arm64InstructionId.LD4_asisdlsop_sx4_r4s, Arm64Mnemonic.LD4, "LD4 { V30.S, V31.S, V0.S, V1.S }[1], [X2], X17");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsop_d4_i4d_31()
    {
        TestInst(LD4(V0.D.Group4()[1], _[X2], 32), asm => asm.LD4(V0.D.Group4()[1], _[X2], 32), Arm64InstructionId.LD4_asisdlsop_d4_i4d, Arm64Mnemonic.LD4, "LD4 { V0.D, V1.D, V2.D, V3.D }[1], [X2], #32");
        TestInst(LD4(V30.D.Group4()[1], _[X2], 32), asm => asm.LD4(V30.D.Group4()[1], _[X2], 32), Arm64InstructionId.LD4_asisdlsop_d4_i4d, Arm64Mnemonic.LD4, "LD4 { V30.D, V31.D, V0.D, V1.D }[1], [X2], #32");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.LD4"/>.
    /// </summary>
    [TestMethod]
    public void Test_LD4_asisdlsop_dx4_r4d_32()
    {
        TestInst(LD4(V0.D.Group4()[1], _[X2], X2), asm => asm.LD4(V0.D.Group4()[1], _[X2], X2), Arm64InstructionId.LD4_asisdlsop_dx4_r4d, Arm64Mnemonic.LD4, "LD4 { V0.D, V1.D, V2.D, V3.D }[1], [X2], X2");
        TestInst(LD4(V30.D.Group4()[1], _[X2], X2), asm => asm.LD4(V30.D.Group4()[1], _[X2], X2), Arm64InstructionId.LD4_asisdlsop_dx4_r4d, Arm64Mnemonic.LD4, "LD4 { V30.D, V31.D, V0.D, V1.D }[1], [X2], X2");
        TestInst(LD4(V0.D.Group4()[1], _[X2], X17), asm => asm.LD4(V0.D.Group4()[1], _[X2], X17), Arm64InstructionId.LD4_asisdlsop_dx4_r4d, Arm64Mnemonic.LD4, "LD4 { V0.D, V1.D, V2.D, V3.D }[1], [X2], X17");
        TestInst(LD4(V30.D.Group4()[1], _[X2], X17), asm => asm.LD4(V30.D.Group4()[1], _[X2], X17), Arm64InstructionId.LD4_asisdlsop_dx4_r4d, Arm64Mnemonic.LD4, "LD4 { V30.D, V31.D, V0.D, V1.D }[1], [X2], X17");
    }
}
