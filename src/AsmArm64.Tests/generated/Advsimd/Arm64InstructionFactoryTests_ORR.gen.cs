// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System.Runtime.CompilerServices;
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.Advsimd;

[TestClass]
public class Arm64InstructionFactoryTests_ORR_Advsimd
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.ORR"/>.
    /// </summary>
    [TestMethod]
    public void Test_ORR_asimdimm_l_hl_0()
    {
        Assert.Inconclusive("Not handled ORR_asimdimm_l_hl - ORR         Vd.T, #imm8 {, LSL #amount}");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.ORR"/>.
    /// </summary>
    [TestMethod]
    public void Test_ORR_asimdimm_l_hl_1()
    {
        Assert.Inconclusive("Not handled ORR_asimdimm_l_hl - ORR         Vd.T, #imm8 {, LSL #amount}");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.ORR"/>.
    /// </summary>
    [TestMethod]
    public void Test_ORR_asimdimm_l_sl_2()
    {
        Assert.Inconclusive("Not handled ORR_asimdimm_l_sl - ORR         Vd.T, #imm8 {, LSL #amount}");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.ORR"/>.
    /// </summary>
    [TestMethod]
    public void Test_ORR_asimdimm_l_sl_3()
    {
        Assert.Inconclusive("Not handled ORR_asimdimm_l_sl - ORR         Vd.T, #imm8 {, LSL #amount}");
    }
}
