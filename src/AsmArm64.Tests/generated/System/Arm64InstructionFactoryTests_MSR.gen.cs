// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System.Runtime.CompilerServices;
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.System;

[TestClass]
public class Arm64InstructionFactoryTests_MSR_System : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.MSR"/>.
    /// </summary>
    [TestMethod]
    public void Test_MSR_si_pstate_0()
    {
        TestInst(MSR(DAIFSet, 5), Arm64InstructionId.MSR_si_pstate, Arm64Mnemonic.MSR, "MSR DAIFSet, #5");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.MSR"/>.
    /// </summary>
    [TestMethod]
    public void Test_MSR_sr_systemmove_1()
    {
        TestInst(MSR(ACCDATA_EL1, X1), Arm64InstructionId.MSR_sr_systemmove, Arm64Mnemonic.MSR, "MSR ACCDATA_EL1, X1");
        TestInst(MSR(ACCDATA_EL1, X16), Arm64InstructionId.MSR_sr_systemmove, Arm64Mnemonic.MSR, "MSR ACCDATA_EL1, X16");
        TestInst(MSR(ACCDATA_EL1, XZR), Arm64InstructionId.MSR_sr_systemmove, Arm64Mnemonic.MSR, "MSR ACCDATA_EL1, XZR");
    }
}
