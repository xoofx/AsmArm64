// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0x20, 0x84, 0x42, 0x2e }, "sqrdmlah v0.4h, v1.4h, v2.4h")]
    [DataRow(new byte[] { 0x20, 0x8c, 0x42, 0x2e }, "sqrdmlsh v0.4h, v1.4h, v2.4h")]
    [DataRow(new byte[] { 0x20, 0x84, 0x82, 0x2e }, "sqrdmlah v0.2s, v1.2s, v2.2s")]
    [DataRow(new byte[] { 0x20, 0x8c, 0x82, 0x2e }, "sqrdmlsh v0.2s, v1.2s, v2.2s")]
    [DataRow(new byte[] { 0x20, 0x84, 0x82, 0x6e }, "sqrdmlah v0.4s, v1.4s, v2.4s")]
    [DataRow(new byte[] { 0x20, 0x8c, 0x82, 0x6e }, "sqrdmlsh v0.4s, v1.4s, v2.4s")]
    [DataRow(new byte[] { 0x20, 0x84, 0x42, 0x6e }, "sqrdmlah v0.8h, v1.8h, v2.8h")]
    [DataRow(new byte[] { 0x20, 0x8c, 0x42, 0x6e }, "sqrdmlsh v0.8h, v1.8h, v2.8h")]
    [DataRow(new byte[] { 0x20, 0x84, 0x42, 0x7e }, "sqrdmlah h0, h1, h2")]
    [DataRow(new byte[] { 0x20, 0x8c, 0x42, 0x7e }, "sqrdmlsh h0, h1, h2")]
    [DataRow(new byte[] { 0x20, 0x84, 0x82, 0x7e }, "sqrdmlah s0, s1, s2")]
    [DataRow(new byte[] { 0x20, 0x8c, 0x82, 0x7e }, "sqrdmlsh s0, s1, s2")]
    [DataRow(new byte[] { 0x20, 0xd0, 0x72, 0x2f }, "sqrdmlah v0.4h, v1.4h, v2.h[3]")]
    [DataRow(new byte[] { 0x20, 0xf0, 0x72, 0x2f }, "sqrdmlsh v0.4h, v1.4h, v2.h[3]")]
    [DataRow(new byte[] { 0x20, 0xd0, 0xa2, 0x2f }, "sqrdmlah v0.2s, v1.2s, v2.s[1]")]
    [DataRow(new byte[] { 0x20, 0xf0, 0xa2, 0x2f }, "sqrdmlsh v0.2s, v1.2s, v2.s[1]")]
    [DataRow(new byte[] { 0x20, 0xd0, 0x72, 0x6f }, "sqrdmlah v0.8h, v1.8h, v2.h[3]")]
    [DataRow(new byte[] { 0x20, 0xf0, 0x72, 0x6f }, "sqrdmlsh v0.8h, v1.8h, v2.h[3]")]
    [DataRow(new byte[] { 0x20, 0xd8, 0xa2, 0x6f }, "sqrdmlah v0.4s, v1.4s, v2.s[3]")]
    [DataRow(new byte[] { 0x20, 0xf8, 0xa2, 0x6f }, "sqrdmlsh v0.4s, v1.4s, v2.s[3]")]
    [DataRow(new byte[] { 0x20, 0xd0, 0x72, 0x7f }, "sqrdmlah h0, h1, v2.h[3]")]
    [DataRow(new byte[] { 0x20, 0xf0, 0x72, 0x7f }, "sqrdmlsh h0, h1, v2.h[3]")]
    [DataRow(new byte[] { 0x20, 0xd8, 0xa2, 0x7f }, "sqrdmlah s0, s1, v2.s[3]")]
    [DataRow(new byte[] { 0x20, 0xf8, 0xa2, 0x7f }, "sqrdmlsh s0, s1, v2.s[3]")]
    public void armv8_1a_rdma_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
