// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0x00, 0x21, 0x38, 0xd5 }, "mrs x0, APIAKeyLo_EL1")]
    [DataRow(new byte[] { 0x20, 0x21, 0x38, 0xd5 }, "mrs x0, APIAKeyHi_EL1")]
    [DataRow(new byte[] { 0x40, 0x21, 0x38, 0xd5 }, "mrs x0, APIBKeyLo_EL1")]
    [DataRow(new byte[] { 0x60, 0x21, 0x38, 0xd5 }, "mrs x0, APIBKeyHi_EL1")]
    [DataRow(new byte[] { 0x00, 0x22, 0x38, 0xd5 }, "mrs x0, APDAKeyLo_EL1")]
    [DataRow(new byte[] { 0x20, 0x22, 0x38, 0xd5 }, "mrs x0, APDAKeyHi_EL1")]
    [DataRow(new byte[] { 0x40, 0x22, 0x38, 0xd5 }, "mrs x0, APDBKeyLo_EL1")]
    [DataRow(new byte[] { 0x60, 0x22, 0x38, 0xd5 }, "mrs x0, APDBKeyHi_EL1")]
    [DataRow(new byte[] { 0x00, 0x23, 0x38, 0xd5 }, "mrs x0, APGAKeyLo_EL1")]
    [DataRow(new byte[] { 0x20, 0x23, 0x38, 0xd5 }, "mrs x0, APGAKeyHi_EL1")]
    [DataRow(new byte[] { 0x00, 0x21, 0x18, 0xd5 }, "msr APIAKeyLo_EL1, x0")]
    [DataRow(new byte[] { 0x20, 0x21, 0x18, 0xd5 }, "msr APIAKeyHi_EL1, x0")]
    [DataRow(new byte[] { 0x40, 0x21, 0x18, 0xd5 }, "msr APIBKeyLo_EL1, x0")]
    [DataRow(new byte[] { 0x60, 0x21, 0x18, 0xd5 }, "msr APIBKeyHi_EL1, x0")]
    [DataRow(new byte[] { 0x00, 0x22, 0x18, 0xd5 }, "msr APDAKeyLo_EL1, x0")]
    [DataRow(new byte[] { 0x20, 0x22, 0x18, 0xd5 }, "msr APDAKeyHi_EL1, x0")]
    [DataRow(new byte[] { 0x40, 0x22, 0x18, 0xd5 }, "msr APDBKeyLo_EL1, x0")]
    [DataRow(new byte[] { 0x60, 0x22, 0x18, 0xd5 }, "msr APDBKeyHi_EL1, x0")]
    [DataRow(new byte[] { 0x00, 0x23, 0x18, 0xd5 }, "msr APGAKeyLo_EL1, x0")]
    [DataRow(new byte[] { 0x20, 0x23, 0x18, 0xd5 }, "msr APGAKeyHi_EL1, x0")]
    [DataRow(new byte[] { 0xff, 0x20, 0x03, 0xd5 }, "xpaclri")]
    [DataRow(new byte[] { 0xff, 0x20, 0x03, 0xd5 }, "xpaclri")]
    [DataRow(new byte[] { 0x1f, 0x21, 0x03, 0xd5 }, "pacia1716")]
    [DataRow(new byte[] { 0x1f, 0x21, 0x03, 0xd5 }, "pacia1716")]
    [DataRow(new byte[] { 0x5f, 0x21, 0x03, 0xd5 }, "pacib1716")]
    [DataRow(new byte[] { 0x5f, 0x21, 0x03, 0xd5 }, "pacib1716")]
    [DataRow(new byte[] { 0x9f, 0x21, 0x03, 0xd5 }, "autia1716")]
    [DataRow(new byte[] { 0x9f, 0x21, 0x03, 0xd5 }, "autia1716")]
    [DataRow(new byte[] { 0xdf, 0x21, 0x03, 0xd5 }, "autib1716")]
    [DataRow(new byte[] { 0xdf, 0x21, 0x03, 0xd5 }, "autib1716")]
    [DataRow(new byte[] { 0x1f, 0x23, 0x03, 0xd5 }, "paciaz")]
    [DataRow(new byte[] { 0x1f, 0x23, 0x03, 0xd5 }, "paciaz")]
    [DataRow(new byte[] { 0x3f, 0x23, 0x03, 0xd5 }, "paciasp")]
    [DataRow(new byte[] { 0x3f, 0x23, 0x03, 0xd5 }, "paciasp")]
    [DataRow(new byte[] { 0x5f, 0x23, 0x03, 0xd5 }, "pacibz")]
    [DataRow(new byte[] { 0x5f, 0x23, 0x03, 0xd5 }, "pacibz")]
    [DataRow(new byte[] { 0x7f, 0x23, 0x03, 0xd5 }, "pacibsp")]
    [DataRow(new byte[] { 0x7f, 0x23, 0x03, 0xd5 }, "pacibsp")]
    [DataRow(new byte[] { 0x9f, 0x23, 0x03, 0xd5 }, "autiaz")]
    [DataRow(new byte[] { 0x9f, 0x23, 0x03, 0xd5 }, "autiaz")]
    [DataRow(new byte[] { 0xbf, 0x23, 0x03, 0xd5 }, "autiasp")]
    [DataRow(new byte[] { 0xbf, 0x23, 0x03, 0xd5 }, "autiasp")]
    [DataRow(new byte[] { 0xdf, 0x23, 0x03, 0xd5 }, "autibz")]
    [DataRow(new byte[] { 0xdf, 0x23, 0x03, 0xd5 }, "autibz")]
    [DataRow(new byte[] { 0xff, 0x23, 0x03, 0xd5 }, "autibsp")]
    [DataRow(new byte[] { 0xff, 0x23, 0x03, 0xd5 }, "autibsp")]
    [DataRow(new byte[] { 0x20, 0x00, 0xc1, 0xda }, "pacia x0, x1")]
    [DataRow(new byte[] { 0x20, 0x10, 0xc1, 0xda }, "autia x0, x1")]
    [DataRow(new byte[] { 0x20, 0x08, 0xc1, 0xda }, "pacda x0, x1")]
    [DataRow(new byte[] { 0x20, 0x18, 0xc1, 0xda }, "autda x0, x1")]
    [DataRow(new byte[] { 0x20, 0x04, 0xc1, 0xda }, "pacib x0, x1")]
    [DataRow(new byte[] { 0x20, 0x14, 0xc1, 0xda }, "autib x0, x1")]
    [DataRow(new byte[] { 0x20, 0x0c, 0xc1, 0xda }, "pacdb x0, x1")]
    [DataRow(new byte[] { 0x20, 0x1c, 0xc1, 0xda }, "autdb x0, x1")]
    [DataRow(new byte[] { 0x20, 0x30, 0xc2, 0x9a }, "pacga x0, x1, x2")]
    [DataRow(new byte[] { 0xe0, 0x23, 0xc1, 0xda }, "paciza x0")]
    [DataRow(new byte[] { 0xe0, 0x33, 0xc1, 0xda }, "autiza x0")]
    [DataRow(new byte[] { 0xe0, 0x2b, 0xc1, 0xda }, "pacdza x0")]
    [DataRow(new byte[] { 0xe0, 0x3b, 0xc1, 0xda }, "autdza x0")]
    [DataRow(new byte[] { 0xe0, 0x27, 0xc1, 0xda }, "pacizb x0")]
    [DataRow(new byte[] { 0xe0, 0x37, 0xc1, 0xda }, "autizb x0")]
    [DataRow(new byte[] { 0xe0, 0x2f, 0xc1, 0xda }, "pacdzb x0")]
    [DataRow(new byte[] { 0xe0, 0x3f, 0xc1, 0xda }, "autdzb x0")]
    [DataRow(new byte[] { 0xe0, 0x43, 0xc1, 0xda }, "xpaci x0")]
    [DataRow(new byte[] { 0xe0, 0x47, 0xc1, 0xda }, "xpacd x0")]
    [DataRow(new byte[] { 0x01, 0x08, 0x1f, 0xd7 }, "braa x0, x1")]
    [DataRow(new byte[] { 0x01, 0x0c, 0x1f, 0xd7 }, "brab x0, x1")]
    [DataRow(new byte[] { 0x01, 0x08, 0x3f, 0xd7 }, "blraa x0, x1")]
    [DataRow(new byte[] { 0x01, 0x0c, 0x3f, 0xd7 }, "blrab x0, x1")]
    [DataRow(new byte[] { 0x1f, 0x08, 0x1f, 0xd6 }, "braaz x0")]
    [DataRow(new byte[] { 0x1f, 0x0c, 0x1f, 0xd6 }, "brabz x0")]
    [DataRow(new byte[] { 0x1f, 0x08, 0x3f, 0xd6 }, "blraaz x0")]
    [DataRow(new byte[] { 0x1f, 0x0c, 0x3f, 0xd6 }, "blrabz x0")]
    [DataRow(new byte[] { 0xff, 0x0b, 0x5f, 0xd6 }, "retaa")]
    [DataRow(new byte[] { 0xff, 0x0f, 0x5f, 0xd6 }, "retab")]
    [DataRow(new byte[] { 0xff, 0x0b, 0x9f, 0xd6 }, "eretaa")]
    [DataRow(new byte[] { 0xff, 0x0f, 0x9f, 0xd6 }, "eretab")]
    [DataRow(new byte[] { 0x20, 0xf4, 0x3f, 0xf8 }, "ldraa x0, [x1, #4088]")]
    [DataRow(new byte[] { 0x20, 0x04, 0x60, 0xf8 }, "ldraa x0, [x1, #-4096]")]
    [DataRow(new byte[] { 0x20, 0xf4, 0xbf, 0xf8 }, "ldrab x0, [x1, #4088]")]
    [DataRow(new byte[] { 0x20, 0x04, 0xe0, 0xf8 }, "ldrab x0, [x1, #-4096]")]
    [DataRow(new byte[] { 0x20, 0xfc, 0x3f, 0xf8 }, "ldraa x0, [x1, #4088]!")]
    [DataRow(new byte[] { 0x20, 0x0c, 0x60, 0xf8 }, "ldraa x0, [x1, #-4096]!")]
    [DataRow(new byte[] { 0x20, 0xfc, 0xbf, 0xf8 }, "ldrab x0, [x1, #4088]!")]
    [DataRow(new byte[] { 0x20, 0x0c, 0xe0, 0xf8 }, "ldrab x0, [x1, #-4096]!")]
    [DataRow(new byte[] { 0x20, 0x04, 0x20, 0xf8 }, "ldraa x0, [x1]")]
    [DataRow(new byte[] { 0x20, 0x04, 0xa0, 0xf8 }, "ldrab x0, [x1]")]
    [DataRow(new byte[] { 0x20, 0x0c, 0x20, 0xf8 }, "ldraa x0, [x1, #0]!")]
    [DataRow(new byte[] { 0x20, 0x0c, 0xa0, 0xf8 }, "ldrab x0, [x1, #0]!")]
    [DataRow(new byte[] { 0xff, 0x0f, 0x60, 0xf8 }, "ldraa xzr, [sp, #-4096]!")]
    [DataRow(new byte[] { 0xff, 0x0f, 0xe0, 0xf8 }, "ldrab xzr, [sp, #-4096]!")]
    public void armv8_3a_signed_pointer_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
