// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0x20, 0xc4, 0x42, 0x2e }, "fcmla v0.4h, v1.4h, v2.4h, #0")]
    [DataRow(new byte[] { 0x20, 0xc4, 0x42, 0x6e }, "fcmla v0.8h, v1.8h, v2.8h, #0")]
    [DataRow(new byte[] { 0x20, 0xc4, 0x82, 0x2e }, "fcmla v0.2s, v1.2s, v2.2s, #0")]
    [DataRow(new byte[] { 0x20, 0xc4, 0x82, 0x6e }, "fcmla v0.4s, v1.4s, v2.4s, #0")]
    [DataRow(new byte[] { 0x20, 0xc4, 0xc2, 0x6e }, "fcmla v0.2d, v1.2d, v2.2d, #0")]
    [DataRow(new byte[] { 0x20, 0xc4, 0x82, 0x2e }, "fcmla v0.2s, v1.2s, v2.2s, #0")]
    [DataRow(new byte[] { 0x20, 0xcc, 0x82, 0x2e }, "fcmla v0.2s, v1.2s, v2.2s, #90")]
    [DataRow(new byte[] { 0x20, 0xd4, 0x82, 0x2e }, "fcmla v0.2s, v1.2s, v2.2s, #180")]
    [DataRow(new byte[] { 0x20, 0xdc, 0x82, 0x2e }, "fcmla v0.2s, v1.2s, v2.2s, #270")]
    [DataRow(new byte[] { 0x20, 0xe4, 0x42, 0x2e }, "fcadd v0.4h, v1.4h, v2.4h, #90")]
    [DataRow(new byte[] { 0x20, 0xe4, 0x42, 0x6e }, "fcadd v0.8h, v1.8h, v2.8h, #90")]
    [DataRow(new byte[] { 0x20, 0xe4, 0x82, 0x2e }, "fcadd v0.2s, v1.2s, v2.2s, #90")]
    [DataRow(new byte[] { 0x20, 0xe4, 0x82, 0x6e }, "fcadd v0.4s, v1.4s, v2.4s, #90")]
    [DataRow(new byte[] { 0x20, 0xe4, 0xc2, 0x6e }, "fcadd v0.2d, v1.2d, v2.2d, #90")]
    [DataRow(new byte[] { 0x20, 0xe4, 0x82, 0x2e }, "fcadd v0.2s, v1.2s, v2.2s, #90")]
    [DataRow(new byte[] { 0x20, 0xf4, 0x82, 0x2e }, "fcadd v0.2s, v1.2s, v2.2s, #270")]
    [DataRow(new byte[] { 0x20, 0x10, 0x42, 0x2f }, "fcmla v0.4h, v1.4h, v2.h[0], #0")]
    [DataRow(new byte[] { 0x20, 0x10, 0x42, 0x6f }, "fcmla v0.8h, v1.8h, v2.h[0], #0")]
    [DataRow(new byte[] { 0x20, 0x10, 0x82, 0x6f }, "fcmla v0.4s, v1.4s, v2.s[0], #0")]
    [DataRow(new byte[] { 0x20, 0x30, 0x82, 0x6f }, "fcmla v0.4s, v1.4s, v2.s[0], #90")]
    [DataRow(new byte[] { 0x20, 0x50, 0x82, 0x6f }, "fcmla v0.4s, v1.4s, v2.s[0], #180")]
    [DataRow(new byte[] { 0x20, 0x70, 0x82, 0x6f }, "fcmla v0.4s, v1.4s, v2.s[0], #270")]
    [DataRow(new byte[] { 0x20, 0x10, 0x62, 0x2f }, "fcmla v0.4h, v1.4h, v2.h[1], #0")]
    [DataRow(new byte[] { 0x20, 0x18, 0x62, 0x6f }, "fcmla v0.8h, v1.8h, v2.h[3], #0")]
    [DataRow(new byte[] { 0x20, 0x18, 0x82, 0x6f }, "fcmla v0.4s, v1.4s, v2.s[1], #0")]
    [DataRow(new byte[] { 0x20, 0xc4, 0x42, 0x2e }, "fcmla v0.4h, v1.4h, v2.4h, #0")]
    [DataRow(new byte[] { 0x20, 0xc4, 0x42, 0x6e }, "fcmla v0.8h, v1.8h, v2.8h, #0")]
    [DataRow(new byte[] { 0x20, 0xc4, 0x82, 0x2e }, "fcmla v0.2s, v1.2s, v2.2s, #0")]
    [DataRow(new byte[] { 0x20, 0xc4, 0x82, 0x6e }, "fcmla v0.4s, v1.4s, v2.4s, #0")]
    [DataRow(new byte[] { 0x20, 0xc4, 0xc2, 0x6e }, "fcmla v0.2d, v1.2d, v2.2d, #0")]
    [DataRow(new byte[] { 0x20, 0xc4, 0x82, 0x2e }, "fcmla v0.2s, v1.2s, v2.2s, #0")]
    [DataRow(new byte[] { 0x20, 0xcc, 0x82, 0x2e }, "fcmla v0.2s, v1.2s, v2.2s, #90")]
    [DataRow(new byte[] { 0x20, 0xd4, 0x82, 0x2e }, "fcmla v0.2s, v1.2s, v2.2s, #180")]
    [DataRow(new byte[] { 0x20, 0xdc, 0x82, 0x2e }, "fcmla v0.2s, v1.2s, v2.2s, #270")]
    [DataRow(new byte[] { 0x20, 0xe4, 0x42, 0x2e }, "fcadd v0.4h, v1.4h, v2.4h, #90")]
    [DataRow(new byte[] { 0x20, 0xe4, 0x42, 0x6e }, "fcadd v0.8h, v1.8h, v2.8h, #90")]
    [DataRow(new byte[] { 0x20, 0xe4, 0x82, 0x2e }, "fcadd v0.2s, v1.2s, v2.2s, #90")]
    [DataRow(new byte[] { 0x20, 0xe4, 0x82, 0x6e }, "fcadd v0.4s, v1.4s, v2.4s, #90")]
    [DataRow(new byte[] { 0x20, 0xe4, 0xc2, 0x6e }, "fcadd v0.2d, v1.2d, v2.2d, #90")]
    [DataRow(new byte[] { 0x20, 0xe4, 0x82, 0x2e }, "fcadd v0.2s, v1.2s, v2.2s, #90")]
    [DataRow(new byte[] { 0x20, 0xf4, 0x82, 0x2e }, "fcadd v0.2s, v1.2s, v2.2s, #270")]
    [DataRow(new byte[] { 0x20, 0x10, 0x42, 0x2f }, "fcmla v0.4h, v1.4h, v2.h[0], #0")]
    [DataRow(new byte[] { 0x20, 0x10, 0x42, 0x6f }, "fcmla v0.8h, v1.8h, v2.h[0], #0")]
    [DataRow(new byte[] { 0x20, 0x10, 0x82, 0x6f }, "fcmla v0.4s, v1.4s, v2.s[0], #0")]
    [DataRow(new byte[] { 0x20, 0x30, 0x82, 0x6f }, "fcmla v0.4s, v1.4s, v2.s[0], #90")]
    [DataRow(new byte[] { 0x20, 0x50, 0x82, 0x6f }, "fcmla v0.4s, v1.4s, v2.s[0], #180")]
    [DataRow(new byte[] { 0x20, 0x70, 0x82, 0x6f }, "fcmla v0.4s, v1.4s, v2.s[0], #270")]
    [DataRow(new byte[] { 0x20, 0x10, 0x62, 0x2f }, "fcmla v0.4h, v1.4h, v2.h[1], #0")]
    [DataRow(new byte[] { 0x20, 0x18, 0x62, 0x6f }, "fcmla v0.8h, v1.8h, v2.h[3], #0")]
    [DataRow(new byte[] { 0x20, 0x18, 0x82, 0x6f }, "fcmla v0.4s, v1.4s, v2.s[1], #0")]
    public void armv8_3a_complex_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
