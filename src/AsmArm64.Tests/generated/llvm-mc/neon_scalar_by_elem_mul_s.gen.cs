// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0x20, 0x98, 0x11, 0x5f }, "fmul h0, h1, v1.h[5]")]
    [DataRow(new byte[] { 0x20, 0x90, 0x81, 0x5f }, "fmul s0, s1, v1.s[0]")]
    [DataRow(new byte[] { 0x7e, 0x91, 0xa1, 0x5f }, "fmul s30, s11, v1.s[1]")]
    [DataRow(new byte[] { 0xa4, 0x98, 0x87, 0x5f }, "fmul s4, s5, v7.s[2]")]
    [DataRow(new byte[] { 0xd0, 0x9a, 0xb0, 0x5f }, "fmul s16, s22, v16.s[3]")]
    [DataRow(new byte[] { 0x20, 0x90, 0xc1, 0x5f }, "fmul d0, d1, v1.d[0]")]
    [DataRow(new byte[] { 0x7e, 0x99, 0xc1, 0x5f }, "fmul d30, d11, v1.d[1]")]
    [DataRow(new byte[] { 0x46, 0x98, 0x18, 0x7f }, "fmulx h6, h2, v8.h[5]")]
    [DataRow(new byte[] { 0x46, 0x90, 0x88, 0x7f }, "fmulx s6, s2, v8.s[0]")]
    [DataRow(new byte[] { 0x67, 0x90, 0xad, 0x7f }, "fmulx s7, s3, v13.s[1]")]
    [DataRow(new byte[] { 0xe9, 0x98, 0x89, 0x7f }, "fmulx s9, s7, v9.s[2]")]
    [DataRow(new byte[] { 0xad, 0x9a, 0xaa, 0x7f }, "fmulx s13, s21, v10.s[3]")]
    [DataRow(new byte[] { 0x2f, 0x91, 0xc7, 0x7f }, "fmulx d15, d9, v7.d[0]")]
    [DataRow(new byte[] { 0x8d, 0x99, 0xcb, 0x7f }, "fmulx d13, d12, v11.d[1]")]
    public void neon_scalar_by_elem_mul_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
