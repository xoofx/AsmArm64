// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0x1f, 0x40, 0x00, 0xd5 }, "cfinv")]
    [DataRow(new byte[] { 0x2d, 0x08, 0x00, 0x3a }, "setf8 w1")]
    [DataRow(new byte[] { 0xed, 0x0b, 0x00, 0x3a }, "setf8 wzr")]
    [DataRow(new byte[] { 0x2d, 0x48, 0x00, 0x3a }, "setf16 w1")]
    [DataRow(new byte[] { 0xed, 0x4b, 0x00, 0x3a }, "setf16 wzr")]
    [DataRow(new byte[] { 0x2f, 0x84, 0x1f, 0xba }, "rmif x1, #63, #15")]
    [DataRow(new byte[] { 0xef, 0x87, 0x1f, 0xba }, "rmif xzr, #63, #15")]
    [DataRow(new byte[] { 0x1f, 0x40, 0x00, 0xd5 }, "cfinv")]
    [DataRow(new byte[] { 0x2d, 0x08, 0x00, 0x3a }, "setf8 w1")]
    [DataRow(new byte[] { 0xed, 0x0b, 0x00, 0x3a }, "setf8 wzr")]
    [DataRow(new byte[] { 0x2d, 0x48, 0x00, 0x3a }, "setf16 w1")]
    [DataRow(new byte[] { 0xed, 0x4b, 0x00, 0x3a }, "setf16 wzr")]
    [DataRow(new byte[] { 0x2f, 0x84, 0x1f, 0xba }, "rmif x1, #63, #15")]
    [DataRow(new byte[] { 0xef, 0x87, 0x1f, 0xba }, "rmif xzr, #63, #15")]
    public void armv8_4a_flag_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
