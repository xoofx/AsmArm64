// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0x61, 0x11, 0x22, 0x19 }, "ldclrp x1, x2, [x11]")]
    [DataRow(new byte[] { 0xf5, 0x13, 0x36, 0x19 }, "ldclrp x21, x22, [sp]")]
    [DataRow(new byte[] { 0x61, 0x11, 0xa2, 0x19 }, "ldclrpa x1, x2, [x11]")]
    [DataRow(new byte[] { 0xf5, 0x13, 0xb6, 0x19 }, "ldclrpa x21, x22, [sp]")]
    [DataRow(new byte[] { 0x61, 0x11, 0xe2, 0x19 }, "ldclrpal x1, x2, [x11]")]
    [DataRow(new byte[] { 0xf5, 0x13, 0xf6, 0x19 }, "ldclrpal x21, x22, [sp]")]
    [DataRow(new byte[] { 0x61, 0x11, 0x62, 0x19 }, "ldclrpl x1, x2, [x11]")]
    [DataRow(new byte[] { 0xf5, 0x13, 0x76, 0x19 }, "ldclrpl x21, x22, [sp]")]
    [DataRow(new byte[] { 0x61, 0x31, 0x22, 0x19 }, "ldsetp x1, x2, [x11]")]
    [DataRow(new byte[] { 0xf5, 0x33, 0x36, 0x19 }, "ldsetp x21, x22, [sp]")]
    [DataRow(new byte[] { 0x61, 0x31, 0xa2, 0x19 }, "ldsetpa x1, x2, [x11]")]
    [DataRow(new byte[] { 0xf5, 0x33, 0xb6, 0x19 }, "ldsetpa x21, x22, [sp]")]
    [DataRow(new byte[] { 0x61, 0x31, 0xe2, 0x19 }, "ldsetpal x1, x2, [x11]")]
    [DataRow(new byte[] { 0xf5, 0x33, 0xf6, 0x19 }, "ldsetpal x21, x22, [sp]")]
    [DataRow(new byte[] { 0x61, 0x31, 0x62, 0x19 }, "ldsetpl x1, x2, [x11]")]
    [DataRow(new byte[] { 0xf5, 0x33, 0x76, 0x19 }, "ldsetpl x21, x22, [sp]")]
    [DataRow(new byte[] { 0x61, 0x81, 0x22, 0x19 }, "swpp x1, x2, [x11]")]
    [DataRow(new byte[] { 0xf5, 0x83, 0x36, 0x19 }, "swpp x21, x22, [sp]")]
    [DataRow(new byte[] { 0x61, 0x81, 0xa2, 0x19 }, "swppa x1, x2, [x11]")]
    [DataRow(new byte[] { 0xf5, 0x83, 0xb6, 0x19 }, "swppa x21, x22, [sp]")]
    [DataRow(new byte[] { 0x61, 0x81, 0xe2, 0x19 }, "swppal x1, x2, [x11]")]
    [DataRow(new byte[] { 0xf5, 0x83, 0xf6, 0x19 }, "swppal x21, x22, [sp]")]
    [DataRow(new byte[] { 0x61, 0x81, 0x62, 0x19 }, "swppl x1, x2, [x11]")]
    [DataRow(new byte[] { 0xf5, 0x83, 0x76, 0x19 }, "swppl x21, x22, [sp]")]
    public void armv9_4_lse128_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
