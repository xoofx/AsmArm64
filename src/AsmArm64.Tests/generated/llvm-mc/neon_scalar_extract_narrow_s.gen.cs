// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0xd3, 0x29, 0x21, 0x7e }, "sqxtun b19, h14")]
    [DataRow(new byte[] { 0xf5, 0x29, 0x61, 0x7e }, "sqxtun h21, s15")]
    [DataRow(new byte[] { 0x94, 0x29, 0xa1, 0x7e }, "sqxtun s20, d12")]
    [DataRow(new byte[] { 0x52, 0x4a, 0x21, 0x5e }, "sqxtn b18, h18")]
    [DataRow(new byte[] { 0x34, 0x4a, 0x61, 0x5e }, "sqxtn h20, s17")]
    [DataRow(new byte[] { 0xd3, 0x49, 0xa1, 0x5e }, "sqxtn s19, d14")]
    [DataRow(new byte[] { 0x52, 0x4a, 0x21, 0x7e }, "uqxtn b18, h18")]
    [DataRow(new byte[] { 0x34, 0x4a, 0x61, 0x7e }, "uqxtn h20, s17")]
    [DataRow(new byte[] { 0xd3, 0x49, 0xa1, 0x7e }, "uqxtn s19, d14")]
    public void neon_scalar_extract_narrow_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
