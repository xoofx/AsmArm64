// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0xff, 0x1f, 0xdf, 0x0e }, "famax v31.4h, v31.4h, v31.4h")]
    [DataRow(new byte[] { 0x1f, 0x1c, 0xdf, 0x0e }, "famax v31.4h, v0.4h, v31.4h")]
    [DataRow(new byte[] { 0x00, 0x1c, 0xc0, 0x0e }, "famax v0.4h, v0.4h, v0.4h")]
    [DataRow(new byte[] { 0xff, 0x1f, 0xdf, 0x4e }, "famax v31.8h, v31.8h, v31.8h")]
    [DataRow(new byte[] { 0xff, 0x1f, 0xc0, 0x4e }, "famax v31.8h, v31.8h, v0.8h")]
    [DataRow(new byte[] { 0x00, 0x1c, 0xc0, 0x4e }, "famax v0.8h, v0.8h, v0.8h")]
    [DataRow(new byte[] { 0xff, 0xdf, 0xbf, 0x0e }, "famax v31.2s, v31.2s, v31.2s")]
    [DataRow(new byte[] { 0x1f, 0xdc, 0xa0, 0x0e }, "famax v31.2s, v0.2s, v0.2s")]
    [DataRow(new byte[] { 0x00, 0xdc, 0xa0, 0x0e }, "famax v0.2s, v0.2s, v0.2s")]
    [DataRow(new byte[] { 0xff, 0xdf, 0xbf, 0x4e }, "famax v31.4s, v31.4s, v31.4s")]
    [DataRow(new byte[] { 0xe0, 0xdf, 0xbf, 0x4e }, "famax v0.4s, v31.4s, v31.4s")]
    [DataRow(new byte[] { 0x00, 0xdc, 0xa0, 0x4e }, "famax v0.4s, v0.4s, v0.4s")]
    [DataRow(new byte[] { 0xff, 0xdf, 0xff, 0x4e }, "famax v31.2d, v31.2d, v31.2d")]
    [DataRow(new byte[] { 0x00, 0xdc, 0xff, 0x4e }, "famax v0.2d, v0.2d, v31.2d")]
    [DataRow(new byte[] { 0x00, 0xdc, 0xe0, 0x4e }, "famax v0.2d, v0.2d, v0.2d")]
    [DataRow(new byte[] { 0xff, 0x1f, 0xdf, 0x2e }, "famin v31.4h, v31.4h, v31.4h")]
    [DataRow(new byte[] { 0x1f, 0x1c, 0xdf, 0x2e }, "famin v31.4h, v0.4h, v31.4h")]
    [DataRow(new byte[] { 0x00, 0x1c, 0xc0, 0x2e }, "famin v0.4h, v0.4h, v0.4h")]
    [DataRow(new byte[] { 0xff, 0x1f, 0xdf, 0x6e }, "famin v31.8h, v31.8h, v31.8h")]
    [DataRow(new byte[] { 0xff, 0x1f, 0xc0, 0x6e }, "famin v31.8h, v31.8h, v0.8h")]
    [DataRow(new byte[] { 0x00, 0x1c, 0xc0, 0x6e }, "famin v0.8h, v0.8h, v0.8h")]
    [DataRow(new byte[] { 0xff, 0xdf, 0xbf, 0x2e }, "famin v31.2s, v31.2s, v31.2s")]
    [DataRow(new byte[] { 0x1f, 0xdc, 0xa0, 0x2e }, "famin v31.2s, v0.2s, v0.2s")]
    [DataRow(new byte[] { 0x00, 0xdc, 0xa0, 0x2e }, "famin v0.2s, v0.2s, v0.2s")]
    [DataRow(new byte[] { 0xff, 0xdf, 0xbf, 0x6e }, "famin v31.4s, v31.4s, v31.4s")]
    [DataRow(new byte[] { 0xe0, 0xdf, 0xbf, 0x6e }, "famin v0.4s, v31.4s, v31.4s")]
    [DataRow(new byte[] { 0x00, 0xdc, 0xa0, 0x6e }, "famin v0.4s, v0.4s, v0.4s")]
    [DataRow(new byte[] { 0xff, 0xdf, 0xff, 0x6e }, "famin v31.2d, v31.2d, v31.2d")]
    [DataRow(new byte[] { 0x00, 0xdc, 0xff, 0x6e }, "famin v0.2d, v0.2d, v31.2d")]
    [DataRow(new byte[] { 0x00, 0xdc, 0xe0, 0x6e }, "famin v0.2d, v0.2d, v0.2d")]
    public void FP8_faminmax_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
