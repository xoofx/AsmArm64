// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0x20, 0x20, 0x02, 0x9a }, "addpt x0, x1, x2")]
    [DataRow(new byte[] { 0xff, 0x23, 0x02, 0x9a }, "addpt sp, sp, x2")]
    [DataRow(new byte[] { 0x20, 0x20, 0x02, 0x9a }, "addpt x0, x1, x2")]
    [DataRow(new byte[] { 0x20, 0x3c, 0x02, 0x9a }, "addpt x0, x1, x2, lsl #7")]
    [DataRow(new byte[] { 0xff, 0x3f, 0x02, 0x9a }, "addpt sp, sp, x2, lsl #7")]
    [DataRow(new byte[] { 0x20, 0x20, 0x02, 0xda }, "subpt x0, x1, x2")]
    [DataRow(new byte[] { 0xff, 0x23, 0x02, 0xda }, "subpt sp, sp, x2")]
    [DataRow(new byte[] { 0x20, 0x20, 0x02, 0xda }, "subpt x0, x1, x2")]
    [DataRow(new byte[] { 0x20, 0x3c, 0x02, 0xda }, "subpt x0, x1, x2, lsl #7")]
    [DataRow(new byte[] { 0xff, 0x3f, 0x02, 0xda }, "subpt sp, sp, x2, lsl #7")]
    [DataRow(new byte[] { 0x20, 0x0c, 0x62, 0x9b }, "maddpt x0, x1, x2, x3")]
    [DataRow(new byte[] { 0x20, 0x8c, 0x62, 0x9b }, "msubpt x0, x1, x2, x3")]
    public void armv9_5a_cpa_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
