// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0x20, 0x4c, 0x22, 0x5e }, "sqshl b0, b1, b2")]
    [DataRow(new byte[] { 0x6a, 0x4d, 0x6c, 0x5e }, "sqshl h10, h11, h12")]
    [DataRow(new byte[] { 0xb4, 0x4e, 0xa2, 0x5e }, "sqshl s20, s21, s2")]
    [DataRow(new byte[] { 0xf1, 0x4f, 0xe8, 0x5e }, "sqshl d17, d31, d8")]
    [DataRow(new byte[] { 0x20, 0x4c, 0x22, 0x7e }, "uqshl b0, b1, b2")]
    [DataRow(new byte[] { 0x6a, 0x4d, 0x6c, 0x7e }, "uqshl h10, h11, h12")]
    [DataRow(new byte[] { 0xb4, 0x4e, 0xa2, 0x7e }, "uqshl s20, s21, s2")]
    [DataRow(new byte[] { 0xf1, 0x4f, 0xe8, 0x7e }, "uqshl d17, d31, d8")]
    public void neon_scalar_saturating_shift_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
