// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0x15, 0x3e, 0x4d, 0x5e }, "frecps h21, h16, h13")]
    [DataRow(new byte[] { 0x15, 0xfe, 0x2d, 0x5e }, "frecps s21, s16, s13")]
    [DataRow(new byte[] { 0xd6, 0xff, 0x75, 0x5e }, "frecps d22, d30, d21")]
    [DataRow(new byte[] { 0xb5, 0x3c, 0xcc, 0x5e }, "frsqrts h21, h5, h12")]
    [DataRow(new byte[] { 0xb5, 0xfc, 0xac, 0x5e }, "frsqrts s21, s5, s12")]
    [DataRow(new byte[] { 0xc8, 0xfe, 0xf2, 0x5e }, "frsqrts d8, d22, d18")]
    [DataRow(new byte[] { 0xd3, 0xd9, 0xf9, 0x5e }, "frecpe h19, h14")]
    [DataRow(new byte[] { 0xd3, 0xd9, 0xa1, 0x5e }, "frecpe s19, s14")]
    [DataRow(new byte[] { 0xad, 0xd9, 0xe1, 0x5e }, "frecpe d13, d13")]
    [DataRow(new byte[] { 0x52, 0xf9, 0xf9, 0x5e }, "frecpx h18, h10")]
    [DataRow(new byte[] { 0x52, 0xf9, 0xa1, 0x5e }, "frecpx s18, s10")]
    [DataRow(new byte[] { 0x70, 0xfa, 0xe1, 0x5e }, "frecpx d16, d19")]
    [DataRow(new byte[] { 0xb6, 0xd9, 0xf9, 0x7e }, "frsqrte h22, h13")]
    [DataRow(new byte[] { 0xb6, 0xd9, 0xa1, 0x7e }, "frsqrte s22, s13")]
    [DataRow(new byte[] { 0x95, 0xd9, 0xe1, 0x7e }, "frsqrte d21, d12")]
    public void neon_scalar_recip_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
