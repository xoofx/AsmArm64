// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0x20, 0x40, 0x28, 0x1e }, "frint32z s0, s1")]
    [DataRow(new byte[] { 0x20, 0x40, 0x68, 0x1e }, "frint32z d0, d1")]
    [DataRow(new byte[] { 0x62, 0x40, 0x29, 0x1e }, "frint64z s2, s3")]
    [DataRow(new byte[] { 0x62, 0x40, 0x69, 0x1e }, "frint64z d2, d3")]
    [DataRow(new byte[] { 0xa4, 0xc0, 0x28, 0x1e }, "frint32x s4, s5")]
    [DataRow(new byte[] { 0xa4, 0xc0, 0x68, 0x1e }, "frint32x d4, d5")]
    [DataRow(new byte[] { 0xe6, 0xc0, 0x29, 0x1e }, "frint64x s6, s7")]
    [DataRow(new byte[] { 0xe6, 0xc0, 0x69, 0x1e }, "frint64x d6, d7")]
    [DataRow(new byte[] { 0x20, 0xe8, 0x21, 0x0e }, "frint32z v0.2s, v1.2s")]
    [DataRow(new byte[] { 0x20, 0xe8, 0x61, 0x4e }, "frint32z v0.2d, v1.2d")]
    [DataRow(new byte[] { 0x20, 0xe8, 0x21, 0x4e }, "frint32z v0.4s, v1.4s")]
    [DataRow(new byte[] { 0x62, 0xf8, 0x21, 0x0e }, "frint64z v2.2s, v3.2s")]
    [DataRow(new byte[] { 0x62, 0xf8, 0x61, 0x4e }, "frint64z v2.2d, v3.2d")]
    [DataRow(new byte[] { 0x62, 0xf8, 0x21, 0x4e }, "frint64z v2.4s, v3.4s")]
    [DataRow(new byte[] { 0xa4, 0xe8, 0x21, 0x2e }, "frint32x v4.2s, v5.2s")]
    [DataRow(new byte[] { 0xa4, 0xe8, 0x61, 0x6e }, "frint32x v4.2d, v5.2d")]
    [DataRow(new byte[] { 0xa4, 0xe8, 0x21, 0x6e }, "frint32x v4.4s, v5.4s")]
    [DataRow(new byte[] { 0xe6, 0xf8, 0x21, 0x2e }, "frint64x v6.2s, v7.2s")]
    [DataRow(new byte[] { 0xe6, 0xf8, 0x61, 0x6e }, "frint64x v6.2d, v7.2d")]
    [DataRow(new byte[] { 0xe6, 0xf8, 0x21, 0x6e }, "frint64x v6.4s, v7.4s")]
    [DataRow(new byte[] { 0x20, 0x40, 0x28, 0x1e }, "frint32z s0, s1")]
    [DataRow(new byte[] { 0x20, 0x40, 0x68, 0x1e }, "frint32z d0, d1")]
    [DataRow(new byte[] { 0x62, 0x40, 0x29, 0x1e }, "frint64z s2, s3")]
    [DataRow(new byte[] { 0x62, 0x40, 0x69, 0x1e }, "frint64z d2, d3")]
    [DataRow(new byte[] { 0xa4, 0xc0, 0x28, 0x1e }, "frint32x s4, s5")]
    [DataRow(new byte[] { 0xa4, 0xc0, 0x68, 0x1e }, "frint32x d4, d5")]
    [DataRow(new byte[] { 0xe6, 0xc0, 0x29, 0x1e }, "frint64x s6, s7")]
    [DataRow(new byte[] { 0xe6, 0xc0, 0x69, 0x1e }, "frint64x d6, d7")]
    [DataRow(new byte[] { 0x20, 0xe8, 0x21, 0x0e }, "frint32z v0.2s, v1.2s")]
    [DataRow(new byte[] { 0x20, 0xe8, 0x61, 0x4e }, "frint32z v0.2d, v1.2d")]
    [DataRow(new byte[] { 0x20, 0xe8, 0x21, 0x4e }, "frint32z v0.4s, v1.4s")]
    [DataRow(new byte[] { 0x62, 0xf8, 0x21, 0x0e }, "frint64z v2.2s, v3.2s")]
    [DataRow(new byte[] { 0x62, 0xf8, 0x61, 0x4e }, "frint64z v2.2d, v3.2d")]
    [DataRow(new byte[] { 0x62, 0xf8, 0x21, 0x4e }, "frint64z v2.4s, v3.4s")]
    [DataRow(new byte[] { 0xa4, 0xe8, 0x21, 0x2e }, "frint32x v4.2s, v5.2s")]
    [DataRow(new byte[] { 0xa4, 0xe8, 0x61, 0x6e }, "frint32x v4.2d, v5.2d")]
    [DataRow(new byte[] { 0xa4, 0xe8, 0x21, 0x6e }, "frint32x v4.4s, v5.4s")]
    [DataRow(new byte[] { 0xe6, 0xf8, 0x21, 0x2e }, "frint64x v6.2s, v7.2s")]
    [DataRow(new byte[] { 0xe6, 0xf8, 0x61, 0x6e }, "frint64x v6.2d, v7.2d")]
    [DataRow(new byte[] { 0xe6, 0xf8, 0x21, 0x6e }, "frint64x v6.4s, v7.4s")]
    public void armv8_5a_frint_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
