// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0xff, 0x83, 0x00, 0x91 }, "add sp, sp, #32")]
    [DataRow(new byte[] { 0x83, 0x00, 0x50, 0xb1 }, "adds x3, x4, #1024, lsl #12")]
    [DataRow(new byte[] { 0x5f, 0x60, 0x23, 0x8b }, "add sp, x2, x3")]
    [DataRow(new byte[] { 0x01, 0x10, 0x28, 0x1e }, "fmov s1, #0.12500000")]
    [DataRow(new byte[] { 0xbf, 0x33, 0x03, 0xd5 }, "dmb osh")]
    [DataRow(new byte[] { 0xe3, 0x09, 0x42, 0x28 }, "ldnp w3, w2, [x15, #16]")]
    [DataRow(new byte[] { 0x95, 0x78, 0xa5, 0xf8 }, "prfm pstl3strm, [x4, x5, lsl #3]")]
    public void arm64_optional_hash_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
