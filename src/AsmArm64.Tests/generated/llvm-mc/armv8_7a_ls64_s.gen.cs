// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0xa0, 0xd1, 0x3f, 0xf8 }, "ld64b x0, [x13]")]
    [DataRow(new byte[] { 0xae, 0x91, 0x3f, 0xf8 }, "st64b x14, [x13]")]
    [DataRow(new byte[] { 0xb4, 0xb1, 0x21, 0xf8 }, "st64bv x1, x20, [x13]")]
    [DataRow(new byte[] { 0xb6, 0xa1, 0x21, 0xf8 }, "st64bv0 x1, x22, [x13]")]
    [DataRow(new byte[] { 0xe0, 0xd3, 0x3f, 0xf8 }, "ld64b x0, [sp]")]
    [DataRow(new byte[] { 0xee, 0x93, 0x3f, 0xf8 }, "st64b x14, [sp]")]
    [DataRow(new byte[] { 0xf4, 0xb3, 0x21, 0xf8 }, "st64bv x1, x20, [sp]")]
    [DataRow(new byte[] { 0xf6, 0xa3, 0x21, 0xf8 }, "st64bv0 x1, x22, [sp]")]
    [DataRow(new byte[] { 0xa0, 0xd0, 0x38, 0xd5 }, "mrs x0, ACCDATA_EL1")]
    [DataRow(new byte[] { 0xa0, 0xd0, 0x18, 0xd5 }, "msr ACCDATA_EL1, x0")]
    public void armv8_7a_ls64_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
