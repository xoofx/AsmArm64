// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0x1f, 0x24, 0x03, 0xd5 }, "bti")]
    [DataRow(new byte[] { 0x5f, 0x24, 0x03, 0xd5 }, "bti c")]
    [DataRow(new byte[] { 0x9f, 0x24, 0x03, 0xd5 }, "bti j")]
    [DataRow(new byte[] { 0xdf, 0x24, 0x03, 0xd5 }, "bti jc")]
    [DataRow(new byte[] { 0x1f, 0x24, 0x03, 0xd5 }, "bti")]
    [DataRow(new byte[] { 0x5f, 0x24, 0x03, 0xd5 }, "bti c")]
    [DataRow(new byte[] { 0x9f, 0x24, 0x03, 0xd5 }, "bti j")]
    [DataRow(new byte[] { 0xdf, 0x24, 0x03, 0xd5 }, "bti jc")]
    [DataRow(new byte[] { 0x1f, 0x24, 0x03, 0xd5 }, "bti")]
    [DataRow(new byte[] { 0x5f, 0x24, 0x03, 0xd5 }, "bti c")]
    [DataRow(new byte[] { 0x9f, 0x24, 0x03, 0xd5 }, "bti j")]
    [DataRow(new byte[] { 0xdf, 0x24, 0x03, 0xd5 }, "bti jc")]
    [DataRow(new byte[] { 0x1f, 0x24, 0x03, 0xd5 }, "bti")]
    [DataRow(new byte[] { 0x5f, 0x24, 0x03, 0xd5 }, "bti c")]
    [DataRow(new byte[] { 0x9f, 0x24, 0x03, 0xd5 }, "bti j")]
    [DataRow(new byte[] { 0xdf, 0x24, 0x03, 0xd5 }, "bti jc")]
    [DataRow(new byte[] { 0x1f, 0x24, 0x03, 0xd5 }, "bti")]
    [DataRow(new byte[] { 0x5f, 0x24, 0x03, 0xd5 }, "bti c")]
    [DataRow(new byte[] { 0x9f, 0x24, 0x03, 0xd5 }, "bti j")]
    [DataRow(new byte[] { 0xdf, 0x24, 0x03, 0xd5 }, "bti jc")]
    [DataRow(new byte[] { 0x1f, 0x24, 0x03, 0xd5 }, "bti")]
    [DataRow(new byte[] { 0x5f, 0x24, 0x03, 0xd5 }, "bti c")]
    [DataRow(new byte[] { 0x9f, 0x24, 0x03, 0xd5 }, "bti j")]
    [DataRow(new byte[] { 0xdf, 0x24, 0x03, 0xd5 }, "bti jc")]
    public void armv8_5a_bti_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
