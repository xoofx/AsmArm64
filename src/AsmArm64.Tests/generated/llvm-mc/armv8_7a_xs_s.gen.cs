// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0x3f, 0x32, 0x03, 0xd5 }, "dsb oshnxs")]
    [DataRow(new byte[] { 0x3f, 0x36, 0x03, 0xd5 }, "dsb nshnxs")]
    [DataRow(new byte[] { 0x3f, 0x3a, 0x03, 0xd5 }, "dsb ishnxs")]
    [DataRow(new byte[] { 0x3f, 0x3e, 0x03, 0xd5 }, "dsb synxs")]
    [DataRow(new byte[] { 0x3f, 0x32, 0x03, 0xd5 }, "dsb oshnxs")]
    [DataRow(new byte[] { 0x3f, 0x36, 0x03, 0xd5 }, "dsb nshnxs")]
    [DataRow(new byte[] { 0x3f, 0x3a, 0x03, 0xd5 }, "dsb ishnxs")]
    [DataRow(new byte[] { 0x3f, 0x3e, 0x03, 0xd5 }, "dsb synxs")]
    [DataRow(new byte[] { 0x21, 0x90, 0x0c, 0xd5 }, "tlbi ipas2e1isnxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x90, 0x0c, 0xd5 }, "tlbi ipas2le1isnxs, x1")]
    [DataRow(new byte[] { 0x1f, 0x93, 0x08, 0xd5 }, "tlbi vmalle1isnxs")]
    [DataRow(new byte[] { 0x1f, 0x93, 0x0c, 0xd5 }, "tlbi alle2isnxs")]
    [DataRow(new byte[] { 0x1f, 0x93, 0x0e, 0xd5 }, "tlbi alle3isnxs")]
    [DataRow(new byte[] { 0x21, 0x93, 0x08, 0xd5 }, "tlbi vae1isnxs, x1")]
    [DataRow(new byte[] { 0x21, 0x93, 0x0c, 0xd5 }, "tlbi vae2isnxs, x1")]
    [DataRow(new byte[] { 0x21, 0x93, 0x0e, 0xd5 }, "tlbi vae3isnxs, x1")]
    [DataRow(new byte[] { 0x41, 0x93, 0x08, 0xd5 }, "tlbi aside1isnxs, x1")]
    [DataRow(new byte[] { 0x61, 0x93, 0x08, 0xd5 }, "tlbi vaae1isnxs, x1")]
    [DataRow(new byte[] { 0x9f, 0x93, 0x0c, 0xd5 }, "tlbi alle1isnxs")]
    [DataRow(new byte[] { 0xa1, 0x93, 0x08, 0xd5 }, "tlbi vale1isnxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x93, 0x0c, 0xd5 }, "tlbi vale2isnxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x93, 0x0e, 0xd5 }, "tlbi vale3isnxs, x1")]
    [DataRow(new byte[] { 0xdf, 0x93, 0x0c, 0xd5 }, "tlbi vmalls12e1isnxs")]
    [DataRow(new byte[] { 0xe1, 0x93, 0x08, 0xd5 }, "tlbi vaale1isnxs, x1")]
    [DataRow(new byte[] { 0x21, 0x94, 0x0c, 0xd5 }, "tlbi ipas2e1nxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x94, 0x0c, 0xd5 }, "tlbi ipas2le1nxs, x1")]
    [DataRow(new byte[] { 0x1f, 0x97, 0x08, 0xd5 }, "tlbi vmalle1nxs")]
    [DataRow(new byte[] { 0x1f, 0x97, 0x0c, 0xd5 }, "tlbi alle2nxs")]
    [DataRow(new byte[] { 0x1f, 0x97, 0x0e, 0xd5 }, "tlbi alle3nxs")]
    [DataRow(new byte[] { 0x21, 0x97, 0x08, 0xd5 }, "tlbi vae1nxs, x1")]
    [DataRow(new byte[] { 0x21, 0x97, 0x0c, 0xd5 }, "tlbi vae2nxs, x1")]
    [DataRow(new byte[] { 0x21, 0x97, 0x0e, 0xd5 }, "tlbi vae3nxs, x1")]
    [DataRow(new byte[] { 0x41, 0x97, 0x08, 0xd5 }, "tlbi aside1nxs, x1")]
    [DataRow(new byte[] { 0x61, 0x97, 0x08, 0xd5 }, "tlbi vaae1nxs, x1")]
    [DataRow(new byte[] { 0x9f, 0x97, 0x0c, 0xd5 }, "tlbi alle1nxs")]
    [DataRow(new byte[] { 0xa1, 0x97, 0x08, 0xd5 }, "tlbi vale1nxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x97, 0x0c, 0xd5 }, "tlbi vale2nxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x97, 0x0e, 0xd5 }, "tlbi vale3nxs, x1")]
    [DataRow(new byte[] { 0xdf, 0x97, 0x0c, 0xd5 }, "tlbi vmalls12e1nxs")]
    [DataRow(new byte[] { 0xe1, 0x97, 0x08, 0xd5 }, "tlbi vaale1nxs, x1")]
    [DataRow(new byte[] { 0x1f, 0x91, 0x08, 0xd5 }, "tlbi vmalle1osnxs")]
    [DataRow(new byte[] { 0x21, 0x91, 0x08, 0xd5 }, "tlbi vae1osnxs, x1")]
    [DataRow(new byte[] { 0x41, 0x91, 0x08, 0xd5 }, "tlbi aside1osnxs, x1")]
    [DataRow(new byte[] { 0x61, 0x91, 0x08, 0xd5 }, "tlbi vaae1osnxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x91, 0x08, 0xd5 }, "tlbi vale1osnxs, x1")]
    [DataRow(new byte[] { 0xe1, 0x91, 0x08, 0xd5 }, "tlbi vaale1osnxs, x1")]
    [DataRow(new byte[] { 0x01, 0x94, 0x0c, 0xd5 }, "tlbi ipas2e1osnxs, x1")]
    [DataRow(new byte[] { 0x81, 0x94, 0x0c, 0xd5 }, "tlbi ipas2le1osnxs, x1")]
    [DataRow(new byte[] { 0x21, 0x91, 0x0c, 0xd5 }, "tlbi vae2osnxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x91, 0x0c, 0xd5 }, "tlbi vale2osnxs, x1")]
    [DataRow(new byte[] { 0xdf, 0x91, 0x0c, 0xd5 }, "tlbi vmalls12e1osnxs")]
    [DataRow(new byte[] { 0x21, 0x91, 0x0e, 0xd5 }, "tlbi vae3osnxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x91, 0x0e, 0xd5 }, "tlbi vale3osnxs, x1")]
    [DataRow(new byte[] { 0x1f, 0x91, 0x0c, 0xd5 }, "tlbi alle2osnxs")]
    [DataRow(new byte[] { 0x9f, 0x91, 0x0c, 0xd5 }, "tlbi alle1osnxs")]
    [DataRow(new byte[] { 0x1f, 0x91, 0x0e, 0xd5 }, "tlbi alle3osnxs")]
    [DataRow(new byte[] { 0x21, 0x96, 0x08, 0xd5 }, "tlbi rvae1nxs, x1")]
    [DataRow(new byte[] { 0x61, 0x96, 0x08, 0xd5 }, "tlbi rvaae1nxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x96, 0x08, 0xd5 }, "tlbi rvale1nxs, x1")]
    [DataRow(new byte[] { 0xe1, 0x96, 0x08, 0xd5 }, "tlbi rvaale1nxs, x1")]
    [DataRow(new byte[] { 0x21, 0x92, 0x08, 0xd5 }, "tlbi rvae1isnxs, x1")]
    [DataRow(new byte[] { 0x61, 0x92, 0x08, 0xd5 }, "tlbi rvaae1isnxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x92, 0x08, 0xd5 }, "tlbi rvale1isnxs, x1")]
    [DataRow(new byte[] { 0xe1, 0x92, 0x08, 0xd5 }, "tlbi rvaale1isnxs, x1")]
    [DataRow(new byte[] { 0x21, 0x95, 0x08, 0xd5 }, "tlbi rvae1osnxs, x1")]
    [DataRow(new byte[] { 0x61, 0x95, 0x08, 0xd5 }, "tlbi rvaae1osnxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x95, 0x08, 0xd5 }, "tlbi rvale1osnxs, x1")]
    [DataRow(new byte[] { 0xe1, 0x95, 0x08, 0xd5 }, "tlbi rvaale1osnxs, x1")]
    [DataRow(new byte[] { 0x41, 0x90, 0x0c, 0xd5 }, "tlbi ripas2e1isnxs, x1")]
    [DataRow(new byte[] { 0xc1, 0x90, 0x0c, 0xd5 }, "tlbi ripas2le1isnxs, x1")]
    [DataRow(new byte[] { 0x41, 0x94, 0x0c, 0xd5 }, "tlbi ripas2e1nxs, x1")]
    [DataRow(new byte[] { 0xc1, 0x94, 0x0c, 0xd5 }, "tlbi ripas2le1nxs, x1")]
    [DataRow(new byte[] { 0x61, 0x94, 0x0c, 0xd5 }, "tlbi ripas2e1osnxs, x1")]
    [DataRow(new byte[] { 0xe1, 0x94, 0x0c, 0xd5 }, "tlbi ripas2le1osnxs, x1")]
    [DataRow(new byte[] { 0x21, 0x96, 0x0c, 0xd5 }, "tlbi rvae2nxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x96, 0x0c, 0xd5 }, "tlbi rvale2nxs, x1")]
    [DataRow(new byte[] { 0x21, 0x92, 0x0c, 0xd5 }, "tlbi rvae2isnxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x92, 0x0c, 0xd5 }, "tlbi rvale2isnxs, x1")]
    [DataRow(new byte[] { 0x21, 0x95, 0x0c, 0xd5 }, "tlbi rvae2osnxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x95, 0x0c, 0xd5 }, "tlbi rvale2osnxs, x1")]
    [DataRow(new byte[] { 0x21, 0x96, 0x0e, 0xd5 }, "tlbi rvae3nxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x96, 0x0e, 0xd5 }, "tlbi rvale3nxs, x1")]
    [DataRow(new byte[] { 0x21, 0x92, 0x0e, 0xd5 }, "tlbi rvae3isnxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x92, 0x0e, 0xd5 }, "tlbi rvale3isnxs, x1")]
    [DataRow(new byte[] { 0x21, 0x95, 0x0e, 0xd5 }, "tlbi rvae3osnxs, x1")]
    [DataRow(new byte[] { 0xa1, 0x95, 0x0e, 0xd5 }, "tlbi rvale3osnxs, x1")]
    public void armv8_7a_xs_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
