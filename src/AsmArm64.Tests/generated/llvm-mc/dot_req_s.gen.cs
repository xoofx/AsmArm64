// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System;
namespace AsmArm64.Tests;

partial class McInstructionTests
{
    [TestMethod]
    [DataRow(new byte[] { 0xe5, 0x03, 0x0b, 0xaa }, "mov x5, x11")]
    [DataRow(new byte[] { 0xe1, 0x03, 0x06, 0x2a }, "mov w1, w6")]
    [DataRow(new byte[] { 0xe1, 0x03, 0x06, 0x2a }, "mov w1, w6")]
    [DataRow(new byte[] { 0x06, 0xb8, 0x31, 0x0e }, "addv b6, v0.8b")]
    [DataRow(new byte[] { 0x85, 0x04, 0x0e, 0x5e }, "mov h5, v4.h[3]")]
    [DataRow(new byte[] { 0x80, 0x28, 0x24, 0x1e }, "fadd s0, s4, s4")]
    [DataRow(new byte[] { 0x62, 0x40, 0x60, 0x1e }, "fmov d2, d3")]
    [DataRow(new byte[] { 0xe2, 0x03, 0xc0, 0x3d }, "ldr q2, [sp]")]
    [DataRow(new byte[] { 0x20, 0x1c, 0xa1, 0x0e }, "mov v0.8b, v1.8b")]
    public void dot_req_s(byte[] code, string expectedAsm) => VerifyAsm(code, expectedAsm);
}
