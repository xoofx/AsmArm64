// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.Float;

[TestClass]
public class Arm64InstructionFactoryTests_FNEG_Float : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.FNEG"/>.
    /// </summary>
    [TestMethod]
    public void Test_FNEG_h_floatdp1_0()
    {
        TestInst(FNEG(H0, H1), asm => asm.FNEG(H0, H1), Arm64InstructionId.FNEG_h_floatdp1, Arm64Mnemonic.FNEG, "FNEG H0, H1");
        TestInst(FNEG(H31, H1), asm => asm.FNEG(H31, H1), Arm64InstructionId.FNEG_h_floatdp1, Arm64Mnemonic.FNEG, "FNEG H31, H1");
        TestInst(FNEG(H0, H31), asm => asm.FNEG(H0, H31), Arm64InstructionId.FNEG_h_floatdp1, Arm64Mnemonic.FNEG, "FNEG H0, H31");
        TestInst(FNEG(H31, H31), asm => asm.FNEG(H31, H31), Arm64InstructionId.FNEG_h_floatdp1, Arm64Mnemonic.FNEG, "FNEG H31, H31");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.FNEG"/>.
    /// </summary>
    [TestMethod]
    public void Test_FNEG_s_floatdp1_1()
    {
        TestInst(FNEG(S0, S1), asm => asm.FNEG(S0, S1), Arm64InstructionId.FNEG_s_floatdp1, Arm64Mnemonic.FNEG, "FNEG S0, S1");
        TestInst(FNEG(S31, S1), asm => asm.FNEG(S31, S1), Arm64InstructionId.FNEG_s_floatdp1, Arm64Mnemonic.FNEG, "FNEG S31, S1");
        TestInst(FNEG(S0, S31), asm => asm.FNEG(S0, S31), Arm64InstructionId.FNEG_s_floatdp1, Arm64Mnemonic.FNEG, "FNEG S0, S31");
        TestInst(FNEG(S31, S31), asm => asm.FNEG(S31, S31), Arm64InstructionId.FNEG_s_floatdp1, Arm64Mnemonic.FNEG, "FNEG S31, S31");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.FNEG"/>.
    /// </summary>
    [TestMethod]
    public void Test_FNEG_d_floatdp1_2()
    {
        TestInst(FNEG(D0, D1), asm => asm.FNEG(D0, D1), Arm64InstructionId.FNEG_d_floatdp1, Arm64Mnemonic.FNEG, "FNEG D0, D1");
        TestInst(FNEG(D31, D1), asm => asm.FNEG(D31, D1), Arm64InstructionId.FNEG_d_floatdp1, Arm64Mnemonic.FNEG, "FNEG D31, D1");
        TestInst(FNEG(D0, D31), asm => asm.FNEG(D0, D31), Arm64InstructionId.FNEG_d_floatdp1, Arm64Mnemonic.FNEG, "FNEG D0, D31");
        TestInst(FNEG(D31, D31), asm => asm.FNEG(D31, D31), Arm64InstructionId.FNEG_d_floatdp1, Arm64Mnemonic.FNEG, "FNEG D31, D31");
    }
}
