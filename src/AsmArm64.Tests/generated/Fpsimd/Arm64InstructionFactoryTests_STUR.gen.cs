// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System.Runtime.CompilerServices;
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.Fpsimd;

[TestClass]
public class Arm64InstructionFactoryTests_STUR_Fpsimd : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.STUR"/>.
    /// </summary>
    [TestMethod]
    public void Test_STUR_b_ldst_unscaled_0()
    {
        TestInst(STUR(B0, _[X2, 5]), Arm64InstructionId.STUR_b_ldst_unscaled, Arm64Mnemonic.STUR, "STUR B0, [X2, #5]");
        TestInst(STUR(B31, _[X2, 5]), Arm64InstructionId.STUR_b_ldst_unscaled, Arm64Mnemonic.STUR, "STUR B31, [X2, #5]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.STUR"/>.
    /// </summary>
    [TestMethod]
    public void Test_STUR_h_ldst_unscaled_1()
    {
        TestInst(STUR(H0, _[X2, 5]), Arm64InstructionId.STUR_h_ldst_unscaled, Arm64Mnemonic.STUR, "STUR H0, [X2, #5]");
        TestInst(STUR(H31, _[X2, 5]), Arm64InstructionId.STUR_h_ldst_unscaled, Arm64Mnemonic.STUR, "STUR H31, [X2, #5]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.STUR"/>.
    /// </summary>
    [TestMethod]
    public void Test_STUR_s_ldst_unscaled_2()
    {
        TestInst(STUR(S0, _[X2, 5]), Arm64InstructionId.STUR_s_ldst_unscaled, Arm64Mnemonic.STUR, "STUR S0, [X2, #5]");
        TestInst(STUR(S31, _[X2, 5]), Arm64InstructionId.STUR_s_ldst_unscaled, Arm64Mnemonic.STUR, "STUR S31, [X2, #5]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.STUR"/>.
    /// </summary>
    [TestMethod]
    public void Test_STUR_d_ldst_unscaled_3()
    {
        TestInst(STUR(D0, _[X2, 5]), Arm64InstructionId.STUR_d_ldst_unscaled, Arm64Mnemonic.STUR, "STUR D0, [X2, #5]");
        TestInst(STUR(D31, _[X2, 5]), Arm64InstructionId.STUR_d_ldst_unscaled, Arm64Mnemonic.STUR, "STUR D31, [X2, #5]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.STUR"/>.
    /// </summary>
    [TestMethod]
    public void Test_STUR_q_ldst_unscaled_4()
    {
        TestInst(STUR(Q0, _[X2, 5]), Arm64InstructionId.STUR_q_ldst_unscaled, Arm64Mnemonic.STUR, "STUR Q0, [X2, #5]");
        TestInst(STUR(Q31, _[X2, 5]), Arm64InstructionId.STUR_q_ldst_unscaled, Arm64Mnemonic.STUR, "STUR Q31, [X2, #5]");
    }
}
