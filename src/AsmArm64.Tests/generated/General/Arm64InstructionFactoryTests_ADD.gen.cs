// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System.Runtime.CompilerServices;
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.General;

[TestClass]
public class Arm64InstructionFactoryTests_ADD_General
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.ADD"/>.
    /// </summary>
    [TestMethod]
    public void Test_ADD_32_addsub_ext_0()
    {
        Assert.Inconclusive("Not handled ADD_32_addsub_ext - ADD         Wd|WSP, Wn|WSP, Wm {, extend, {#amount}}");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.ADD"/>.
    /// </summary>
    [TestMethod]
    public void Test_ADD_64_addsub_ext_1()
    {
        Assert.Inconclusive("Not handled ADD_64_addsub_ext - ADD         Xd|SP, Xn|SP, Rm {, extend, {#amount}}");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.ADD"/>.
    /// </summary>
    [TestMethod]
    public void Test_ADD_64_addsub_ext_2()
    {
        Assert.Inconclusive("Not handled ADD_64_addsub_ext - ADD         Xd|SP, Xn|SP, Rm {, extend, {#amount}}");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.ADD"/>.
    /// </summary>
    [TestMethod]
    public void Test_ADD_32_addsub_shift_5()
    {
        Assert.Inconclusive("Not handled ADD_32_addsub_shift - ADD         Wd, Wn, Wm {, shift, #amount}");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.ADD"/>.
    /// </summary>
    [TestMethod]
    public void Test_ADD_64_addsub_shift_6()
    {
        Assert.Inconclusive("Not handled ADD_64_addsub_shift - ADD         Xd, Xn, Xm {, shift, #amount}");
    }
}
