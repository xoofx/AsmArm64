// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System.Runtime.CompilerServices;
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.General;

[TestClass]
public class Arm64InstructionFactoryTests_SXTW_General : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.SXTW"/>.
    /// </summary>
    [TestMethod]
    public void Test_SXTW_sbfm_64m_bitfield_0()
    {
        TestInst(SXTW(X0, W1), Arm64InstructionId.SXTW_sbfm_64m_bitfield, Arm64Mnemonic.SXTW, "SXTW X0, W1");
        TestInst(SXTW(X15, W1), Arm64InstructionId.SXTW_sbfm_64m_bitfield, Arm64Mnemonic.SXTW, "SXTW X15, W1");
        TestInst(SXTW(XZR, W1), Arm64InstructionId.SXTW_sbfm_64m_bitfield, Arm64Mnemonic.SXTW, "SXTW XZR, W1");
        TestInst(SXTW(X0, W16), Arm64InstructionId.SXTW_sbfm_64m_bitfield, Arm64Mnemonic.SXTW, "SXTW X0, W16");
        TestInst(SXTW(X15, W16), Arm64InstructionId.SXTW_sbfm_64m_bitfield, Arm64Mnemonic.SXTW, "SXTW X15, W16");
        TestInst(SXTW(XZR, W16), Arm64InstructionId.SXTW_sbfm_64m_bitfield, Arm64Mnemonic.SXTW, "SXTW XZR, W16");
        TestInst(SXTW(X0, WZR), Arm64InstructionId.SXTW_sbfm_64m_bitfield, Arm64Mnemonic.SXTW, "SXTW X0, WZR");
        TestInst(SXTW(X15, WZR), Arm64InstructionId.SXTW_sbfm_64m_bitfield, Arm64Mnemonic.SXTW, "SXTW X15, WZR");
        TestInst(SXTW(XZR, WZR), Arm64InstructionId.SXTW_sbfm_64m_bitfield, Arm64Mnemonic.SXTW, "SXTW XZR, WZR");
    }
}
