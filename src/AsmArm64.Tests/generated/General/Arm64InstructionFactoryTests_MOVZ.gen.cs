// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System.Runtime.CompilerServices;
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.General;

[TestClass]
public class Arm64InstructionFactoryTests_MOVZ_General : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.MOVZ"/>.
    /// </summary>
    [TestMethod]
    public void Test_MOVZ_32_movewide_0()
    {
        TestInst(MOVZ(W0, 5, _LSL, 16), Arm64InstructionId.MOV_movz_32_movewide, Arm64Mnemonic.MOV, "MOV W0, #327680");
        TestInst(MOVZ(W15, 5, _LSL, 16), Arm64InstructionId.MOV_movz_32_movewide, Arm64Mnemonic.MOV, "MOV W15, #327680");
        TestInst(MOVZ(WZR, 5, _LSL, 16), Arm64InstructionId.MOV_movz_32_movewide, Arm64Mnemonic.MOV, "MOV WZR, #327680");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.MOVZ"/>.
    /// </summary>
    [TestMethod]
    public void Test_MOVZ_64_movewide_1()
    {
        TestInst(MOVZ(X0, 5, _LSL, 16), Arm64InstructionId.MOV_movz_64_movewide, Arm64Mnemonic.MOV, "MOV X0, #327680");
        TestInst(MOVZ(X15, 5, _LSL, 16), Arm64InstructionId.MOV_movz_64_movewide, Arm64Mnemonic.MOV, "MOV X15, #327680");
        TestInst(MOVZ(XZR, 5, _LSL, 16), Arm64InstructionId.MOV_movz_64_movewide, Arm64Mnemonic.MOV, "MOV XZR, #327680");
    }
}
