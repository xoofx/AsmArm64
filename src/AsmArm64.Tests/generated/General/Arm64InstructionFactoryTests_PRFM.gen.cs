// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.General;

[TestClass]
public class Arm64InstructionFactoryTests_PRFM_General : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.PRFM"/>.
    /// </summary>
    [TestMethod]
    public void Test_PRFM_p_ldst_pos_0()
    {
        TestInst(PRFM(PLDL1KEEP, _[X2, 40]), asm => asm.PRFM(PLDL1KEEP, _[X2, 40]), Arm64InstructionId.PRFM_p_ldst_pos, Arm64Mnemonic.PRFM, "PRFM PLDL1KEEP, [X2, #40]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.PRFM"/>.
    /// </summary>
    [TestMethod]
    public void Test_PRFM_p_loadlit_1()
    {
        TestInst(PRFM(PLDL1KEEP, 32), null, Arm64InstructionId.PRFM_p_loadlit, Arm64Mnemonic.PRFM, "PRFM PLDL1KEEP, #32");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.PRFM"/>.
    /// </summary>
    [TestMethod]
    public void Test_PRFM_p_ldst_regoff_2()
    {
        TestInst(PRFM(PLDL1KEEP, _[X2, X3, _LSL, 3]), asm => asm.PRFM(PLDL1KEEP, _[X2, X3, _LSL, 3]), Arm64InstructionId.PRFM_p_ldst_regoff, Arm64Mnemonic.PRFM, "PRFM PLDL1KEEP, [X2, X3, LSL #3]");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.PRFM"/>.
    /// </summary>
    [TestMethod]
    public void Test_PRFM_p_ldst_regoff_3()
    {
        TestInst(PRFM(PLDL1KEEP, _[X2, W3, _UXTW, 3]), asm => asm.PRFM(PLDL1KEEP, _[X2, W3, _UXTW, 3]), Arm64InstructionId.PRFM_p_ldst_regoff, Arm64Mnemonic.PRFM, "PRFM PLDL1KEEP, [X2, W3, UXTW #3]");
    }
}
