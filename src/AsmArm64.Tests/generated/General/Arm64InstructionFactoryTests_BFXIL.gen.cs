// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------

using System.Runtime.CompilerServices;
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.General;

[TestClass]
public class Arm64InstructionFactoryTests_BFXIL_General : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.BFXIL"/>.
    /// </summary>
    [TestMethod]
    public void Test_BFXIL_bfm_32m_bitfield_0()
    {
        TestInst(BFXIL(W0, W1, 5, 1), Arm64InstructionId.BFXIL_bfm_32m_bitfield, Arm64Mnemonic.BFXIL, "BFXIL W0, W1, #5, #1");
        TestInst(BFXIL(W15, W1, 5, 1), Arm64InstructionId.BFXIL_bfm_32m_bitfield, Arm64Mnemonic.BFXIL, "BFXIL W15, W1, #5, #1");
        TestInst(BFXIL(WZR, W1, 5, 1), Arm64InstructionId.BFXIL_bfm_32m_bitfield, Arm64Mnemonic.BFXIL, "BFXIL WZR, W1, #5, #1");
        TestInst(BFXIL(W0, W16, 5, 1), Arm64InstructionId.BFXIL_bfm_32m_bitfield, Arm64Mnemonic.BFXIL, "BFXIL W0, W16, #5, #1");
        TestInst(BFXIL(W15, W16, 5, 1), Arm64InstructionId.BFXIL_bfm_32m_bitfield, Arm64Mnemonic.BFXIL, "BFXIL W15, W16, #5, #1");
        TestInst(BFXIL(WZR, W16, 5, 1), Arm64InstructionId.BFXIL_bfm_32m_bitfield, Arm64Mnemonic.BFXIL, "BFXIL WZR, W16, #5, #1");
        TestInst(BFXIL(W0, WZR, 5, 1), Arm64InstructionId.BFC_bfm_32m_bitfield, Arm64Mnemonic.BFC, "BFC W0, #27, #6");
        TestInst(BFXIL(W15, WZR, 5, 1), Arm64InstructionId.BFC_bfm_32m_bitfield, Arm64Mnemonic.BFC, "BFC W15, #27, #6");
        TestInst(BFXIL(WZR, WZR, 5, 1), Arm64InstructionId.BFC_bfm_32m_bitfield, Arm64Mnemonic.BFC, "BFC WZR, #27, #6");
    }
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.BFXIL"/>.
    /// </summary>
    [TestMethod]
    public void Test_BFXIL_bfm_64m_bitfield_1()
    {
        TestInst(BFXIL(X0, X1, 5, 1), Arm64InstructionId.BFXIL_bfm_64m_bitfield, Arm64Mnemonic.BFXIL, "BFXIL X0, X1, #5, #1");
        TestInst(BFXIL(X15, X1, 5, 1), Arm64InstructionId.BFXIL_bfm_64m_bitfield, Arm64Mnemonic.BFXIL, "BFXIL X15, X1, #5, #1");
        TestInst(BFXIL(XZR, X1, 5, 1), Arm64InstructionId.BFXIL_bfm_64m_bitfield, Arm64Mnemonic.BFXIL, "BFXIL XZR, X1, #5, #1");
        TestInst(BFXIL(X0, X16, 5, 1), Arm64InstructionId.BFXIL_bfm_64m_bitfield, Arm64Mnemonic.BFXIL, "BFXIL X0, X16, #5, #1");
        TestInst(BFXIL(X15, X16, 5, 1), Arm64InstructionId.BFXIL_bfm_64m_bitfield, Arm64Mnemonic.BFXIL, "BFXIL X15, X16, #5, #1");
        TestInst(BFXIL(XZR, X16, 5, 1), Arm64InstructionId.BFXIL_bfm_64m_bitfield, Arm64Mnemonic.BFXIL, "BFXIL XZR, X16, #5, #1");
        TestInst(BFXIL(X0, XZR, 5, 1), Arm64InstructionId.BFC_bfm_64m_bitfield, Arm64Mnemonic.BFC, "BFC X0, #59, #6");
        TestInst(BFXIL(X15, XZR, 5, 1), Arm64InstructionId.BFC_bfm_64m_bitfield, Arm64Mnemonic.BFC, "BFC X15, #59, #6");
        TestInst(BFXIL(XZR, XZR, 5, 1), Arm64InstructionId.BFC_bfm_64m_bitfield, Arm64Mnemonic.BFC, "BFC XZR, #59, #6");
    }
}
