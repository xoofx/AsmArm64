// Copyright (c) Alexandre Mutel. All rights reserved.
// Licensed under the BSD-Clause 2 license.
// See license.txt file in the project root for full license information.
// ------------------------------------------------------------------------------
// This code was generated by AsmArm64.CodeGen.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// ------------------------------------------------------------------------------
// ReSharper disable All
// ------------------------------------------------------------------------------
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
using static AsmArm64.Arm64InstructionFactory;
using static AsmArm64.Arm64Factory;
namespace AsmArm64.Tests.General;

[TestClass]
public class Arm64InstructionFactoryTests_SUBG_General : Arm64InstructionFactoryTests
{
    
    /// <summary>
    /// Test of <see cref="Arm64InstructionFactory.SUBG"/>.
    /// </summary>
    [TestMethod]
    public void Test_SUBG_64_addsub_immtags_0()
    {
        TestInst(SUBG(X1, X2, 80, 5), asm => asm.SUBG(X1, X2, 80, 5), Arm64InstructionId.SUBG_64_addsub_immtags, Arm64Mnemonic.SUBG, "SUBG X1, X2, #80, #5");
        TestInst(SUBG(X17, X2, 80, 5), asm => asm.SUBG(X17, X2, 80, 5), Arm64InstructionId.SUBG_64_addsub_immtags, Arm64Mnemonic.SUBG, "SUBG X17, X2, #80, #5");
        TestInst(SUBG(SP, X2, 80, 5), asm => asm.SUBG(SP, X2, 80, 5), Arm64InstructionId.SUBG_64_addsub_immtags, Arm64Mnemonic.SUBG, "SUBG SP, X2, #80, #5");
        TestInst(SUBG(X1, X18, 80, 5), asm => asm.SUBG(X1, X18, 80, 5), Arm64InstructionId.SUBG_64_addsub_immtags, Arm64Mnemonic.SUBG, "SUBG X1, X18, #80, #5");
        TestInst(SUBG(X17, X18, 80, 5), asm => asm.SUBG(X17, X18, 80, 5), Arm64InstructionId.SUBG_64_addsub_immtags, Arm64Mnemonic.SUBG, "SUBG X17, X18, #80, #5");
        TestInst(SUBG(SP, X18, 80, 5), asm => asm.SUBG(SP, X18, 80, 5), Arm64InstructionId.SUBG_64_addsub_immtags, Arm64Mnemonic.SUBG, "SUBG SP, X18, #80, #5");
        TestInst(SUBG(X1, SP, 80, 5), asm => asm.SUBG(X1, SP, 80, 5), Arm64InstructionId.SUBG_64_addsub_immtags, Arm64Mnemonic.SUBG, "SUBG X1, SP, #80, #5");
        TestInst(SUBG(X17, SP, 80, 5), asm => asm.SUBG(X17, SP, 80, 5), Arm64InstructionId.SUBG_64_addsub_immtags, Arm64Mnemonic.SUBG, "SUBG X17, SP, #80, #5");
        TestInst(SUBG(SP, SP, 80, 5), asm => asm.SUBG(SP, SP, 80, 5), Arm64InstructionId.SUBG_64_addsub_immtags, Arm64Mnemonic.SUBG, "SUBG SP, SP, #80, #5");
    }
}
